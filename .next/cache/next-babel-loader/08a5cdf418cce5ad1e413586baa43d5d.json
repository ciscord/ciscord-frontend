{"ast":null,"code":"var _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Input/ChatInput.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { useContext } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { UserContext } from 'context/UserContext';\nimport dynamic from 'next/dynamic';\nimport cuid from 'cuid';\nimport { SEND_MESSAGE, GET_LAST_MESSAGES } from 'apis/Message';\nimport plusIcon from 'public/icons/plus.svg';\nimport InputComponent from './InputComponent';\nimport * as S from './ChatInput.styled';\nconst DynamicTypingStatus = dynamic(() => import('./TypingStatus/TypingStatus'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./TypingStatus/TypingStatus')],\n    modules: ['./TypingStatus/TypingStatus']\n  }\n});\nconst ChatInput = ({\n  dropzoneItems\n}) => {\n  const [sendMessage] = useMutation(SEND_MESSAGE);\n  const {\n    user\n  } = useContext(UserContext);\n  const handleSendMessage = async ({\n    body,\n    channelUrl,\n    communityUrl,\n    mentions,\n    urlList\n  }) => {\n    const message = {\n      body,\n      channelUrl: `${communityUrl}/${channelUrl}`,\n      urlList,\n      mentions: mentions ? mentions.map(e => e.id) : [],\n      communityUrl\n    };\n    await sendMessage({\n      variables: message,\n      optimisticResponse: {\n        __typename: 'Mutation',\n        sendMessage: _objectSpread({\n          __typename: 'Message'\n        }, message, {\n          id: cuid(),\n          createdAt: new Date(),\n          updatedAt: new Date(),\n          remoteAttachments: [],\n          children: [],\n          reactions: [],\n          author: user\n        })\n      },\n      update: (proxy, {\n        data: {\n          sendMessage: sendMessageData\n        }\n      }) => {\n        const data = proxy.readQuery({\n          query: GET_LAST_MESSAGES,\n          variables: {\n            channelUrl: `${communityUrl}/${channelUrl}`\n          }\n        });\n        let messagesData = _objectSpread({}, data);\n        if (data.messages.filter(message => message.id === sendMessageData.id).length === 0) {\n          messagesData = _objectSpread({}, data, {\n            messages: [...data.messages, sendMessageData]\n          });\n        }\n        proxy.writeQuery({\n          query: GET_LAST_MESSAGES,\n          data: messagesData,\n          variables: {\n            channelUrl: `${communityUrl}/${channelUrl}`\n          }\n        });\n      }\n    });\n    return true;\n  };\n  return __jsx(S.ChatInputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(S.AddButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(S.PlusIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(\"use\", {\n    xlinkHref: `${plusIcon}#icon-plus`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }))), __jsx(InputComponent, {\n    onSendMessage: handleSendMessage,\n    dropzoneItems: dropzoneItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), __jsx(DynamicTypingStatus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n};\nexport default ChatInput;","map":{"version":3,"names":["useContext","useMutation","UserContext","dynamic","cuid","SEND_MESSAGE","GET_LAST_MESSAGES","plusIcon","InputComponent","S","DynamicTypingStatus","ssr","ChatInput","dropzoneItems","sendMessage","user","handleSendMessage","body","channelUrl","communityUrl","mentions","urlList","message","map","e","id","variables","optimisticResponse","__typename","createdAt","Date","updatedAt","remoteAttachments","children","reactions","author","update","proxy","data","sendMessageData","readQuery","query","messagesData","messages","filter","length","writeQuery"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Input/ChatInput.js"],"sourcesContent":["import { useContext } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { UserContext } from 'context/UserContext';\nimport dynamic from 'next/dynamic';\nimport cuid from 'cuid';\nimport { SEND_MESSAGE, GET_LAST_MESSAGES } from 'apis/Message';\nimport plusIcon from 'public/icons/plus.svg';\nimport InputComponent from './InputComponent';\nimport * as S from './ChatInput.styled';\n\nconst DynamicTypingStatus = dynamic(() => import('./TypingStatus/TypingStatus'), { ssr: false });\n\nconst ChatInput = ({ dropzoneItems }) => {\n  const [sendMessage] = useMutation(SEND_MESSAGE);\n  const { user } = useContext(UserContext);\n\n  const handleSendMessage = async ({\n    body,\n    channelUrl,\n    communityUrl,\n    mentions,\n    urlList,\n  }) => {\n    const message = {\n      body,\n      channelUrl: `${communityUrl}/${channelUrl}`,\n      urlList,\n      mentions: mentions ? mentions.map(e => e.id) : [],\n      communityUrl,\n    };\n\n    await sendMessage({\n      variables: message,\n      optimisticResponse: {\n        __typename: 'Mutation',\n        sendMessage: {\n          __typename: 'Message',\n          ...message,\n          id: cuid(),\n          createdAt: new Date(),\n          updatedAt: new Date(),\n          remoteAttachments: [],\n          children: [],\n          reactions: [],\n          author: user,\n        },\n      },\n      update: (proxy, { data: { sendMessage: sendMessageData } }) => {\n        const data = proxy.readQuery({\n          query: GET_LAST_MESSAGES,\n          variables: {\n            channelUrl: `${communityUrl}/${channelUrl}`,\n          },\n        });\n\n        let messagesData = { ...data };\n        if (data.messages.filter(message => message.id === sendMessageData.id).length === 0) {\n          messagesData = {\n            ...data,\n            messages: [...data.messages, sendMessageData],\n          };\n        }\n\n        proxy.writeQuery({\n          query: GET_LAST_MESSAGES,\n          data: messagesData,\n          variables: {\n            channelUrl: `${communityUrl}/${channelUrl}`,\n          },\n        });\n      },\n    });\n\n    return true;\n  };\n\n  return (\n    <S.ChatInputWrapper>\n      <S.AddButton>\n        <S.PlusIcon>\n          <use xlinkHref={`${plusIcon}#icon-plus`} />\n        </S.PlusIcon>\n      </S.AddButton>\n      <InputComponent onSendMessage={handleSendMessage} dropzoneItems={dropzoneItems} />\n      <DynamicTypingStatus />\n    </S.ChatInputWrapper>\n  );\n};\n\nexport default ChatInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}