{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useMutation } from '@apollo/client';\nimport { REPLY_MESSAGE, SEND_NOTIFICATION } from 'apis/Message';\nimport InputComponent from 'components/Chat/Input/InputComponent';\nimport * as S from './styled';\nconst ThreadChat = ({\n  messageId,\n  dropzoneItems,\n  eraseAttachments\n}) => {\n  const [sendReplyMessage] = useMutation(REPLY_MESSAGE);\n  const [sendNotification] = useMutation(SEND_NOTIFICATION);\n  const {\n    query: {\n      community: communityUrl,\n      channel: channelUrl\n    }\n  } = useRouter();\n  const handleMessage = async ({\n    body,\n    mentions,\n    urlList\n  }) => {\n    const message = {\n      body,\n      parentId: messageId,\n      urlList\n    };\n    await sendReplyMessage({\n      variables: message\n    });\n    if (mentions) {\n      mentions.map(mention => sendNotification({\n        variables: {\n          messageId,\n          receiverName: mention.id,\n          channelUrl: `${communityUrl}/${channelUrl}`,\n          communityUrl\n        }\n      }));\n    }\n    return true;\n  };\n  return __jsx(S.ThreadInputWrapper, null, __jsx(InputComponent, {\n    onSendMessage: handleMessage,\n    placeholder: \"Your reply\",\n    dropzoneItems: dropzoneItems,\n    eraseAttachments: eraseAttachments\n  }));\n};\nexport default ThreadChat;","map":{"version":3,"names":["useRouter","useMutation","REPLY_MESSAGE","SEND_NOTIFICATION","InputComponent","S","ThreadChat","messageId","dropzoneItems","eraseAttachments","sendReplyMessage","sendNotification","query","community","communityUrl","channel","channelUrl","handleMessage","body","mentions","urlList","message","parentId","variables","map","mention","receiverName","id"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Thread/ThreadInput/index.js"],"sourcesContent":["import { useRouter } from 'next/router';\nimport { useMutation } from '@apollo/client';\nimport { REPLY_MESSAGE, SEND_NOTIFICATION } from 'apis/Message';\nimport InputComponent from 'components/Chat/Input/InputComponent';\nimport * as S from './styled';\n\nconst ThreadChat = ({ messageId, dropzoneItems, eraseAttachments }) => {\n  const [sendReplyMessage] = useMutation(REPLY_MESSAGE);\n  const [sendNotification] = useMutation(SEND_NOTIFICATION);\n  const {\n    query: { community: communityUrl, channel: channelUrl },\n  } = useRouter();\n\n  const handleMessage = async ({ body, mentions, urlList }) => {\n    const message = {\n      body,\n      parentId: messageId,\n      urlList,\n    };\n\n    await sendReplyMessage({\n      variables: message,\n    });\n\n    if (mentions) {\n      mentions.map(mention =>\n        sendNotification({\n          variables: {\n            messageId,\n            receiverName: mention.id,\n            channelUrl: `${communityUrl}/${channelUrl}`,\n            communityUrl,\n          },\n        })\n      );\n    }\n\n    return true;\n  };\n\n  return (\n    <S.ThreadInputWrapper>\n      <InputComponent\n        onSendMessage={handleMessage}\n        placeholder=\"Your reply\"\n        dropzoneItems={dropzoneItems}\n        eraseAttachments={eraseAttachments}\n      />\n    </S.ThreadInputWrapper>\n  );\n};\n\nexport default ThreadChat;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,aAAa,EAAEC,iBAAiB,QAAQ,cAAc;AAC/D,OAAOC,cAAc,MAAM,sCAAsC;AACjE,OAAO,KAAKC,CAAC,MAAM,UAAU;AAE7B,MAAMC,UAAU,GAAG,CAAC;EAAEC,SAAS;EAAEC,aAAa;EAAEC;AAAiB,CAAC,KAAK;EACrE,MAAM,CAACC,gBAAgB,CAAC,GAAGT,WAAW,CAACC,aAAa,CAAC;EACrD,MAAM,CAACS,gBAAgB,CAAC,GAAGV,WAAW,CAACE,iBAAiB,CAAC;EACzD,MAAM;IACJS,KAAK,EAAE;MAAEC,SAAS,EAAEC,YAAY;MAAEC,OAAO,EAAEC;IAAW;EACxD,CAAC,GAAGhB,SAAS,EAAE;EAEf,MAAMiB,aAAa,GAAG,OAAO;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,KAAK;IAC3D,MAAMC,OAAO,GAAG;MACdH,IAAI;MACJI,QAAQ,EAAEf,SAAS;MACnBa;IACF,CAAC;IAED,MAAMV,gBAAgB,CAAC;MACrBa,SAAS,EAAEF;IACb,CAAC,CAAC;IAEF,IAAIF,QAAQ,EAAE;MACZA,QAAQ,CAACK,GAAG,CAACC,OAAO,IAClBd,gBAAgB,CAAC;QACfY,SAAS,EAAE;UACThB,SAAS;UACTmB,YAAY,EAAED,OAAO,CAACE,EAAE;UACxBX,UAAU,EAAG,GAAEF,YAAa,IAAGE,UAAW,EAAC;UAC3CF;QACF;MACF,CAAC,CAAC,CACH;IACH;IAEA,OAAO,IAAI;EACb,CAAC;EAED,OACE,MAAC,CAAC,CAAC,kBAAkB,QACnB,MAAC,cAAc;IACb,aAAa,EAAEG,aAAc;IAC7B,WAAW,EAAC,YAAY;IACxB,aAAa,EAAET,aAAc;IAC7B,gBAAgB,EAAEC;EAAiB,EACnC,CACmB;AAE3B,CAAC;AAED,eAAeH,UAAU"},"metadata":{},"sourceType":"module"}