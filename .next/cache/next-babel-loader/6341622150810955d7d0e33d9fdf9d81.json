{"ast":null,"code":"import _Object$setPrototypeOf from \"@babel/runtime-corejs2/core-js/object/set-prototype-of\";\nimport _Object$getPrototypeOf from \"@babel/runtime-corejs2/core-js/object/get-prototype-of\";\nimport _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Symbol from \"@babel/runtime-corejs2/core-js/symbol\";\nimport _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _this = this,\n  _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/Navbar/Notifications/Notification/Notification.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = _Object$defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof _Symbol ? _Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return _Object$defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = _Object$create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = _Object$getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = _Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport moment from 'moment';\nimport { useRouter } from 'next/router';\nimport ReactHtmlParser from 'react-html-parser';\nimport { transformMentions } from 'utils/helper';\nimport * as S from './Notification.styled';\nvar Notification = function Notification(_ref) {\n  var notification = _ref.notification,\n    onClick = _ref.onClick,\n    closePopup = _ref.closePopup;\n  var _useRouter = useRouter(),\n    company = _useRouter.query.company,\n    push = _useRouter.push;\n  var handleLink = function handleLink() {\n    return _regeneratorRuntime().async(function handleLink$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime().awrap(onClick({\n            variables: {\n              id: notification.id\n            }\n          }));\n        case 2:\n          push(\"/[company]/[community]/[channel]\", \"/\".concat(company, \"/\").concat(notification.channel.url, \"?linkMessageId=\").concat(notification.message.id), {\n            shallow: true\n          });\n          closePopup();\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, _Promise);\n  };\n  if (!notification.message) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }\n  });\n  return __jsx(S.Container, {\n    onClick: handleLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(S.AvatarWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(S.Avatar, {\n    src: notification.message.author.image,\n    name: notification.message.author.username,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), __jsx(S.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(S.Info, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(S.Author, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, notification.message.author.username), __jsx(S.Date, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, moment(notification.createdAt).format('h:mm A'))), __jsx(S.Message, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, ReactHtmlParser(transformMentions(notification.message.body))), notification.actions && __jsx(S.Actions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, notification.actions.map(function (action) {\n    return __jsx(S.Button, {\n      onClick: function onClick() {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, action.name);\n  }), __jsx(S.Button, {\n    cancel: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))));\n};\nexport default Notification;","map":{"version":3,"names":["moment","useRouter","ReactHtmlParser","transformMentions","S","Notification","notification","onClick","closePopup","company","query","push","handleLink","variables","id","channel","url","message","shallow","author","image","username","createdAt","format","body","actions","map","action","name"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Navbar/Notifications/Notification/Notification.js"],"sourcesContent":["import moment from 'moment';\nimport { useRouter } from 'next/router';\n\nimport ReactHtmlParser from 'react-html-parser';\n\nimport { transformMentions } from 'utils/helper';\nimport * as S from './Notification.styled';\n\nconst Notification = ({ notification, onClick, closePopup }) => {\n  const {\n    query: { company },\n    push,\n  } = useRouter();\n\n  const handleLink = async () => {\n    await onClick({\n      variables: {\n        id: notification.id,\n      },\n    });\n\n    push(\n      `/[company]/[community]/[channel]`,\n      `/${company}/${notification.channel.url}?linkMessageId=${notification.message.id}`,\n      { shallow: true }\n    );\n    closePopup();\n  };\n\n  if (!notification.message) return <div />;\n\n  return (\n    <S.Container onClick={handleLink}>\n      <S.AvatarWrapper>\n        <S.Avatar\n          src={notification.message.author.image}\n          name={notification.message.author.username}\n        />\n      </S.AvatarWrapper>\n      <S.Body>\n        <S.Info>\n          <S.Author>{notification.message.author.username}</S.Author>\n          <S.Date>{moment(notification.createdAt).format('h:mm A')}</S.Date>\n        </S.Info>\n        <S.Message>{ReactHtmlParser(transformMentions(notification.message.body))}</S.Message>\n        {notification.actions && (\n          <S.Actions>\n            {notification.actions.map(action => (\n              <S.Button onClick={() => {}}>{action.name}</S.Button>\n            ))}\n            <S.Button cancel>Cancel</S.Button>\n          </S.Actions>\n        )}\n      </S.Body>\n    </S.Container>\n  );\n};\n\nexport default Notification;\n"],"mappings":";;;;;;;;;;+CACA;AADA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,SAAS,QAAQ,aAAa;AAEvC,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,SAASC,iBAAiB,QAAQ,cAAc;AAChD,OAAO,KAAKC,CAAC,MAAM,uBAAuB;AAE1C,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAA8C;EAAA,IAAxCC,YAAY,QAAZA,YAAY;IAAEC,OAAO,QAAPA,OAAO;IAAEC,UAAU,QAAVA,UAAU;EACvD,iBAGIP,SAAS,EAAE;IAFJQ,OAAO,cAAhBC,KAAK,CAAID,OAAO;IAChBE,IAAI,cAAJA,IAAI;EAGN,IAAMC,UAAU,GAAG,SAAbA,UAAU;IAAA;MAAA;QAAA;UAAA;UAAA,mCACRL,OAAO,CAAC;YACZM,SAAS,EAAE;cACTC,EAAE,EAAER,YAAY,CAACQ;YACnB;UACF,CAAC,CAAC;QAAA;UAEFH,IAAI,gDAEEF,OAAO,cAAIH,YAAY,CAACS,OAAO,CAACC,GAAG,4BAAkBV,YAAY,CAACW,OAAO,CAACH,EAAE,GAChF;YAAEI,OAAO,EAAE;UAAK,CAAC,CAClB;UACDV,UAAU,EAAE;QAAC;QAAA;UAAA;MAAA;IAAA;EAAA,CACd;EAED,IAAI,CAACF,YAAY,CAACW,OAAO,EAAE,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAO;EAEzC,OACE,MAAC,CAAC,CAAC,SAAS;IAAC,OAAO,EAAEL,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC/B,MAAC,CAAC,CAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACd,MAAC,CAAC,CAAC,MAAM;IACP,GAAG,EAAEN,YAAY,CAACW,OAAO,CAACE,MAAM,CAACC,KAAM;IACvC,IAAI,EAAEd,YAAY,CAACW,OAAO,CAACE,MAAM,CAACE,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC3C,CACc,EAClB,MAAC,CAAC,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACL,MAAC,CAAC,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACL,MAAC,CAAC,CAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEf,YAAY,CAACW,OAAO,CAACE,MAAM,CAACE,QAAQ,CAAY,EAC3D,MAAC,CAAC,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAErB,MAAM,CAACM,YAAY,CAACgB,SAAS,CAAC,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAU,CAC3D,EACT,MAAC,CAAC,CAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAErB,eAAe,CAACC,iBAAiB,CAACG,YAAY,CAACW,OAAO,CAACO,IAAI,CAAC,CAAC,CAAa,EACrFlB,YAAY,CAACmB,OAAO,IACnB,MAAC,CAAC,CAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACPnB,YAAY,CAACmB,OAAO,CAACC,GAAG,CAAC,UAAAC,MAAM;IAAA,OAC9B,MAAC,CAAC,CAAC,MAAM;MAAC,OAAO,EAAE,mBAAM,CAAC,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEA,MAAM,CAACC,IAAI,CAAY;EAAA,CACtD,CAAC,EACF,MAAC,CAAC,CAAC,MAAM;IAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAAkB,CAErC,CACM,CACG;AAElB,CAAC;AAED,eAAevB,YAAY"},"metadata":{},"sourceType":"module"}