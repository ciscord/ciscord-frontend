{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { useMutation, useLazyQuery } from '@apollo/client';\nimport { SEARCH_USERS } from 'apis/User';\nimport { GET_ROLE, ATTACH_ROLE_TO_USER, DEATTACH_ROLE_TO_USER } from 'apis/Role';\nimport { SearchIcon } from 'components/UI/Icons';\nimport Member from './Member/Member';\nimport * as S from './MembersSettings.styled';\nconst Members = () => {\n  const {\n    0: filteredUsers,\n    1: setFilteredUsers\n  } = useState([]);\n  const {\n    0: filterString,\n    1: setFilterString\n  } = useState('');\n  const {\n    0: searchActive,\n    1: setSearchActive\n  } = useState(false);\n  const [searchUsers, {\n    data: {\n      users = []\n    } = {},\n    loading: usersLoading\n  }] = useLazyQuery(SEARCH_USERS);\n  const [getRoles, {\n    data: {\n      roles = []\n    } = {},\n    loading: rolesLoading\n  }] = useLazyQuery(GET_ROLE);\n  useEffect(() => {\n    searchUsers({\n      variables: {\n        searchString: ''\n      }\n    });\n    getRoles();\n  }, []);\n  const [attachRoleToUser] = useMutation(ATTACH_ROLE_TO_USER, {\n    // update(cache, { data: { attachRoleToUser: user } }) {\n    //   const { users } = cache.readQuery({ query: SEARCH_USERS });\n    //   cache.writeQuery({\n    //     query: SEARCH_USERS,\n    //     data: { users: users.concat([user]) },\n    //   });\n    // },\n  });\n  const [deattachRoleToUser] = useMutation(DEATTACH_ROLE_TO_USER, {\n    // update(cache, { data: { deattachRoleToUser: user } }) {\n    //   const { users } = cache.readQuery({ query: SEARCH_USERS });\n    //   cache.writeQuery({\n    //     query: SEARCH_USERS,\n    //     data: { users: users.concat([user]) },\n    //   });\n    // },\n  });\n  useEffect(() => {\n    if (filterString === '') {\n      setFilteredUsers(users);\n      return;\n    }\n    setFilteredUsers(users.filter(user => user.username.includes(filterString) || user.fullname.includes(filterString)));\n  }, [users, filterString]);\n\n  /*\n  Event Functions\n  */\n  const toggleUserRole = async (user, role) => {\n    const existing = user.role.filter(userRole => userRole.id === role.id).length === 1;\n    if (existing) {\n      await deattachRoleToUser({\n        variables: {\n          userId: user.id,\n          roleId: role.id\n        },\n        errorPolicy: 'all'\n      });\n    } else {\n      await attachRoleToUser({\n        variables: {\n          userId: user.id,\n          roleId: role.id\n        },\n        errorPolicy: 'all'\n      });\n    }\n  };\n  if (usersLoading || rolesLoading) {\n    return __jsx(\"div\", null);\n  }\n  return __jsx(S.Container, null, __jsx(S.Content, null, __jsx(S.Header, null, __jsx(S.Heading, null, \"Manage members\"), __jsx(S.SearchInput, {\n    type: \"text\",\n    placeholder: \"Search\",\n    value: filterString,\n    isSearch: searchActive,\n    onChange: e => setFilterString(e.target.value)\n  }), __jsx(S.Actions, null, __jsx(SearchIcon, {\n    onClick: () => {\n      if (searchActive) {\n        setFilterString('');\n        setSearchActive(false);\n      } else {\n        setSearchActive(true);\n      }\n    },\n    active: searchActive\n  }))), __jsx(S.Body, null, filteredUsers.map(user => __jsx(Member, {\n    user: user,\n    roles: roles,\n    toggleUserRole: toggleUserRole\n  })))));\n};\nexport default Members;","map":{"version":3,"names":["useEffect","useState","useMutation","useLazyQuery","SEARCH_USERS","GET_ROLE","ATTACH_ROLE_TO_USER","DEATTACH_ROLE_TO_USER","SearchIcon","Member","S","Members","filteredUsers","setFilteredUsers","filterString","setFilterString","searchActive","setSearchActive","searchUsers","data","users","loading","usersLoading","getRoles","roles","rolesLoading","variables","searchString","attachRoleToUser","deattachRoleToUser","filter","user","username","includes","fullname","toggleUserRole","role","existing","userRole","id","length","userId","roleId","errorPolicy","e","target","value","map"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Settings/Members/MembersSettings.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useMutation, useLazyQuery } from '@apollo/client';\nimport { SEARCH_USERS } from 'apis/User';\nimport { GET_ROLE, ATTACH_ROLE_TO_USER, DEATTACH_ROLE_TO_USER } from 'apis/Role';\nimport { SearchIcon } from 'components/UI/Icons';\nimport Member from './Member/Member';\nimport * as S from './MembersSettings.styled';\n\nconst Members = () => {\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [filterString, setFilterString] = useState('');\n  const [searchActive, setSearchActive] = useState(false);\n\n  const [searchUsers, { data: { users = [] } = {}, loading: usersLoading }] = useLazyQuery(\n    SEARCH_USERS\n  );\n\n  const [getRoles, { data: { roles = [] } = {}, loading: rolesLoading }] = useLazyQuery(GET_ROLE);\n\n  useEffect(() => {\n    searchUsers({ variables: { searchString: '' } });\n    getRoles();\n  }, []);\n\n  const [attachRoleToUser] = useMutation(ATTACH_ROLE_TO_USER, {\n    // update(cache, { data: { attachRoleToUser: user } }) {\n    //   const { users } = cache.readQuery({ query: SEARCH_USERS });\n    //   cache.writeQuery({\n    //     query: SEARCH_USERS,\n    //     data: { users: users.concat([user]) },\n    //   });\n    // },\n  });\n\n  const [deattachRoleToUser] = useMutation(DEATTACH_ROLE_TO_USER, {\n    // update(cache, { data: { deattachRoleToUser: user } }) {\n    //   const { users } = cache.readQuery({ query: SEARCH_USERS });\n    //   cache.writeQuery({\n    //     query: SEARCH_USERS,\n    //     data: { users: users.concat([user]) },\n    //   });\n    // },\n  });\n\n  useEffect(() => {\n    if (filterString === '') {\n      setFilteredUsers(users);\n      return;\n    }\n\n    setFilteredUsers(\n      users.filter(\n        user => user.username.includes(filterString) || user.fullname.includes(filterString)\n      )\n    );\n  }, [users, filterString]);\n\n  /*\n  Event Functions\n  */\n  const toggleUserRole = async (user, role) => {\n    const existing = user.role.filter(userRole => userRole.id === role.id).length === 1;\n\n    if (existing) {\n      await deattachRoleToUser({\n        variables: { userId: user.id, roleId: role.id },\n        errorPolicy: 'all',\n      });\n    } else {\n      await attachRoleToUser({\n        variables: { userId: user.id, roleId: role.id },\n        errorPolicy: 'all',\n      });\n    }\n  };\n\n  if (usersLoading || rolesLoading) {\n    return <div />;\n  }\n\n  return (\n    <S.Container>\n      <S.Content>\n        <S.Header>\n          <S.Heading>Manage members</S.Heading>\n          <S.SearchInput\n            type=\"text\"\n            placeholder=\"Search\"\n            value={filterString}\n            isSearch={searchActive}\n            onChange={e => setFilterString(e.target.value)}\n          />\n          <S.Actions>\n            <SearchIcon\n              onClick={() => {\n                if (searchActive) {\n                  setFilterString('');\n                  setSearchActive(false);\n                } else {\n                  setSearchActive(true);\n                }\n              }}\n              active={searchActive}\n            />\n          </S.Actions>\n        </S.Header>\n        <S.Body>\n          {filteredUsers.map(user => (\n            <Member user={user} roles={roles} toggleUserRole={toggleUserRole} />\n          ))}\n        </S.Body>\n      </S.Content>\n    </S.Container>\n  );\n};\n\nexport default Members;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,YAAY,QAAQ,gBAAgB;AAC1D,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,QAAQ,EAAEC,mBAAmB,EAAEC,qBAAqB,QAAQ,WAAW;AAChF,SAASC,UAAU,QAAQ,qBAAqB;AAChD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAO,KAAKC,CAAC,MAAM,0BAA0B;AAE7C,MAAMC,OAAO,GAAG,MAAM;EACpB,MAAM;IAAA,GAACC,aAAa;IAAA,GAAEC;EAAgB,IAAIZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAA,GAACa,YAAY;IAAA,GAAEC;EAAe,IAAId,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM;IAAA,GAACe,YAAY;IAAA,GAAEC;EAAe,IAAIhB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAM,CAACiB,WAAW,EAAE;IAAEC,IAAI,EAAE;MAAEC,KAAK,GAAG;IAAG,CAAC,GAAG,CAAC,CAAC;IAAEC,OAAO,EAAEC;EAAa,CAAC,CAAC,GAAGnB,YAAY,CACtFC,YAAY,CACb;EAED,MAAM,CAACmB,QAAQ,EAAE;IAAEJ,IAAI,EAAE;MAAEK,KAAK,GAAG;IAAG,CAAC,GAAG,CAAC,CAAC;IAAEH,OAAO,EAAEI;EAAa,CAAC,CAAC,GAAGtB,YAAY,CAACE,QAAQ,CAAC;EAE/FL,SAAS,CAAC,MAAM;IACdkB,WAAW,CAAC;MAAEQ,SAAS,EAAE;QAAEC,YAAY,EAAE;MAAG;IAAE,CAAC,CAAC;IAChDJ,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACK,gBAAgB,CAAC,GAAG1B,WAAW,CAACI,mBAAmB,EAAE;IAC1D;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD,CAAC;EAEF,MAAM,CAACuB,kBAAkB,CAAC,GAAG3B,WAAW,CAACK,qBAAqB,EAAE;IAC9D;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD,CAAC;EAEFP,SAAS,CAAC,MAAM;IACd,IAAIc,YAAY,KAAK,EAAE,EAAE;MACvBD,gBAAgB,CAACO,KAAK,CAAC;MACvB;IACF;IAEAP,gBAAgB,CACdO,KAAK,CAACU,MAAM,CACVC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAACnB,YAAY,CAAC,IAAIiB,IAAI,CAACG,QAAQ,CAACD,QAAQ,CAACnB,YAAY,CAAC,CACrF,CACF;EACH,CAAC,EAAE,CAACM,KAAK,EAAEN,YAAY,CAAC,CAAC;;EAEzB;AACF;AACA;EACE,MAAMqB,cAAc,GAAG,OAAOJ,IAAI,EAAEK,IAAI,KAAK;IAC3C,MAAMC,QAAQ,GAAGN,IAAI,CAACK,IAAI,CAACN,MAAM,CAACQ,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC,CAACC,MAAM,KAAK,CAAC;IAEnF,IAAIH,QAAQ,EAAE;MACZ,MAAMR,kBAAkB,CAAC;QACvBH,SAAS,EAAE;UAAEe,MAAM,EAAEV,IAAI,CAACQ,EAAE;UAAEG,MAAM,EAAEN,IAAI,CAACG;QAAG,CAAC;QAC/CI,WAAW,EAAE;MACf,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,MAAMf,gBAAgB,CAAC;QACrBF,SAAS,EAAE;UAAEe,MAAM,EAAEV,IAAI,CAACQ,EAAE;UAAEG,MAAM,EAAEN,IAAI,CAACG;QAAG,CAAC;QAC/CI,WAAW,EAAE;MACf,CAAC,CAAC;IACJ;EACF,CAAC;EAED,IAAIrB,YAAY,IAAIG,YAAY,EAAE;IAChC,OAAO,kBAAO;EAChB;EAEA,OACE,MAAC,CAAC,CAAC,SAAS,QACV,MAAC,CAAC,CAAC,OAAO,QACR,MAAC,CAAC,CAAC,MAAM,QACP,MAAC,CAAC,CAAC,OAAO,yBAA2B,EACrC,MAAC,CAAC,CAAC,WAAW;IACZ,IAAI,EAAC,MAAM;IACX,WAAW,EAAC,QAAQ;IACpB,KAAK,EAAEX,YAAa;IACpB,QAAQ,EAAEE,YAAa;IACvB,QAAQ,EAAE4B,CAAC,IAAI7B,eAAe,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK;EAAE,EAC/C,EACF,MAAC,CAAC,CAAC,OAAO,QACR,MAAC,UAAU;IACT,OAAO,EAAE,MAAM;MACb,IAAI9B,YAAY,EAAE;QAChBD,eAAe,CAAC,EAAE,CAAC;QACnBE,eAAe,CAAC,KAAK,CAAC;MACxB,CAAC,MAAM;QACLA,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAE;IACF,MAAM,EAAED;EAAa,EACrB,CACQ,CACH,EACX,MAAC,CAAC,CAAC,IAAI,QACJJ,aAAa,CAACmC,GAAG,CAAChB,IAAI,IACrB,MAAC,MAAM;IAAC,IAAI,EAAEA,IAAK;IAAC,KAAK,EAAEP,KAAM;IAAC,cAAc,EAAEW;EAAe,EAClE,CAAC,CACK,CACC,CACA;AAElB,CAAC;AAED,eAAexB,OAAO"},"metadata":{},"sourceType":"module"}