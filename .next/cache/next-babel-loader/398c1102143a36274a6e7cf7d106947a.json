{"ast":null,"code":"var _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Message/Actions/More/Direct/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useContext } from 'react';\nimport { UserContext } from 'context';\nimport { useMutation } from '@apollo/client';\nimport { COMPANY_NAME } from 'utils/config';\nimport { CREATE_CHANNEL } from 'apis/Channel';\nimport { MoreMenuItem } from '../More.styled';\nexport default (({\n  messageAuthor\n}) => {\n  const {\n    user: me\n  } = useContext(UserContext);\n  const [createChannel] = useMutation(CREATE_CHANNEL);\n  const {\n    query: {\n      community: communityUrl\n    },\n    push\n  } = useRouter();\n  const onDirect = async () => {\n    if (me && me.username !== messageAuthor.username && communityUrl !== 'direct') {\n      let channelUrl = '';\n      const result = me.username.localeCompare(messageAuthor.username);\n      if (result === 1) {\n        channelUrl = `direct/${me.username}-${messageAuthor.username}-`;\n      } else {\n        channelUrl = `direct/${messageAuthor.username}-${me.username}-`;\n      }\n      const url = `${channelUrl}`;\n      await createChannel({\n        variables: {\n          communityUrl: 'direct',\n          url,\n          name: '',\n          description: ''\n        },\n        errorPolicy: 'all'\n      });\n      push(`/[company]/[community]/[channel]`, `/${COMPANY_NAME()}/${url}`, {\n        shallow: true\n      });\n    }\n  };\n  return me.username !== messageAuthor.username && __jsx(MoreMenuItem, {\n    onClick: onDirect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Direct chat\");\n});","map":{"version":3,"names":["useRouter","useContext","UserContext","useMutation","COMPANY_NAME","CREATE_CHANNEL","MoreMenuItem","messageAuthor","user","me","createChannel","query","community","communityUrl","push","onDirect","username","channelUrl","result","localeCompare","url","variables","name","description","errorPolicy","shallow"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Message/Actions/More/Direct/index.js"],"sourcesContent":["import { useRouter } from 'next/router';\nimport { useContext } from 'react';\nimport { UserContext } from 'context';\nimport { useMutation } from '@apollo/client';\n\nimport { COMPANY_NAME } from 'utils/config';\nimport { CREATE_CHANNEL } from 'apis/Channel';\n\nimport { MoreMenuItem } from '../More.styled';\n\nexport default ({ messageAuthor }) => {\n  const { user: me } = useContext(UserContext);\n  const [createChannel] = useMutation(CREATE_CHANNEL);\n\n  const {\n    query: { community: communityUrl },\n    push,\n  } = useRouter();\n\n  const onDirect = async () => {\n    if (me && me.username !== messageAuthor.username && communityUrl !== 'direct') {\n      let channelUrl = '';\n      const result = me.username.localeCompare(messageAuthor.username);\n      if (result === 1) {\n        channelUrl = `direct/${me.username}-${messageAuthor.username}-`;\n      } else {\n        channelUrl = `direct/${messageAuthor.username}-${me.username}-`;\n      }\n\n      const url = `${channelUrl}`;\n      await createChannel({\n        variables: {\n          communityUrl: 'direct',\n          url,\n          name: '',\n          description: '',\n        },\n        errorPolicy: 'all',\n      });\n\n      push(`/[company]/[community]/[channel]`, `/${COMPANY_NAME()}/${url}`, {\n        shallow: true,\n      });\n    }\n  };\n\n  return (\n    me.username !== messageAuthor.username && (\n      <MoreMenuItem onClick={onDirect}>Direct chat</MoreMenuItem>\n    )\n  );\n};\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,SAAS;AACrC,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,cAAc,QAAQ,cAAc;AAE7C,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,gBAAe,CAAC;EAAEC;AAAc,CAAC,KAAK;EACpC,MAAM;IAAEC,IAAI,EAAEC;EAAG,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC;EAC5C,MAAM,CAACQ,aAAa,CAAC,GAAGP,WAAW,CAACE,cAAc,CAAC;EAEnD,MAAM;IACJM,KAAK,EAAE;MAAEC,SAAS,EAAEC;IAAa,CAAC;IAClCC;EACF,CAAC,GAAGd,SAAS,EAAE;EAEf,MAAMe,QAAQ,GAAG,YAAY;IAC3B,IAAIN,EAAE,IAAIA,EAAE,CAACO,QAAQ,KAAKT,aAAa,CAACS,QAAQ,IAAIH,YAAY,KAAK,QAAQ,EAAE;MAC7E,IAAII,UAAU,GAAG,EAAE;MACnB,MAAMC,MAAM,GAAGT,EAAE,CAACO,QAAQ,CAACG,aAAa,CAACZ,aAAa,CAACS,QAAQ,CAAC;MAChE,IAAIE,MAAM,KAAK,CAAC,EAAE;QAChBD,UAAU,GAAI,UAASR,EAAE,CAACO,QAAS,IAAGT,aAAa,CAACS,QAAS,GAAE;MACjE,CAAC,MAAM;QACLC,UAAU,GAAI,UAASV,aAAa,CAACS,QAAS,IAAGP,EAAE,CAACO,QAAS,GAAE;MACjE;MAEA,MAAMI,GAAG,GAAI,GAAEH,UAAW,EAAC;MAC3B,MAAMP,aAAa,CAAC;QAClBW,SAAS,EAAE;UACTR,YAAY,EAAE,QAAQ;UACtBO,GAAG;UACHE,IAAI,EAAE,EAAE;UACRC,WAAW,EAAE;QACf,CAAC;QACDC,WAAW,EAAE;MACf,CAAC,CAAC;MAEFV,IAAI,CAAE,kCAAiC,EAAG,IAAGV,YAAY,EAAG,IAAGgB,GAAI,EAAC,EAAE;QACpEK,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC;EAED,OACEhB,EAAE,CAACO,QAAQ,KAAKT,aAAa,CAACS,QAAQ,IACpC,MAAC,YAAY;IAAC,OAAO,EAAED,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBACjC;AAEL,CAAC"},"metadata":{},"sourceType":"module"}