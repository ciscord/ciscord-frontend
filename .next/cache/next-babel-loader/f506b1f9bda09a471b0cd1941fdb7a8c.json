{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport { Picker } from 'emoji-mart';\nimport { withTheme } from 'styled-components';\nimport 'emoji-mart/css/emoji-mart.css';\nimport * as S from './styled';\nconst availableEmojis = ['grinning', 'smiley', 'smile', 'grin', 'laughing', 'sweat_smile', 'rolling_on_the_floor_laughing', 'joy', 'slightly_smiling_face', 'upside_down_face', 'wink', 'blush', 'innocent'];\nconst EmojiPicker = ({\n  close,\n  onSelect,\n  theme,\n  getPosition\n}) => {\n  return __jsx(S.Overlay, {\n    onClick: close\n  }, __jsx(S.Container, {\n    id: \"picker\",\n    position: getPosition()\n  }, __jsx(Picker, {\n    set: \"apple\",\n    emojisToShowFilter: emoji => {\n      const name = emoji.short_names[0];\n      if (availableEmojis.indexOf(name) > -1) {\n        return true;\n      }\n      return false;\n    },\n    include: ['recent', 'people'],\n    onSelect: onSelect,\n    showPreview: false,\n    showSkinTones: false,\n    native: true,\n    theme: theme.chatBG === '#fff' ? 'light' : 'dark'\n  })));\n};\nexport default withTheme(EmojiPicker);","map":{"version":3,"names":["useEffect","Picker","withTheme","S","availableEmojis","EmojiPicker","close","onSelect","theme","getPosition","emoji","name","short_names","indexOf","chatBG"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/UI/EmojiPicker/EmojiPicker.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { Picker } from 'emoji-mart';\nimport { withTheme } from 'styled-components';\nimport 'emoji-mart/css/emoji-mart.css';\n\nimport * as S from './styled';\n\nconst availableEmojis = [\n  'grinning',\n  'smiley',\n  'smile',\n  'grin',\n  'laughing',\n  'sweat_smile',\n  'rolling_on_the_floor_laughing',\n  'joy',\n  'slightly_smiling_face',\n  'upside_down_face',\n  'wink',\n  'blush',\n  'innocent',\n];\n\nconst EmojiPicker = ({ close, onSelect, theme, getPosition }) => {\n  return (\n    <S.Overlay onClick={close}>\n      <S.Container id=\"picker\" position={getPosition()}>\n        <Picker\n          set=\"apple\"\n          emojisToShowFilter={emoji => {\n            const name = emoji.short_names[0];\n\n            if (availableEmojis.indexOf(name) > -1) {\n              return true;\n            }\n            return false;\n          }}\n          include={['recent', 'people']}\n          onSelect={onSelect}\n          showPreview={false}\n          showSkinTones={false}\n          native\n          theme={theme.chatBG === '#fff' ? 'light' : 'dark'}\n        />\n      </S.Container>\n    </S.Overlay>\n  );\n};\n\nexport default withTheme(EmojiPicker);\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,OAAO,+BAA+B;AAEtC,OAAO,KAAKC,CAAC,MAAM,UAAU;AAE7B,MAAMC,eAAe,GAAG,CACtB,UAAU,EACV,QAAQ,EACR,OAAO,EACP,MAAM,EACN,UAAU,EACV,aAAa,EACb,+BAA+B,EAC/B,KAAK,EACL,uBAAuB,EACvB,kBAAkB,EAClB,MAAM,EACN,OAAO,EACP,UAAU,CACX;AAED,MAAMC,WAAW,GAAG,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAY,CAAC,KAAK;EAC/D,OACE,MAAC,CAAC,CAAC,OAAO;IAAC,OAAO,EAAEH;EAAM,GACxB,MAAC,CAAC,CAAC,SAAS;IAAC,EAAE,EAAC,QAAQ;IAAC,QAAQ,EAAEG,WAAW;EAAG,GAC/C,MAAC,MAAM;IACL,GAAG,EAAC,OAAO;IACX,kBAAkB,EAAEC,KAAK,IAAI;MAC3B,MAAMC,IAAI,GAAGD,KAAK,CAACE,WAAW,CAAC,CAAC,CAAC;MAEjC,IAAIR,eAAe,CAACS,OAAO,CAACF,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;QACtC,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAE;IACF,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAE;IAC9B,QAAQ,EAAEJ,QAAS;IACnB,WAAW,EAAE,KAAM;IACnB,aAAa,EAAE,KAAM;IACrB,MAAM;IACN,KAAK,EAAEC,KAAK,CAACM,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG;EAAO,EAClD,CACU,CACJ;AAEhB,CAAC;AAED,eAAeZ,SAAS,CAACG,WAAW,CAAC"},"metadata":{},"sourceType":"module"}