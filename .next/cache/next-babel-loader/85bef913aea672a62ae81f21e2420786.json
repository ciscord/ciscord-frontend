{"ast":null,"code":"var _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/UI/InlineEdit/Editable.js\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n// https://blog.logrocket.com/the-complete-guide-to-building-inline-editable-ui-in-react/\nimport React, { useState, useEffect } from 'react';\nconst Editable = _ref => {\n  let {\n      text,\n      type,\n      placeholder,\n      onSave,\n      children,\n      childRef,\n      canEdit = true\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"text\", \"type\", \"placeholder\", \"onSave\", \"children\", \"childRef\", \"canEdit\"]);\n  const {\n    0: isEditing,\n    1: setEditing\n  } = useState(false);\n  useEffect(() => {\n    if (childRef && childRef.current && isEditing === true) {\n      childRef.current.focus();\n    }\n  }, [isEditing, childRef]);\n  const handleKeyDown = (event, type) => {\n    const {\n      key\n    } = event;\n    const keys = ['Escape', 'Tab'];\n    const enterKey = 'Enter';\n    const allKeys = [...keys, enterKey];\n    if (type !== 'textarea' && allKeys.indexOf(key) > -1) {\n      onSave();\n      setEditing(false);\n    }\n  };\n  return __jsx(\"section\", _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), isEditing ? __jsx(\"div\", {\n    onBlur: () => {\n      onSave();\n      setEditing(false);\n    },\n    onKeyDown: e => handleKeyDown(e, type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, children) : __jsx(\"div\", {\n    onClick: () => canEdit && setEditing(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, text || placeholder || 'Editable content')));\n};\nexport default Editable;","map":{"version":3,"names":["React","useState","useEffect","Editable","text","type","placeholder","onSave","children","childRef","canEdit","props","isEditing","setEditing","current","focus","handleKeyDown","event","key","keys","enterKey","allKeys","indexOf","e"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/UI/InlineEdit/Editable.js"],"sourcesContent":["// https://blog.logrocket.com/the-complete-guide-to-building-inline-editable-ui-in-react/\nimport React, { useState, useEffect } from 'react';\n\nconst Editable = ({\n  text,\n  type,\n  placeholder,\n  onSave,\n  children,\n  childRef,\n  canEdit = true,\n  ...props\n}) => {\n  const [isEditing, setEditing] = useState(false);\n\n  useEffect(() => {\n    if (childRef && childRef.current && isEditing === true) {\n      childRef.current.focus();\n    }\n  }, [isEditing, childRef]);\n\n  const handleKeyDown = (event, type) => {\n    const { key } = event;\n    const keys = ['Escape', 'Tab'];\n    const enterKey = 'Enter';\n    const allKeys = [...keys, enterKey];\n    if (type !== 'textarea' && allKeys.indexOf(key) > -1) {\n      onSave();\n      setEditing(false);\n    }\n  };\n\n  return (\n    <section {...props}>\n      {isEditing ? (\n        <div\n          onBlur={() => {\n            onSave();\n            setEditing(false);\n          }}\n          onKeyDown={e => handleKeyDown(e, type)}\n        >\n          {children}\n        </div>\n      ) : (\n        <div onClick={() => canEdit && setEditing(true)}>\n          <span>{text || placeholder || 'Editable content'}</span>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default Editable;\n"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,QAAQ,GAAG,QASX;EAAA,IATY;MAChBC,IAAI;MACJC,IAAI;MACJC,WAAW;MACXC,MAAM;MACNC,QAAQ;MACRC,QAAQ;MACRC,OAAO,GAAG;IAEZ,CAAC;IADIC,KAAK;EAER,MAAM;IAAA,GAACC,SAAS;IAAA,GAAEC;EAAU,IAAIZ,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,IAAIA,QAAQ,CAACK,OAAO,IAAIF,SAAS,KAAK,IAAI,EAAE;MACtDH,QAAQ,CAACK,OAAO,CAACC,KAAK,EAAE;IAC1B;EACF,CAAC,EAAE,CAACH,SAAS,EAAEH,QAAQ,CAAC,CAAC;EAEzB,MAAMO,aAAa,GAAG,CAACC,KAAK,EAAEZ,IAAI,KAAK;IACrC,MAAM;MAAEa;IAAI,CAAC,GAAGD,KAAK;IACrB,MAAME,IAAI,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC;IAC9B,MAAMC,QAAQ,GAAG,OAAO;IACxB,MAAMC,OAAO,GAAG,CAAC,GAAGF,IAAI,EAAEC,QAAQ,CAAC;IACnC,IAAIf,IAAI,KAAK,UAAU,IAAIgB,OAAO,CAACC,OAAO,CAACJ,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACpDX,MAAM,EAAE;MACRM,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OACE,8BAAaF,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACfC,SAAS,GACR;IACE,MAAM,EAAE,MAAM;MACZL,MAAM,EAAE;MACRM,UAAU,CAAC,KAAK,CAAC;IACnB,CAAE;IACF,SAAS,EAAEU,CAAC,IAAIP,aAAa,CAACO,CAAC,EAAElB,IAAI,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEtCG,QAAQ,CACL,GAEN;IAAK,OAAO,EAAE,MAAME,OAAO,IAAIG,UAAU,CAAC,IAAI,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAOT,IAAI,IAAIE,WAAW,IAAI,kBAAkB,CAAQ,CAE3D,CACO;AAEd,CAAC;AAED,eAAeH,QAAQ"},"metadata":{},"sourceType":"module"}