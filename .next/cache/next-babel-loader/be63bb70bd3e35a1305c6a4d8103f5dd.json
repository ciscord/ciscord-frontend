{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\nimport gql from 'graphql-tag';\nexport var GET_CHANNEL_NOTIFICATIONS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query channelNotifications($channelUrl: String!) {\\n    channelNotifications(channelUrl: $channelUrl) {\\n      id\\n    }\\n  }\\n\"])));\nexport var MARK_CHANNEL_NOTIFICATIONS_AS_READ = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  mutation markChannelNotificationsAsRead($channelUrl: String!) {\\n    markChannelNotificationsAsRead(channelUrl: $channelUrl) {\\n      id\\n    }\\n  }\\n\"])));\nexport var GET_CHANNELS = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  query channels($communityUrl: String!) {\\n    channels(communityUrl: $communityUrl) {\\n      id\\n      name\\n      url\\n      community {\\n        members {\\n          username\\n        }\\n      }\\n    }\\n  }\\n\"])));\nexport var GET_CHANNEL = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  query channel($url: String!) {\\n    channel(url: $url) {\\n      id\\n      name\\n      url\\n      description\\n      community {\\n        members {\\n          username\\n        }\\n      }\\n    }\\n  }\\n\"])));\nexport var CREATE_CHANNEL = gql(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  mutation createChannel(\\n    $name: String!\\n    $description: String\\n    $url: String!\\n    $isPrivate: Boolean\\n    $communityUrl: String!\\n  ) {\\n    createChannel(\\n      name: $name\\n      description: $description\\n      url: $url\\n      isPrivate: $isPrivate\\n      communityUrl: $communityUrl\\n    ) {\\n      id\\n      name\\n      url\\n    }\\n  }\\n\"])));\nexport var EDIT_CHANNEL = gql(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  mutation editChannel($channelId: String!, $name: String!, $description: String) {\\n    editChannel(channelId: $channelId, name: $name, description: $description) {\\n      id\\n      name\\n      description\\n      url\\n    }\\n  }\\n\"])));\nexport var NEW_CHANNEL_MESSAGE_SUBSCRIPTION = gql(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  subscription channelNewMessage($communityUrl: String, $tenant: String) {\\n    channelNewMessage(communityUrl: $communityUrl, tenant: $tenant) {\\n      id\\n      name\\n      url\\n    }\\n  }\\n\"])));\nexport var GET_PRIVATE_CHANNELS = gql(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n  query privateChannels {\\n    privateChannels {\\n      id\\n      url\\n    }\\n  }\\n\"])));","map":{"version":3,"names":["gql","GET_CHANNEL_NOTIFICATIONS","MARK_CHANNEL_NOTIFICATIONS_AS_READ","GET_CHANNELS","GET_CHANNEL","CREATE_CHANNEL","EDIT_CHANNEL","NEW_CHANNEL_MESSAGE_SUBSCRIPTION","GET_PRIVATE_CHANNELS"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/apis/Channel.js"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_CHANNEL_NOTIFICATIONS = gql`\n  query channelNotifications($channelUrl: String!) {\n    channelNotifications(channelUrl: $channelUrl) {\n      id\n    }\n  }\n`;\n\nexport const MARK_CHANNEL_NOTIFICATIONS_AS_READ = gql`\n  mutation markChannelNotificationsAsRead($channelUrl: String!) {\n    markChannelNotificationsAsRead(channelUrl: $channelUrl) {\n      id\n    }\n  }\n`;\n\nexport const GET_CHANNELS = gql`\n  query channels($communityUrl: String!) {\n    channels(communityUrl: $communityUrl) {\n      id\n      name\n      url\n      community {\n        members {\n          username\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_CHANNEL = gql`\n  query channel($url: String!) {\n    channel(url: $url) {\n      id\n      name\n      url\n      description\n      community {\n        members {\n          username\n        }\n      }\n    }\n  }\n`;\n\nexport const CREATE_CHANNEL = gql`\n  mutation createChannel(\n    $name: String!\n    $description: String\n    $url: String!\n    $isPrivate: Boolean\n    $communityUrl: String!\n  ) {\n    createChannel(\n      name: $name\n      description: $description\n      url: $url\n      isPrivate: $isPrivate\n      communityUrl: $communityUrl\n    ) {\n      id\n      name\n      url\n    }\n  }\n`;\n\nexport const EDIT_CHANNEL = gql`\n  mutation editChannel($channelId: String!, $name: String!, $description: String) {\n    editChannel(channelId: $channelId, name: $name, description: $description) {\n      id\n      name\n      description\n      url\n    }\n  }\n`;\n\nexport const NEW_CHANNEL_MESSAGE_SUBSCRIPTION = gql`\n  subscription channelNewMessage($communityUrl: String, $tenant: String) {\n    channelNewMessage(communityUrl: $communityUrl, tenant: $tenant) {\n      id\n      name\n      url\n    }\n  }\n`;\n\nexport const GET_PRIVATE_CHANNELS = gql`\n  query privateChannels {\n    privateChannels {\n      id\n      url\n    }\n  }\n`;\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,aAAa;AAE7B,OAAO,IAAMC,yBAAyB,GAAGD,GAAG,wMAM3C;AAED,OAAO,IAAME,kCAAkC,GAAGF,GAAG,iOAMpD;AAED,OAAO,IAAMG,YAAY,GAAGH,GAAG,6RAa9B;AAED,OAAO,IAAMI,WAAW,GAAGJ,GAAG,mRAc7B;AAED,OAAO,IAAMK,cAAc,GAAGL,GAAG,gbAoBhC;AAED,OAAO,IAAMM,YAAY,GAAGN,GAAG,gTAS9B;AAED,OAAO,IAAMO,gCAAgC,GAAGP,GAAG,yQAQlD;AAED,OAAO,IAAMQ,oBAAoB,GAAGR,GAAG,4JAOtC"},"metadata":{},"sourceType":"module"}