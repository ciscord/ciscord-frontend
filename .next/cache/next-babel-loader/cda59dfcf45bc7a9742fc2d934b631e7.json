{"ast":null,"code":"import _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Object$setPrototypeOf from \"@babel/runtime-corejs2/core-js/object/set-prototype-of\";\nimport _Object$getPrototypeOf from \"@babel/runtime-corejs2/core-js/object/get-prototype-of\";\nimport _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Symbol from \"@babel/runtime-corejs2/core-js/symbol\";\nimport _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = _Object$defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof _Symbol ? _Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return _Object$defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = _Object$create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = _Object$getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = _Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { useState, createContext, useEffect, useCallback } from 'react';\nimport { v4 as uuid } from 'uuid';\nvar UploadManagerContext = createContext({\n  uploadQueue: []\n});\nUploadManagerContext.displayName = 'UploadManager';\nvar UploadManagerProvider = function UploadManagerProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    loading = _useState[0],\n    setLoading = _useState[1];\n  var _useState2 = useState([]),\n    uploadQueue = _useState2[0],\n    setUploadQueue = _useState2[1];\n  var _useState3 = useState(0),\n    maxSteps = _useState3[0],\n    setMaxStep = _useState3[1];\n  var _useState4 = useState({\n      label: '',\n      step: 0\n    }),\n    sendMessageStatus = _useState4[0],\n    setSendMessageStatus = _useState4[1];\n  var upload = function upload() {\n    var nextUpload, uploadList, sendMessage;\n    return _regeneratorRuntime().async(function upload$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          nextUpload = uploadQueue[0];\n          if (nextUpload && !loading) {\n            setLoading(true);\n            setMaxStep(nextUpload.data.attachments.length + 4);\n            setSendMessageStatus({\n              label: 'Message processing',\n              step: 1\n            });\n            uploadList = nextUpload.data.attachments.map(function _callee(file) {\n              var url, filename, params, resp, presignResp;\n              return _regeneratorRuntime().async(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    url = \"http://54.147.200.132:4000/presign\";\n                    filename = uuid().slice(0, 8) + file.name;\n                    params = new URLSearchParams({\n                      key: filename\n                    });\n                    _context.next = 5;\n                    return _regeneratorRuntime().awrap(fetch(url, {\n                      method: \"POST\",\n                      body: params\n                    }));\n                  case 5:\n                    resp = _context.sent;\n                    _context.next = 8;\n                    return _regeneratorRuntime().awrap(resp.json());\n                  case 8:\n                    presignResp = _context.sent;\n                    _context.next = 11;\n                    return _regeneratorRuntime().awrap(fetch(presignResp.url, {\n                      method: \"PUT\",\n                      headers: {\n                        \"Content-Type\": file.type\n                      },\n                      body: file\n                    }));\n                  case 11:\n                    resp = _context.sent;\n                    if (filename) {\n                      setSendMessageStatus(function (_ref2) {\n                        var step = _ref2.step;\n                        return {\n                          label: \"\".concat(step - 2, \" / \").concat(nextUpload.data.attachments.length),\n                          step: step + 1\n                        };\n                      });\n                    }\n                    return _context.abrupt(\"return\", filename);\n                  case 14:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, null, null, null, _Promise);\n            });\n            setSendMessageStatus({\n              label: 'File uploading',\n              step: 2\n            });\n            sendMessage = function sendMessage() {\n              var filesUrlList;\n              return _regeneratorRuntime().async(function sendMessage$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return _regeneratorRuntime().awrap(_Promise.all(uploadList));\n                  case 2:\n                    filesUrlList = _context2.sent;\n                    console.log(filesUrlList, '==filesUrlList==');\n                    setSendMessageStatus(function (_ref3) {\n                      var step = _ref3.step;\n                      return {\n                        label: 'Message sending',\n                        step: step + 1\n                      };\n                    });\n                    _context2.next = 7;\n                    return _regeneratorRuntime().awrap(nextUpload.onSendMessage(filesUrlList));\n                  case 7:\n                    setSendMessageStatus({\n                      label: 'Success',\n                      step: setSendMessageStatus.step + 1\n                    });\n                    setMaxStep(0);\n                    setSendMessageStatus({\n                      label: '',\n                      step: 0\n                    });\n                    setUploadQueue(function (currentQueue) {\n                      return currentQueue.slice(1);\n                    });\n                    setLoading(false);\n                  case 12:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, null, null, null, _Promise);\n            };\n            sendMessage();\n          }\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, null, null, null, _Promise);\n  };\n  useEffect(function () {\n    upload();\n  }, [uploadQueue.length, loading]);\n  var addUploadToQueue = useCallback(function (uploadItem) {\n    setUploadQueue(function (currentQuery) {\n      return [].concat(_toConsumableArray(currentQuery), [uploadItem]);\n    });\n  }, []);\n  return __jsx(UploadManagerContext.Provider, {\n    value: {\n      uploadQueue: uploadQueue,\n      addUploadToQueue: addUploadToQueue,\n      uploadProgress: _objectSpread({\n        maxSteps: maxSteps\n      }, sendMessageStatus)\n    }\n  }, children);\n};\nexport { UploadManagerProvider as default, UploadManagerContext };","map":{"version":3,"names":["useState","createContext","useEffect","useCallback","v4","uuid","UploadManagerContext","uploadQueue","displayName","UploadManagerProvider","children","loading","setLoading","setUploadQueue","maxSteps","setMaxStep","label","step","sendMessageStatus","setSendMessageStatus","upload","nextUpload","data","attachments","length","uploadList","map","file","url","filename","slice","name","params","URLSearchParams","key","fetch","method","body","resp","json","presignResp","headers","type","sendMessage","all","filesUrlList","console","log","onSendMessage","currentQueue","addUploadToQueue","uploadItem","currentQuery","uploadProgress","default"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/context/UploadManager.js"],"sourcesContent":["import { useState, createContext, useEffect, useCallback } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nconst UploadManagerContext = createContext({\n  uploadQueue: [],\n});\n\nUploadManagerContext.displayName = 'UploadManager';\n\nconst UploadManagerProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n  const [uploadQueue, setUploadQueue] = useState([]);\n\n  const [maxSteps, setMaxStep] = useState(0);\n  const [sendMessageStatus, setSendMessageStatus] = useState({\n    label: '',\n    step: 0,\n  });\n\n  const upload = async () => {\n    const nextUpload = uploadQueue[0];\n    if (nextUpload && !loading) {\n      setLoading(true);\n      setMaxStep(nextUpload.data.attachments.length + 4);\n      setSendMessageStatus({ label: 'Message processing', step: 1 });\n\n      const uploadList = nextUpload.data.attachments.map(async file => {\n        const url = `http://54.147.200.132:4000/presign`;\n        const filename = uuid().slice(0,8) + file.name;\n        const params = new URLSearchParams({\n          key: filename,\n        });\n        let resp = await fetch(url, {\n          method: \"POST\",\n          body: params,\n        });\n        let presignResp = await resp.json();\n\n        resp = await fetch(presignResp.url, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": file.type,\n          },\n          body: file,\n        });\n\n        if (filename) {\n          setSendMessageStatus(({ step }) => ({\n            label: `${step - 2} / ${nextUpload.data.attachments.length}`,\n            step: step + 1,\n          }));\n        }\n\n        return filename;\n      });\n\n      setSendMessageStatus({ label: 'File uploading', step: 2 });\n\n      const sendMessage = async () => {\n        const filesUrlList = await Promise.all(uploadList);\n        console.log(filesUrlList, '==filesUrlList==')\n        setSendMessageStatus(({ step }) => ({\n          label: 'Message sending',\n          step: step + 1,\n        }));\n\n        await nextUpload.onSendMessage(filesUrlList);\n        setSendMessageStatus({\n          label: 'Success',\n          step: setSendMessageStatus.step + 1,\n        });\n\n        setMaxStep(0);\n        setSendMessageStatus({\n          label: '',\n          step: 0,\n        });\n        setUploadQueue(currentQueue => currentQueue.slice(1));\n        setLoading(false);\n      };\n\n      sendMessage();\n    }\n  }\n  useEffect(() => {\n    upload()\n  }, [uploadQueue.length, loading]);\n\n  const addUploadToQueue = useCallback(uploadItem => {\n    setUploadQueue(currentQuery => [...currentQuery, uploadItem]);\n  }, []);\n\n  return (\n    <UploadManagerContext.Provider\n      value={{\n        uploadQueue,\n        addUploadToQueue,\n        uploadProgress: {\n          maxSteps,\n          ...sendMessageStatus,\n        },\n      }}\n    >\n      {children}\n    </UploadManagerContext.Provider>\n  );\n};\n\nexport { UploadManagerProvider as default, UploadManagerContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}