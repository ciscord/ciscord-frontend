{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _this = this,\n  _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Header/ChatHeaderDirect.js\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_USER, USER_WENT_ONLINE, USER_WENT_OFFLINE } from 'apis/User';\nimport ProgressBar from 'components/UI/ProgressBar';\nimport { COMPANY_NAME } from 'utils/config';\nimport Search from './Search/Search';\nimport * as S from './ChatHeader.styled';\nexport default (function (_ref) {\n  var username = _ref.username;\n  var _useState = useState(false),\n    subscribed = _useState[0],\n    setSubscribed = _useState[1];\n  var _useQuery = useQuery(GET_USER, {\n      variables: {\n        username: username\n      }\n    }),\n    _useQuery$data = _useQuery.data,\n    _useQuery$data2 = _useQuery$data === void 0 ? {} : _useQuery$data,\n    user = _useQuery$data2.getUser,\n    loading = _useQuery.loading,\n    subscribeToMore = _useQuery.subscribeToMore;\n  useEffect(function () {\n    if (user && !subscribed) {\n      subscribeToMore({\n        document: USER_WENT_ONLINE,\n        variables: {\n          tenant: COMPANY_NAME()\n        },\n        updateQuery: function updateQuery(prev, _ref2) {\n          var subscriptionData = _ref2.subscriptionData;\n          if (!subscriptionData.data) return prev;\n          var userData = subscriptionData.data.user;\n          return _objectSpread({}, prev, {\n            user: userData\n          });\n        }\n      });\n      subscribeToMore({\n        document: USER_WENT_OFFLINE,\n        variables: {\n          tenant: COMPANY_NAME()\n        },\n        updateQuery: function updateQuery(prev, _ref3) {\n          var subscriptionData = _ref3.subscriptionData;\n          if (!subscriptionData.data) return prev;\n          var userData = subscriptionData.data.user;\n          return _objectSpread({}, prev, {\n            user: userData\n          });\n        }\n      });\n      setSubscribed(true);\n    }\n  }, [user]);\n  if (loading || !user) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    });\n  }\n  return __jsx(S.Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, __jsx(S.Info, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(S.PrivateChannelInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(S.UserName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, user.user.username), __jsx(S.UserStatus, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(S.Status, {\n    online: user.user.isOnline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, user.user.isOnline ? 'Online' : 'Offline')))), __jsx(S.ChatActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(Search, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))), __jsx(ProgressBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"names":["React","useState","useEffect","useQuery","GET_USER","USER_WENT_ONLINE","USER_WENT_OFFLINE","ProgressBar","COMPANY_NAME","Search","S","username","subscribed","setSubscribed","variables","data","user","getUser","loading","subscribeToMore","document","tenant","updateQuery","prev","subscriptionData","userData","isOnline"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Header/ChatHeaderDirect.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_USER, USER_WENT_ONLINE, USER_WENT_OFFLINE } from 'apis/User';\nimport ProgressBar from 'components/UI/ProgressBar';\nimport { COMPANY_NAME } from 'utils/config';\nimport Search from './Search/Search';\nimport * as S from './ChatHeader.styled';\n\nexport default ({ username }) => {\n  const [subscribed, setSubscribed] = useState(false);\n  const { data: { getUser: user } = {}, loading, subscribeToMore } = useQuery(GET_USER, {\n    variables: { username },\n  });\n\n  useEffect(() => {\n    if (user && !subscribed) {\n      subscribeToMore({\n        document: USER_WENT_ONLINE,\n        variables: { tenant: COMPANY_NAME() },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const { user: userData } = subscriptionData.data;\n\n          return {\n            ...prev,\n            user: userData,\n          };\n        },\n      });\n\n      subscribeToMore({\n        document: USER_WENT_OFFLINE,\n        variables: { tenant: COMPANY_NAME() },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const { user: userData } = subscriptionData.data;\n\n          return {\n            ...prev,\n            user: userData,\n          };\n        },\n      });\n      setSubscribed(true);\n    }\n  }, [user]);\n\n  if (loading || !user) {\n    return <div />;\n  }\n\n  return (\n    <S.Container>\n      <>\n        <S.Info>\n          <S.PrivateChannelInfo>\n            <S.UserName>{user.user.username}</S.UserName>\n            <S.UserStatus>\n              <S.Status online={user.user.isOnline} />\n              <span>{user.user.isOnline ? 'Online' : 'Offline'}</span>\n            </S.UserStatus>\n          </S.PrivateChannelInfo>\n        </S.Info>\n        <S.ChatActions>\n          <Search />\n        </S.ChatActions>\n      </>\n      <ProgressBar />\n    </S.Container>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}