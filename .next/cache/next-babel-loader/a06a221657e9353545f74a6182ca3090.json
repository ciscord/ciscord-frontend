{"ast":null,"code":"import _Object$setPrototypeOf from \"@babel/runtime-corejs2/core-js/object/set-prototype-of\";\nimport _Object$getPrototypeOf from \"@babel/runtime-corejs2/core-js/object/get-prototype-of\";\nimport _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Symbol from \"@babel/runtime-corejs2/core-js/symbol\";\nimport _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = _Object$defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof _Symbol ? _Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return _Object$defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = _Object$create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = _Object$getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = _Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { useRef, useState, createContext, useContext, useEffect } from 'react';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport Router from 'next/router';\nimport { COMPANY_NAME } from 'utils/config';\nimport { LOGOUT_USER, GET_ME } from 'apis/User';\nimport { DELETE_MESSAGE, DELETE_REPLY_MESSAGE } from 'apis/Message';\nimport { AppContext } from './AppContext';\nvar UserContext = createContext();\nvar UserProvider = function UserProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    user = _useState[0],\n    setUser = _useState[1];\n  var _useState2 = useState([]),\n    messageQueue = _useState2[0],\n    setMessageQueue = _useState2[1];\n  var messageQueueRef = useRef(messageQueue);\n  messageQueueRef.current = messageQueue;\n  var _useMutation = useMutation(LOGOUT_USER),\n    _useMutation2 = _slicedToArray(_useMutation, 1),\n    logoutUser = _useMutation2[0];\n  var _useLazyQuery = useLazyQuery(GET_ME, {\n      fetchPolicy: 'network-only',\n      onCompleted: function onCompleted() {\n        sessionStorage.setItem('tenant', COMPANY_NAME());\n        setUser(me);\n        Router.push(\"/[company]/[community]/[channel]\", \"/\".concat(COMPANY_NAME(), \"/general/general\"), {\n          shallow: true\n        });\n      }\n    }),\n    _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n    fetchMe = _useLazyQuery2[0],\n    _useLazyQuery2$1$data = _useLazyQuery2[1].data,\n    _useLazyQuery2$1$data2 = _useLazyQuery2$1$data === void 0 ? {} : _useLazyQuery2$1$data,\n    me = _useLazyQuery2$1$data2.me,\n    loading = _useLazyQuery2$1$data2.loading;\n  var _useContext = useContext(AppContext),\n    userLoaded = _useContext.userLoaded,\n    setUserLoaded = _useContext.setUserLoaded;\n  var _useMutation3 = useMutation(DELETE_MESSAGE),\n    _useMutation4 = _slicedToArray(_useMutation3, 1),\n    deleteMessageMutation = _useMutation4[0];\n  var _useMutation5 = useMutation(DELETE_REPLY_MESSAGE),\n    _useMutation6 = _slicedToArray(_useMutation5, 1),\n    deleteReplyMessage = _useMutation6[0];\n  var _useLazyQuery3 = useLazyQuery(GET_ME, {\n      fetchPolicy: 'network-only',\n      onCompleted: function onCompleted() {\n        sessionStorage.setItem('tenant', COMPANY_NAME());\n        setUser(me1);\n        if (!userLoaded) {\n          setUserLoaded(true);\n        }\n      }\n    }),\n    _useLazyQuery4 = _slicedToArray(_useLazyQuery3, 2),\n    fetchOnly = _useLazyQuery4[0],\n    _useLazyQuery4$1$data = _useLazyQuery4[1].data,\n    _useLazyQuery4$1$data2 = _useLazyQuery4$1$data === void 0 ? {} : _useLazyQuery4$1$data,\n    me1 = _useLazyQuery4$1$data2.me;\n  var logout = function logout() {\n    return _regeneratorRuntime().async(function logout$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime().awrap(logoutUser({}));\n        case 3:\n          _context.next = 8;\n          break;\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          alert(_context.t0);\n        case 8:\n          sessionStorage.removeItem('token');\n          setUser(null);\n          if (window) {\n            window.sessionStorage.setItem('logout', _Date$now());\n            sessionStorage.removeItem('user');\n          }\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, [[0, 5]], _Promise);\n  };\n  var signin = function signin(token) {\n    sessionStorage.setItem('token', token);\n    fetchMe();\n  };\n  var getMe = function getMe() {\n    fetchOnly();\n  };\n  useEffect(function () {\n    if (!user) {\n      getMe();\n    }\n  }, []);\n  useEffect(function () {\n    if (user === null) {\n      var localState = JSON.parse(sessionStorage.getItem('user'));\n      if (localState) {\n        setUser(localState);\n      }\n    } else if (sessionStorage.getItem('tenant') !== COMPANY_NAME()) {\n      logout();\n    } else {\n      sessionStorage.setItem('user', _JSON$stringify(user));\n    }\n  }, [user]);\n  useEffect(function () {\n    if (messageQueue.length > 0) {\n      setTimeout(deleteMessage, 5000);\n    }\n  }, [messageQueue]);\n  var addMessageQueue = function addMessageQueue(messageId) {\n    if (messageQueueRef.current.indexOf(messageId) === -1) {\n      setMessageQueue([].concat(_toConsumableArray(messageQueueRef.current), [messageId]));\n    }\n  };\n  var removeMessageQueue = function removeMessageQueue(messageId) {\n    var data = messageQueueRef.current.filter(function (e) {\n      return e !== messageId;\n    });\n    setMessageQueue(data);\n  };\n  var deleteMessage = function deleteMessage() {\n    var messageId = messageQueueRef.current.shift();\n    if (messageId) {\n      setMessageQueue(messageQueueRef.current);\n      deleteMessageMutation({\n        variables: {\n          messageId: messageId\n        }\n      });\n      deleteReplyMessage({\n        variables: {\n          messageId: messageId\n        }\n      });\n    }\n  };\n  var getMessageQueue = function getMessageQueue() {\n    return messageQueueRef.current;\n  };\n  return __jsx(UserContext.Provider, {\n    value: {\n      isLogged: !!user,\n      user: user,\n      setUser: setUser,\n      getMe: getMe,\n      signin: signin,\n      logout: logout,\n      loading: loading,\n      addMessageQueue: addMessageQueue,\n      removeMessageQueue: removeMessageQueue,\n      getMessageQueue: getMessageQueue\n    }\n  }, children);\n};\nexport { UserProvider as default, UserContext };","map":{"version":3,"names":["useRef","useState","createContext","useContext","useEffect","useLazyQuery","useMutation","Router","COMPANY_NAME","LOGOUT_USER","GET_ME","DELETE_MESSAGE","DELETE_REPLY_MESSAGE","AppContext","UserContext","UserProvider","children","user","setUser","messageQueue","setMessageQueue","messageQueueRef","current","logoutUser","fetchPolicy","onCompleted","sessionStorage","setItem","me","push","shallow","fetchMe","data","loading","userLoaded","setUserLoaded","deleteMessageMutation","deleteReplyMessage","me1","fetchOnly","logout","alert","removeItem","window","signin","token","getMe","localState","JSON","parse","getItem","length","setTimeout","deleteMessage","addMessageQueue","messageId","indexOf","removeMessageQueue","filter","e","shift","variables","getMessageQueue","isLogged","default"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/context/UserContext.js"],"sourcesContent":["import { useRef, useState, createContext, useContext, useEffect } from 'react';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport Router from 'next/router';\nimport { COMPANY_NAME } from 'utils/config';\nimport { LOGOUT_USER, GET_ME } from 'apis/User';\nimport { DELETE_MESSAGE, DELETE_REPLY_MESSAGE } from 'apis/Message';\nimport { AppContext } from './AppContext';\n\nconst UserContext = createContext();\n\nconst UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [messageQueue, setMessageQueue] = useState([]);\n  const messageQueueRef = useRef(messageQueue);\n  messageQueueRef.current = messageQueue;\n\n  const [logoutUser] = useMutation(LOGOUT_USER);\n  const [fetchMe, { data: { me, loading } = {} }] = useLazyQuery(GET_ME, {\n    fetchPolicy: 'network-only',\n    onCompleted: () => {\n      sessionStorage.setItem('tenant', COMPANY_NAME());\n      setUser(me);\n      Router.push(`/[company]/[community]/[channel]`, `/${COMPANY_NAME()}/general/general`, {\n        shallow: true,\n      });\n    },\n  });\n\n  const { userLoaded, setUserLoaded } = useContext(AppContext);\n  const [deleteMessageMutation] = useMutation(DELETE_MESSAGE);\n  const [deleteReplyMessage] = useMutation(DELETE_REPLY_MESSAGE);\n\n  const [fetchOnly, { data: { me: me1 } = {} }] = useLazyQuery(GET_ME, {\n    fetchPolicy: 'network-only',\n    onCompleted: () => {\n      sessionStorage.setItem('tenant', COMPANY_NAME());\n      setUser(me1);\n      if (!userLoaded) {\n        setUserLoaded(true);\n      }\n    },\n  });\n\n  const logout = async () => {\n    try {\n      await logoutUser({});\n    } catch (error) {\n      alert(error);\n    }\n\n    sessionStorage.removeItem('token');\n    setUser(null);\n    if (window) {\n      window.sessionStorage.setItem('logout', Date.now());\n      sessionStorage.removeItem('user');\n    }\n  };\n\n  const signin = token => {\n    sessionStorage.setItem('token', token);\n    fetchMe();\n  };\n\n  const getMe = () => {\n    fetchOnly();\n  };\n\n  useEffect(() => {\n    if (!user) {\n      getMe();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (user === null) {\n      const localState = JSON.parse(sessionStorage.getItem('user'));\n      if (localState) {\n        setUser(localState);\n      }\n    } else if (sessionStorage.getItem('tenant') !== COMPANY_NAME()) {\n      logout();\n    } else {\n      sessionStorage.setItem('user', JSON.stringify(user));\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (messageQueue.length > 0) {\n      setTimeout(deleteMessage, 5000);\n    }\n  }, [messageQueue]);\n\n  const addMessageQueue = messageId => {\n    if (messageQueueRef.current.indexOf(messageId) === -1) {\n      setMessageQueue([...messageQueueRef.current, messageId]);\n    }\n  };\n\n  const removeMessageQueue = messageId => {\n    const data = messageQueueRef.current.filter(e => e !== messageId);\n\n    setMessageQueue(data);\n  };\n\n  const deleteMessage = () => {\n    const messageId = messageQueueRef.current.shift();\n    if (messageId) {\n      setMessageQueue(messageQueueRef.current);\n      deleteMessageMutation({ variables: { messageId } });\n      deleteReplyMessage({\n        variables: {\n          messageId,\n        },\n      });\n    }\n  };\n\n  const getMessageQueue = () => {\n    return messageQueueRef.current;\n  };\n  return (\n    <UserContext.Provider\n      value={{\n        isLogged: !!user,\n        user,\n        setUser,\n        getMe,\n        signin,\n        logout,\n        loading,\n        addMessageQueue,\n        removeMessageQueue,\n        getMessageQueue,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport { UserProvider as default, UserContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}