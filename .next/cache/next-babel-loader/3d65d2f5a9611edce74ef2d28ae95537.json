{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { useEffect, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { useMutation, useLazyQuery } from '@apollo/client';\nimport { GET_ROLE, CREATE_ROLE, UPDATE_ROLE, DELETE_ROLE } from 'apis/Role';\nimport Popup from 'components/UI/Popup';\nimport { Input, ColorInput, ToggleInput } from 'components/UI/Input';\nimport { ButtonPrimary, ButtonSubtle } from 'components/UI/Button';\nimport { PlusIcon, MoreIcon } from 'components/UI/Icons';\nimport * as S from './Roles.styled';\n\n// import { useRouter } from 'next/router';\n// import { COMPANY_NAME } from 'utils/config';\n// import Popup from 'components/UI/Popup';\n// import plusIcon from 'public/icons/plus3.svg';\n// import * as S from './MorePopup.styled';\n\n// const MorePopup = ({ opened, close }) => {\n//   const {\n//     query: { community: communityUrl },\n//     push,\n//   } = useRouter();\n\n//   const items = [\n//     {\n//       label: 'New channel',\n//       icon: (\n//         <S.PlusIcon>\n//           <use xlinkHref={`${plusIcon}#icon-plus3`} />\n//         </S.PlusIcon>\n//       ),\n//       onClick: () =>\n//         push(\n//           `/[company]/[community]/new-channel`,\n//           `/${COMPANY_NAME()}/${communityUrl}/new-channel`,\n//           { shallow: true }\n//         ),\n//     },\n//   ];\n//   return <Popup opened={opened} close={close} items={items} />;\n// };\n\n// export default MorePopup;\n\nconst permissions = [{\n  key: 'manage_community',\n  label: 'Manage communities',\n  tip: 'Can member create, update and delete communities?'\n}, {\n  key: 'manage_channel',\n  label: 'Manage channels',\n  tip: 'Can member create, update and delete channels?'\n}, {\n  key: 'manage_role',\n  label: 'Manage roles',\n  tip: 'Can member manage roles?'\n}, {\n  key: 'chat_permission',\n  label: 'Chat permission',\n  tip: 'Can member type in chat?'\n}, {\n  key: 'upload_image',\n  label: 'Upload images',\n  tip: 'Can member upload images?'\n}, {\n  key: 'post_links',\n  label: 'Post links',\n  tip: 'Can member post links?'\n}, {\n  key: 'delete_message',\n  label: 'Delete messages',\n  tip: 'Can member delete messages'\n}];\nconst defaultPermissions = {\n  manage_community: false,\n  manage_channel: false,\n  manage_role: false,\n  chat_permission: false,\n  upload_image: false,\n  post_links: false,\n  delete_message: false\n};\nexport default (({\n  newRole\n}) => {\n  const {\n    0: selectedRole,\n    1: setRole\n  } = useState(null);\n  const {\n    0: showMorePopup,\n    1: setShowMorePopup\n  } = useState(false);\n  const {\n    0: permissionsObject,\n    1: setPermissionObject\n  } = useState({});\n  const [getRoles, {\n    data: {\n      roles = []\n    } = {},\n    loading: rolesLoading\n  }] = useLazyQuery(GET_ROLE);\n  const [createRole] = useMutation(CREATE_ROLE, {\n    update(cache, {\n      data: {\n        createRole: role\n      }\n    }) {\n      const {\n        roles: cachedRoles\n      } = cache.readQuery({\n        query: GET_ROLE\n      });\n      cache.writeQuery({\n        query: GET_ROLE,\n        data: {\n          roles: cachedRoles.concat([role])\n        }\n      });\n    }\n  });\n  const [updateRole] = useMutation(UPDATE_ROLE, {});\n  const [deleteRole] = useMutation(DELETE_ROLE, {\n    update(cache, {\n      data: {\n        deleteRole: deletedRole\n      }\n    }) {\n      const {\n        roles: cachedRoles\n      } = cache.readQuery({\n        query: GET_ROLE\n      });\n      cache.writeQuery({\n        query: GET_ROLE,\n        data: {\n          roles: cachedRoles.filter(e => e.id !== deletedRole.id)\n        }\n      });\n    }\n  });\n  useEffect(() => {\n    getRoles();\n  }, []);\n  useEffect(() => {\n    if (roles.length > 0 && !newRole) {\n      setRole(roles[0]);\n    }\n  }, [roles.length]);\n  const transformPermissionsToObject = () => {\n    if (selectedRole) {\n      const newPermissionObject = {};\n      const permissionsString = selectedRole.roleSettings;\n      permissions.forEach(p => {\n        if (permissionsString.includes(p.key)) {\n          newPermissionObject[p.key] = true;\n        } else {\n          newPermissionObject[p.key] = false;\n        }\n      });\n      return newPermissionObject;\n    }\n    return defaultPermissions;\n  };\n  const transformPermissionsToString = values => {\n    const permissionsArray = [];\n\n    // eslint-disable-next-line\n    for (const [key, value] of Object.entries(values)) {\n      const isPermissionKey = key !== 'title' && key !== 'color';\n\n      // for permissions\n      if (isPermissionKey && (value === true || value[0] === 'on')) {\n        permissionsArray.push(key);\n      }\n    }\n    return permissionsArray.toString();\n  };\n  useEffect(() => {\n    setPermissionObject(transformPermissionsToObject(selectedRole));\n  }, [selectedRole]);\n  const onSubmit = async values => {\n    const roleSettings = transformPermissionsToString(values);\n    const payload = {\n      title: values.title,\n      color: values.color,\n      roleSettings\n    };\n    if (selectedRole !== null) {\n      const {\n        data: {\n          updateRole: updatedRole\n        }\n        // errors,\n      } = await updateRole({\n        variables: _objectSpread({\n          id: selectedRole.id\n        }, payload),\n        errorPolicy: 'all'\n      });\n      setRole(updatedRole);\n    } else {\n      const {\n        data: {\n          createRole: createdRole\n        }\n        // errors,\n      } = await createRole({\n        variables: payload,\n        errorPolicy: 'all'\n      });\n      setRole(createdRole);\n    }\n  };\n  if (rolesLoading) {\n    return __jsx(\"div\", null);\n  }\n  return __jsx(S.Container, null, __jsx(S.Header, null, __jsx(S.Roles, null, roles.map(role => __jsx(S.Role, {\n    key: role.id,\n    active: selectedRole && selectedRole.title === role.title,\n    onClick: () => setRole(role)\n  }, role.title)), __jsx(S.Role, {\n    active: !selectedRole,\n    onClick: () => setRole(null)\n  }, \"New role\")), __jsx(S.Actions, null, __jsx(S.PlusIconWrapper, {\n    onClick: () => setRole(null)\n  }, __jsx(PlusIcon, {\n    active: selectedRole === null\n  })), selectedRole && __jsx(React.Fragment, null, __jsx(MoreIcon, {\n    active: showMorePopup,\n    onClick: () => setShowMorePopup(!showMorePopup)\n  }), __jsx(Popup, {\n    opened: showMorePopup,\n    close: () => setShowMorePopup(false),\n    items: [{\n      label: 'Delete role',\n      onClick: () => {\n        deleteRole({\n          variables: {\n            id: selectedRole.id\n          }\n        });\n        setRole(roles[0]);\n        setShowMorePopup(false);\n      }\n    }]\n  })))), __jsx(S.Body, null, __jsx(Formik, {\n    initialValues: (() => {\n      if (selectedRole !== null) {\n        return _objectSpread({\n          title: selectedRole.title,\n          color: selectedRole.color\n        }, permissionsObject);\n      }\n      return _objectSpread({\n        title: '',\n        color: '#19BC9B'\n      }, permissionsObject);\n    })(),\n    enableReinitialize: true,\n    onSubmit: onSubmit\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    style: {\n      paddingBottom: 76,\n      paddingTop: 73\n    }\n  }, __jsx(Field, {\n    type: \"text\",\n    name: \"title\",\n    label: \"Role name\",\n    placeholder: \"Enter role name\",\n    component: Input\n  }), __jsx(Field, {\n    label: \"Role color\",\n    name: \"color\",\n    component: ColorInput\n  }), __jsx(S.SectionTitle, null, \"General permissions\"), permissions.map(permission => __jsx(Field, {\n    key: permission.key,\n    type: \"text\",\n    name: permission.key,\n    label: permission.label,\n    tip: permission.tip,\n    component: ToggleInput\n  })), __jsx(S.Footer, null, __jsx(ButtonPrimary, {\n    type: \"submit\",\n    name: \"button\",\n    disabled: isSubmitting,\n    style: {\n      marginRight: 10\n    }\n  }, selectedRole === null ? 'Create' : 'Save'), selectedRole === null && __jsx(ButtonSubtle, {\n    type: \"submit\",\n    name: \"button\",\n    onClick: () => {\n      setRole(roles[0]);\n    }\n  }, \"Cancel\"))))));\n});","map":{"version":3,"names":["useEffect","useState","Formik","Form","Field","useMutation","useLazyQuery","GET_ROLE","CREATE_ROLE","UPDATE_ROLE","DELETE_ROLE","Popup","Input","ColorInput","ToggleInput","ButtonPrimary","ButtonSubtle","PlusIcon","MoreIcon","S","permissions","key","label","tip","defaultPermissions","manage_community","manage_channel","manage_role","chat_permission","upload_image","post_links","delete_message","newRole","selectedRole","setRole","showMorePopup","setShowMorePopup","permissionsObject","setPermissionObject","getRoles","data","roles","loading","rolesLoading","createRole","update","cache","role","cachedRoles","readQuery","query","writeQuery","concat","updateRole","deleteRole","deletedRole","filter","e","id","length","transformPermissionsToObject","newPermissionObject","permissionsString","roleSettings","forEach","p","includes","transformPermissionsToString","values","permissionsArray","value","Object","entries","isPermissionKey","push","toString","onSubmit","payload","title","color","updatedRole","variables","errorPolicy","createdRole","map","onClick","isSubmitting","paddingBottom","paddingTop","permission","marginRight"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Settings/Roles/Roles.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\n\nimport { useMutation, useLazyQuery } from '@apollo/client';\nimport { GET_ROLE, CREATE_ROLE, UPDATE_ROLE, DELETE_ROLE } from 'apis/Role';\n\nimport Popup from 'components/UI/Popup';\nimport { Input, ColorInput, ToggleInput } from 'components/UI/Input';\nimport { ButtonPrimary, ButtonSubtle } from 'components/UI/Button';\nimport { PlusIcon, MoreIcon } from 'components/UI/Icons';\n\nimport * as S from './Roles.styled';\n\n// import { useRouter } from 'next/router';\n// import { COMPANY_NAME } from 'utils/config';\n// import Popup from 'components/UI/Popup';\n// import plusIcon from 'public/icons/plus3.svg';\n// import * as S from './MorePopup.styled';\n\n// const MorePopup = ({ opened, close }) => {\n//   const {\n//     query: { community: communityUrl },\n//     push,\n//   } = useRouter();\n\n//   const items = [\n//     {\n//       label: 'New channel',\n//       icon: (\n//         <S.PlusIcon>\n//           <use xlinkHref={`${plusIcon}#icon-plus3`} />\n//         </S.PlusIcon>\n//       ),\n//       onClick: () =>\n//         push(\n//           `/[company]/[community]/new-channel`,\n//           `/${COMPANY_NAME()}/${communityUrl}/new-channel`,\n//           { shallow: true }\n//         ),\n//     },\n//   ];\n//   return <Popup opened={opened} close={close} items={items} />;\n// };\n\n// export default MorePopup;\n\nconst permissions = [\n  {\n    key: 'manage_community',\n    label: 'Manage communities',\n    tip: 'Can member create, update and delete communities?',\n  },\n  {\n    key: 'manage_channel',\n    label: 'Manage channels',\n    tip: 'Can member create, update and delete channels?',\n  },\n  {\n    key: 'manage_role',\n    label: 'Manage roles',\n    tip: 'Can member manage roles?',\n  },\n  {\n    key: 'chat_permission',\n    label: 'Chat permission',\n    tip: 'Can member type in chat?',\n  },\n  {\n    key: 'upload_image',\n    label: 'Upload images',\n    tip: 'Can member upload images?',\n  },\n  {\n    key: 'post_links',\n    label: 'Post links',\n    tip: 'Can member post links?',\n  },\n  {\n    key: 'delete_message',\n    label: 'Delete messages',\n    tip: 'Can member delete messages',\n  },\n];\n\nconst defaultPermissions = {\n  manage_community: false,\n  manage_channel: false,\n  manage_role: false,\n  chat_permission: false,\n  upload_image: false,\n  post_links: false,\n  delete_message: false,\n};\n\nexport default ({ newRole }) => {\n  const [selectedRole, setRole] = useState(null);\n  const [showMorePopup, setShowMorePopup] = useState(false);\n  const [permissionsObject, setPermissionObject] = useState({});\n  const [getRoles, { data: { roles = [] } = {}, loading: rolesLoading }] = useLazyQuery(GET_ROLE);\n\n  const [createRole] = useMutation(CREATE_ROLE, {\n    update(cache, { data: { createRole: role } }) {\n      const { roles: cachedRoles } = cache.readQuery({ query: GET_ROLE });\n      cache.writeQuery({\n        query: GET_ROLE,\n        data: { roles: cachedRoles.concat([role]) },\n      });\n    },\n  });\n  const [updateRole] = useMutation(UPDATE_ROLE, {});\n  const [deleteRole] = useMutation(DELETE_ROLE, {\n    update(cache, { data: { deleteRole: deletedRole } }) {\n      const { roles: cachedRoles } = cache.readQuery({ query: GET_ROLE });\n      cache.writeQuery({\n        query: GET_ROLE,\n        data: { roles: cachedRoles.filter(e => e.id !== deletedRole.id) },\n      });\n    },\n  });\n\n  useEffect(() => {\n    getRoles();\n  }, []);\n\n  useEffect(() => {\n    if (roles.length > 0 && !newRole) {\n      setRole(roles[0]);\n    }\n  }, [roles.length]);\n\n  const transformPermissionsToObject = () => {\n    if (selectedRole) {\n      const newPermissionObject = {};\n      const permissionsString = selectedRole.roleSettings;\n\n      permissions.forEach(p => {\n        if (permissionsString.includes(p.key)) {\n          newPermissionObject[p.key] = true;\n        } else {\n          newPermissionObject[p.key] = false;\n        }\n      });\n\n      return newPermissionObject;\n    }\n    return defaultPermissions;\n  };\n\n  const transformPermissionsToString = values => {\n    const permissionsArray = [];\n\n    // eslint-disable-next-line\n    for (const [key, value] of Object.entries(values)) {\n      const isPermissionKey = key !== 'title' && key !== 'color';\n\n      // for permissions\n      if (isPermissionKey && (value === true || value[0] === 'on')) {\n        permissionsArray.push(key);\n      }\n    }\n\n    return permissionsArray.toString();\n  };\n\n  useEffect(() => {\n    setPermissionObject(transformPermissionsToObject(selectedRole));\n  }, [selectedRole]);\n\n  const onSubmit = async values => {\n    const roleSettings = transformPermissionsToString(values);\n\n    const payload = {\n      title: values.title,\n      color: values.color,\n      roleSettings,\n    };\n\n    if (selectedRole !== null) {\n      const {\n        data: { updateRole: updatedRole },\n        // errors,\n      } = await updateRole({\n        variables: { id: selectedRole.id, ...payload },\n        errorPolicy: 'all',\n      });\n      setRole(updatedRole);\n    } else {\n      const {\n        data: { createRole: createdRole },\n        // errors,\n      } = await createRole({\n        variables: payload,\n        errorPolicy: 'all',\n      });\n      setRole(createdRole);\n    }\n  };\n\n  if (rolesLoading) {\n    return <div />;\n  }\n\n  return (\n    <S.Container>\n      <S.Header>\n        <S.Roles>\n          {roles.map(role => (\n            <S.Role\n              key={role.id}\n              active={selectedRole && selectedRole.title === role.title}\n              onClick={() => setRole(role)}\n            >\n              {role.title}\n            </S.Role>\n          ))}\n\n          <S.Role active={!selectedRole} onClick={() => setRole(null)}>\n            New role\n          </S.Role>\n        </S.Roles>\n        <S.Actions>\n          <S.PlusIconWrapper onClick={() => setRole(null)}>\n            <PlusIcon active={selectedRole === null} />\n          </S.PlusIconWrapper>\n          {selectedRole && (\n            <>\n              <MoreIcon active={showMorePopup} onClick={() => setShowMorePopup(!showMorePopup)} />\n              <Popup\n                opened={showMorePopup}\n                close={() => setShowMorePopup(false)}\n                items={[\n                  {\n                    label: 'Delete role',\n                    onClick: () => {\n                      deleteRole({\n                        variables: {\n                          id: selectedRole.id,\n                        },\n                      });\n                      setRole(roles[0]);\n                      setShowMorePopup(false);\n                    },\n                  },\n                ]}\n              />\n            </>\n          )}\n        </S.Actions>\n      </S.Header>\n      <S.Body>\n        <Formik\n          initialValues={(() => {\n            if (selectedRole !== null) {\n              return {\n                title: selectedRole.title,\n                color: selectedRole.color,\n                ...permissionsObject,\n              };\n            }\n            return {\n              title: '',\n              color: '#19BC9B',\n              ...permissionsObject,\n            };\n          })()}\n          enableReinitialize\n          onSubmit={onSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form style={{ paddingBottom: 76, paddingTop: 73 }}>\n              <Field\n                type=\"text\"\n                name=\"title\"\n                label=\"Role name\"\n                placeholder=\"Enter role name\"\n                component={Input}\n              />\n              <Field label=\"Role color\" name=\"color\" component={ColorInput} />\n              <S.SectionTitle>General permissions</S.SectionTitle>\n              {permissions.map(permission => (\n                <Field\n                  key={permission.key}\n                  type=\"text\"\n                  name={permission.key}\n                  label={permission.label}\n                  tip={permission.tip}\n                  component={ToggleInput}\n                />\n              ))}\n              <S.Footer>\n                <ButtonPrimary\n                  type=\"submit\"\n                  name=\"button\"\n                  disabled={isSubmitting}\n                  style={{ marginRight: 10 }}\n                >\n                  {selectedRole === null ? 'Create' : 'Save'}\n                </ButtonPrimary>\n                {selectedRole === null && (\n                  <ButtonSubtle\n                    type=\"submit\"\n                    name=\"button\"\n                    onClick={() => {\n                      setRole(roles[0]);\n                    }}\n                  >\n                    Cancel\n                  </ButtonSubtle>\n                )}\n              </S.Footer>\n            </Form>\n          )}\n        </Formik>\n      </S.Body>\n    </S.Container>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}