{"ast":null,"code":"var __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React, { useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSubscription } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { COMPANY_NAME } from 'utils/config';\nimport { UserContext } from 'context/UserContext';\nimport * as S from './TypingStatus.styled';\nconst USER_TYPING_STATUS = gql`\n  subscription userTypingStatus($channelUrl: String, $tenant: String, $username: String) {\n    userTypingStatus(channelUrl: $channelUrl, tenant: $tenant, username: $username) {\n      username\n      isTyping\n    }\n  }\n`;\nexport default (() => {\n  const {\n    0: typingUsers,\n    1: setTypingUsers\n  } = useState([]);\n  const {\n    0: typingTimeouts,\n    1: setTypingTimeouts\n  } = useState({});\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    query: {\n      channel: channelUrl,\n      community: communityUrl\n    }\n  } = useRouter();\n  const url = `${communityUrl}/${channelUrl}`;\n  const startTimeout = username => {\n    const timeout = {};\n    timeout[username] = setTimeout(() => {\n      setTypingUsers(currentTypingUsers => currentTypingUsers.filter(typingUsername => typingUsername !== username));\n    }, 3000);\n    setTypingTimeouts(_objectSpread({\n      typingTimeouts\n    }, timeout));\n  };\n  useSubscription(USER_TYPING_STATUS, {\n    variables: {\n      channelUrl: url,\n      tenant: COMPANY_NAME(),\n      username: user && user.username || ''\n    },\n    onSubscriptionData: ({\n      subscriptionData: {\n        data: {\n          userTypingStatus\n        }\n      }\n    }) => {\n      const userIndex = typingUsers.findIndex(username => userTypingStatus.username === username);\n      clearTimeout(typingTimeouts[userTypingStatus.username]);\n      if (userTypingStatus.isTyping) {\n        if (userIndex === -1) {\n          setTypingUsers([...typingUsers, userTypingStatus.username]);\n        }\n        startTimeout(userTypingStatus.username);\n      } else if (userIndex !== -1) {\n        setTypingUsers(typingUsers.filter(username => username !== userTypingStatus.username));\n      }\n    }\n  });\n  const getStatusString = () => {\n    const visibleUsers = typingUsers.slice(0, 2).join(', ');\n    const moreUsers = typingUsers.length > 2 ? `and ${typingUsers.length - 2} others` : '';\n    return `${visibleUsers} ${moreUsers} is responding`;\n  };\n  return typingUsers.length > 0 && __jsx(S.Container, null, __jsx(\"span\", {\n    style: {\n      marginRight: 5\n    }\n  }, getStatusString()), __jsx(S.Circle, null), __jsx(S.Circle, null), __jsx(S.Circle, null));\n});","map":{"version":3,"names":["React","useState","useContext","useRouter","useSubscription","gql","COMPANY_NAME","UserContext","S","USER_TYPING_STATUS","typingUsers","setTypingUsers","typingTimeouts","setTypingTimeouts","user","query","channel","channelUrl","community","communityUrl","url","startTimeout","username","timeout","setTimeout","currentTypingUsers","filter","typingUsername","variables","tenant","onSubscriptionData","subscriptionData","data","userTypingStatus","userIndex","findIndex","clearTimeout","isTyping","getStatusString","visibleUsers","slice","join","moreUsers","length","marginRight"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Input/TypingStatus/TypingStatus.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSubscription } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { COMPANY_NAME } from 'utils/config';\nimport { UserContext } from 'context/UserContext';\nimport * as S from './TypingStatus.styled';\n\nconst USER_TYPING_STATUS = gql`\n  subscription userTypingStatus($channelUrl: String, $tenant: String, $username: String) {\n    userTypingStatus(channelUrl: $channelUrl, tenant: $tenant, username: $username) {\n      username\n      isTyping\n    }\n  }\n`;\n\nexport default () => {\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [typingTimeouts, setTypingTimeouts] = useState({});\n  const { user } = useContext(UserContext);\n\n  const {\n    query: { channel: channelUrl, community: communityUrl },\n  } = useRouter();\n\n  const url = `${communityUrl}/${channelUrl}`;\n\n  const startTimeout = username => {\n    const timeout = {};\n\n    timeout[username] = setTimeout(() => {\n      setTypingUsers(currentTypingUsers =>\n        currentTypingUsers.filter(typingUsername => typingUsername !== username)\n      );\n    }, 3000);\n\n    setTypingTimeouts({\n      typingTimeouts,\n      ...timeout,\n    });\n  };\n\n  useSubscription(USER_TYPING_STATUS, {\n    variables: {\n      channelUrl: url,\n      tenant: COMPANY_NAME(),\n      username: (user && user.username) || '',\n    },\n    onSubscriptionData: ({\n      subscriptionData: {\n        data: { userTypingStatus },\n      },\n    }) => {\n      const userIndex = typingUsers.findIndex(username => userTypingStatus.username === username);\n\n      clearTimeout(typingTimeouts[userTypingStatus.username]);\n\n      if (userTypingStatus.isTyping) {\n        if (userIndex === -1) {\n          setTypingUsers([...typingUsers, userTypingStatus.username]);\n        }\n\n        startTimeout(userTypingStatus.username);\n      } else if (userIndex !== -1) {\n        setTypingUsers(typingUsers.filter(username => username !== userTypingStatus.username));\n      }\n    },\n  });\n\n  const getStatusString = () => {\n    const visibleUsers = typingUsers.slice(0, 2).join(', ');\n    const moreUsers = typingUsers.length > 2 ? `and ${typingUsers.length - 2} others` : '';\n\n    return `${visibleUsers} ${moreUsers} is responding`;\n  };\n\n  return (\n    typingUsers.length > 0 && (\n      <S.Container>\n        <span style={{ marginRight: 5 }}>{getStatusString()}</span>\n        <S.Circle />\n        <S.Circle />\n        <S.Circle />\n      </S.Container>\n    )\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}