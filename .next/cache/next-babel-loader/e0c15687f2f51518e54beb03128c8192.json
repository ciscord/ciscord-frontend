{"ast":null,"code":"var _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Message/Reactions/Reaction/Reaction.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Refactor: createUsersList\nimport { useContext } from 'react';\nimport { UserContext } from 'context';\nimport { useMutation } from '@apollo/client';\nimport { Emoji } from 'emoji-mart';\nimport { TOGGLE_REACTION } from 'apis/Message';\nimport Tooltip from 'components/UI/Tooltip';\nimport * as S from './Reaction.styled';\nconst maxNumberOfLines = 50;\nconst lineSymbols = 28;\nexport default (({\n  reaction,\n  messageId\n}) => {\n  const [toggleReaction] = useMutation(TOGGLE_REACTION);\n  const {\n    isLogged\n  } = useContext(UserContext);\n  const onToggleReaction = () => {\n    if (isLogged) {\n      toggleReaction({\n        variables: {\n          name: reaction.name,\n          messageId\n        }\n      });\n    }\n  };\n  const createUsersList = users => {\n    const userListString = users.map(({\n      username: userName\n    }) => userName).join(', ');\n    const resultList = [];\n    for (let i = 0; i < maxNumberOfLines; i++) {\n      resultList.push(userListString.slice(i * lineSymbols, (1 + i) * lineSymbols));\n    }\n    return resultList;\n  };\n  return __jsx(S.Reaction, {\n    key: reaction.id,\n    onClick: onToggleReaction,\n    isLogged: isLogged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Emoji, {\n    emoji: reaction.name,\n    size: 16,\n    style: {\n      width: 16,\n      height: 16\n    },\n    set: \"apple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), __jsx(S.Count, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, reaction.users.length), __jsx(S.TooltipWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(S.UsersList, {\n    maxNumberOfLines: maxNumberOfLines,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, createUsersList(reaction.users).map((line, i) => __jsx(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, line))), __jsx(S.ReactonName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, `reacted with ${reaction.name}`))));\n});","map":{"version":3,"names":["useContext","UserContext","useMutation","Emoji","TOGGLE_REACTION","Tooltip","S","maxNumberOfLines","lineSymbols","reaction","messageId","toggleReaction","isLogged","onToggleReaction","variables","name","createUsersList","users","userListString","map","username","userName","join","resultList","i","push","slice","id","width","height","length","line"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Message/Reactions/Reaction/Reaction.js"],"sourcesContent":["// Refactor: createUsersList\nimport { useContext } from 'react';\nimport { UserContext } from 'context';\nimport { useMutation } from '@apollo/client';\nimport { Emoji } from 'emoji-mart';\n\nimport { TOGGLE_REACTION } from 'apis/Message';\n\nimport Tooltip from 'components/UI/Tooltip';\nimport * as S from './Reaction.styled';\n\nconst maxNumberOfLines = 50;\nconst lineSymbols = 28;\n\nexport default ({ reaction, messageId }) => {\n  const [toggleReaction] = useMutation(TOGGLE_REACTION);\n  const { isLogged } = useContext(UserContext);\n\n  const onToggleReaction = () => {\n    if (isLogged) {\n      toggleReaction({\n        variables: {\n          name: reaction.name,\n          messageId,\n        },\n      });\n    }\n  };\n\n  const createUsersList = users => {\n    const userListString = users.map(({ username: userName }) => userName).join(', ');\n    const resultList = [];\n    for (let i = 0; i < maxNumberOfLines; i++) {\n      resultList.push(userListString.slice(i * lineSymbols, (1 + i) * lineSymbols));\n    }\n\n    return resultList;\n  };\n\n  return (\n    <S.Reaction key={reaction.id} onClick={onToggleReaction} isLogged={isLogged}>\n      <Emoji\n        emoji={reaction.name}\n        size={16}\n        style={{\n          width: 16,\n          height: 16,\n        }}\n        set=\"apple\"\n      />\n      <S.Count>{reaction.users.length}</S.Count>\n      <S.TooltipWrapper>\n        <Tooltip>\n          <S.UsersList maxNumberOfLines={maxNumberOfLines}>\n            {createUsersList(reaction.users).map((line, i) => (\n              <li key={i}>{line}</li>\n            ))}\n          </S.UsersList>\n          <S.ReactonName>{`reacted with ${reaction.name}`}</S.ReactonName>\n        </Tooltip>\n      </S.TooltipWrapper>\n    </S.Reaction>\n  );\n};\n"],"mappings":";;;AAAA;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,SAAS;AACrC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,KAAK,QAAQ,YAAY;AAElC,SAASC,eAAe,QAAQ,cAAc;AAE9C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAO,KAAKC,CAAC,MAAM,mBAAmB;AAEtC,MAAMC,gBAAgB,GAAG,EAAE;AAC3B,MAAMC,WAAW,GAAG,EAAE;AAEtB,gBAAe,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAC1C,MAAM,CAACC,cAAc,CAAC,GAAGT,WAAW,CAACE,eAAe,CAAC;EACrD,MAAM;IAAEQ;EAAS,CAAC,GAAGZ,UAAU,CAACC,WAAW,CAAC;EAE5C,MAAMY,gBAAgB,GAAG,MAAM;IAC7B,IAAID,QAAQ,EAAE;MACZD,cAAc,CAAC;QACbG,SAAS,EAAE;UACTC,IAAI,EAAEN,QAAQ,CAACM,IAAI;UACnBL;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMM,eAAe,GAAGC,KAAK,IAAI;IAC/B,MAAMC,cAAc,GAAGD,KAAK,CAACE,GAAG,CAAC,CAAC;MAAEC,QAAQ,EAAEC;IAAS,CAAC,KAAKA,QAAQ,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACjF,MAAMC,UAAU,GAAG,EAAE;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,gBAAgB,EAAEiB,CAAC,EAAE,EAAE;MACzCD,UAAU,CAACE,IAAI,CAACP,cAAc,CAACQ,KAAK,CAACF,CAAC,GAAGhB,WAAW,EAAE,CAAC,CAAC,GAAGgB,CAAC,IAAIhB,WAAW,CAAC,CAAC;IAC/E;IAEA,OAAOe,UAAU;EACnB,CAAC;EAED,OACE,MAAC,CAAC,CAAC,QAAQ;IAAC,GAAG,EAAEd,QAAQ,CAACkB,EAAG;IAAC,OAAO,EAAEd,gBAAiB;IAAC,QAAQ,EAAED,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC1E,MAAC,KAAK;IACJ,KAAK,EAAEH,QAAQ,CAACM,IAAK;IACrB,IAAI,EAAE,EAAG;IACT,KAAK,EAAE;MACLa,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACV,CAAE;IACF,GAAG,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACX,EACF,MAAC,CAAC,CAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEpB,QAAQ,CAACQ,KAAK,CAACa,MAAM,CAAW,EAC1C,MAAC,CAAC,CAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACf,MAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACN,MAAC,CAAC,CAAC,SAAS;IAAC,gBAAgB,EAAEvB,gBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC7CS,eAAe,CAACP,QAAQ,CAACQ,KAAK,CAAC,CAACE,GAAG,CAAC,CAACY,IAAI,EAAEP,CAAC,KAC3C;IAAI,GAAG,EAAEA,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEO,IAAI,CAClB,CAAC,CACU,EACd,MAAC,CAAC,CAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,gBAAetB,QAAQ,CAACM,IAAK,EAAC,CAAiB,CACxD,CACO,CACR;AAEjB,CAAC"},"metadata":{},"sourceType":"module"}