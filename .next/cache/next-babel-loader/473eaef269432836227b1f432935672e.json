{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/client';\nimport { COMPANY_NAME } from 'utils/config';\nimport { GET_CHANNELS, NEW_CHANNEL_MESSAGE_SUBSCRIPTION } from 'apis/Channel';\nimport Channel from './Channel/Channel';\nimport Placeholder from './Channels.placeholder';\nimport * as S from './Channels.styled';\nconst Channels = () => {\n  const {\n    query: {\n      community: communityUrl\n    }\n  } = useRouter();\n  const {\n    data: {\n      channels = []\n    } = {},\n    loading,\n    subscribeToMore\n  } = useQuery(GET_CHANNELS, {\n    variables: {\n      communityUrl\n    }\n  });\n  useEffect(() => {\n    subscribeToMore({\n      document: NEW_CHANNEL_MESSAGE_SUBSCRIPTION,\n      variables: {\n        communityUrl,\n        tenant: COMPANY_NAME()\n      },\n      updateQuery: (prev, {\n        subscriptionData\n      }) => {\n        if (!subscriptionData.data) return prev;\n        const {\n          channelNewMessage\n        } = subscriptionData.data;\n        const index = prev.channels.findIndex(({\n          id\n        }) => id === channelNewMessage.id);\n        const channelsList = [...prev.channels];\n        if (index === -1) {\n          channelsList.push(channelNewMessage);\n        } else {\n          channelsList[index] = channelNewMessage;\n        }\n        return _objectSpread({}, prev, {\n          channels: channelsList\n        });\n      }\n    });\n  }, []);\n  if (loading) {\n    return __jsx(Placeholder, null);\n  }\n  return __jsx(S.Channels, null, channels.map((channel, index) => __jsx(Channel, {\n    channel: channel,\n    key: channel.id,\n    index: index\n  }, `#${channel.name}`)));\n};\nexport default Channels;","map":{"version":3,"names":["useEffect","useRouter","useQuery","COMPANY_NAME","GET_CHANNELS","NEW_CHANNEL_MESSAGE_SUBSCRIPTION","Channel","Placeholder","S","Channels","query","community","communityUrl","data","channels","loading","subscribeToMore","variables","document","tenant","updateQuery","prev","subscriptionData","channelNewMessage","index","findIndex","id","channelsList","push","map","channel","name"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Header/Channels/Channels.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/client';\n\nimport { COMPANY_NAME } from 'utils/config';\nimport { GET_CHANNELS, NEW_CHANNEL_MESSAGE_SUBSCRIPTION } from 'apis/Channel';\n\nimport Channel from './Channel/Channel';\nimport Placeholder from './Channels.placeholder';\nimport * as S from './Channels.styled';\n\nconst Channels = () => {\n  const {\n    query: { community: communityUrl },\n  } = useRouter();\n  const { data: { channels = [] } = {}, loading, subscribeToMore } = useQuery(GET_CHANNELS, {\n    variables: { communityUrl },\n  });\n\n  useEffect(() => {\n    subscribeToMore({\n      document: NEW_CHANNEL_MESSAGE_SUBSCRIPTION,\n      variables: { communityUrl, tenant: COMPANY_NAME() },\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n        const { channelNewMessage } = subscriptionData.data;\n        const index = prev.channels.findIndex(({ id }) => id === channelNewMessage.id);\n        const channelsList = [...prev.channels];\n        if (index === -1) {\n          channelsList.push(channelNewMessage);\n        } else {\n          channelsList[index] = channelNewMessage;\n        }\n        return {\n          ...prev,\n          channels: channelsList,\n        };\n      },\n    });\n  }, []);\n\n  if (loading) {\n    return <Placeholder />;\n  }\n\n  return (\n    <S.Channels>\n      {channels.map((channel, index) => (\n        <Channel channel={channel} key={channel.id} index={index}>\n          {`#${channel.name}`}\n        </Channel>\n      ))}\n    </S.Channels>\n  );\n};\n\nexport default Channels;\n"],"mappings":";;;;;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,YAAY,EAAEC,gCAAgC,QAAQ,cAAc;AAE7E,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAO,KAAKC,CAAC,MAAM,mBAAmB;AAEtC,MAAMC,QAAQ,GAAG,MAAM;EACrB,MAAM;IACJC,KAAK,EAAE;MAAEC,SAAS,EAAEC;IAAa;EACnC,CAAC,GAAGX,SAAS,EAAE;EACf,MAAM;IAAEY,IAAI,EAAE;MAAEC,QAAQ,GAAG;IAAG,CAAC,GAAG,CAAC,CAAC;IAAEC,OAAO;IAAEC;EAAgB,CAAC,GAAGd,QAAQ,CAACE,YAAY,EAAE;IACxFa,SAAS,EAAE;MAAEL;IAAa;EAC5B,CAAC,CAAC;EAEFZ,SAAS,CAAC,MAAM;IACdgB,eAAe,CAAC;MACdE,QAAQ,EAAEb,gCAAgC;MAC1CY,SAAS,EAAE;QAAEL,YAAY;QAAEO,MAAM,EAAEhB,YAAY;MAAG,CAAC;MACnDiB,WAAW,EAAE,CAACC,IAAI,EAAE;QAAEC;MAAiB,CAAC,KAAK;QAC3C,IAAI,CAACA,gBAAgB,CAACT,IAAI,EAAE,OAAOQ,IAAI;QACvC,MAAM;UAAEE;QAAkB,CAAC,GAAGD,gBAAgB,CAACT,IAAI;QACnD,MAAMW,KAAK,GAAGH,IAAI,CAACP,QAAQ,CAACW,SAAS,CAAC,CAAC;UAAEC;QAAG,CAAC,KAAKA,EAAE,KAAKH,iBAAiB,CAACG,EAAE,CAAC;QAC9E,MAAMC,YAAY,GAAG,CAAC,GAAGN,IAAI,CAACP,QAAQ,CAAC;QACvC,IAAIU,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBG,YAAY,CAACC,IAAI,CAACL,iBAAiB,CAAC;QACtC,CAAC,MAAM;UACLI,YAAY,CAACH,KAAK,CAAC,GAAGD,iBAAiB;QACzC;QACA,yBACKF,IAAI;UACPP,QAAQ,EAAEa;QAAY;MAE1B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIZ,OAAO,EAAE;IACX,OAAO,MAAC,WAAW,OAAG;EACxB;EAEA,OACE,MAAC,CAAC,CAAC,QAAQ,QACRD,QAAQ,CAACe,GAAG,CAAC,CAACC,OAAO,EAAEN,KAAK,KAC3B,MAAC,OAAO;IAAC,OAAO,EAAEM,OAAQ;IAAC,GAAG,EAAEA,OAAO,CAACJ,EAAG;IAAC,KAAK,EAAEF;EAAM,GACrD,IAAGM,OAAO,CAACC,IAAK,EAAC,CAEtB,CAAC,CACS;AAEjB,CAAC;AAED,eAAetB,QAAQ"},"metadata":{},"sourceType":"module"}