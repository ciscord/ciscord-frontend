{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport shareIcon from 'public/icons/share.svg';\nimport Tooltip from 'components/UI/Tooltip';\nimport { Action, TooltipWrapper } from '../MessageActions.styled';\nimport * as S from './ReplyAction.styled';\nexport default (function (_ref) {\n  var onReply = _ref.onReply;\n  return __jsx(React.Fragment, null, __jsx(Action, {\n    \"aria-label\": \"Reply\",\n    type: \"button\",\n    name: \"button\",\n    onClick: onReply\n  }, __jsx(S.ShareIcon, null, __jsx(\"use\", {\n    xlinkHref: \"\".concat(shareIcon, \"#icon-share\")\n  })), __jsx(TooltipWrapper, null, __jsx(Tooltip, null, \"Reply\"))));\n});","map":{"version":3,"names":["shareIcon","Tooltip","Action","TooltipWrapper","S","onReply"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Message/Actions/Reply/ReplyAction.js"],"sourcesContent":["import shareIcon from 'public/icons/share.svg';\nimport Tooltip from 'components/UI/Tooltip';\n\nimport { Action, TooltipWrapper } from '../MessageActions.styled';\nimport * as S from './ReplyAction.styled';\n\nexport default ({ onReply }) => (\n  <>\n    <Action aria-label=\"Reply\" type=\"button\" name=\"button\" onClick={onReply}>\n      <S.ShareIcon>\n        <use xlinkHref={`${shareIcon}#icon-share`} />\n      </S.ShareIcon>\n      <TooltipWrapper>\n        <Tooltip>Reply</Tooltip>\n      </TooltipWrapper>\n    </Action>\n  </>\n);\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,OAAO,MAAM,uBAAuB;AAE3C,SAASC,MAAM,EAAEC,cAAc,QAAQ,0BAA0B;AACjE,OAAO,KAAKC,CAAC,MAAM,sBAAsB;AAEzC,gBAAe;EAAA,IAAGC,OAAO,QAAPA,OAAO;EAAA,OACvB,4BACE,MAAC,MAAM;IAAC,cAAW,OAAO;IAAC,IAAI,EAAC,QAAQ;IAAC,IAAI,EAAC,QAAQ;IAAC,OAAO,EAAEA;EAAQ,GACtE,MAAC,CAAC,CAAC,SAAS,QACV;IAAK,SAAS,YAAKL,SAAS;EAAc,EAAG,CACjC,EACd,MAAC,cAAc,QACb,MAAC,OAAO,gBAAgB,CACT,CACV,CACR;AAAA,CACJ"},"metadata":{},"sourceType":"module"}