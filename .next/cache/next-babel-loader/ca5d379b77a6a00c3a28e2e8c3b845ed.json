{"ast":null,"code":"var _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/Navbar/Notifications/Notification/Notification.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport moment from 'moment';\nimport { useRouter } from 'next/router';\nimport ReactHtmlParser from 'react-html-parser';\nimport { transformMentions } from 'utils/helper';\nimport * as S from './Notification.styled';\nconst Notification = ({\n  notification,\n  onClick,\n  closePopup\n}) => {\n  const {\n    query: {\n      company\n    },\n    push\n  } = useRouter();\n  const handleLink = async () => {\n    await onClick({\n      variables: {\n        id: notification.id\n      }\n    });\n    push(`/[company]/[community]/[channel]`, `/${company}/${notification.channel.url}?linkMessageId=${notification.message.id}`, {\n      shallow: true\n    });\n    closePopup();\n  };\n  if (!notification.message) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }\n  });\n  return __jsx(S.Container, {\n    onClick: handleLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(S.AvatarWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(S.Avatar, {\n    src: notification.message.author.image,\n    name: notification.message.author.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), __jsx(S.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(S.Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(S.Author, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, notification.message.author.username), __jsx(S.Date, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, moment(notification.createdAt).format('h:mm A'))), __jsx(S.Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, ReactHtmlParser(transformMentions(notification.message.body))), notification.actions && __jsx(S.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, notification.actions.map(action => __jsx(S.Button, {\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, action.name)), __jsx(S.Button, {\n    cancel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))));\n};\nexport default Notification;","map":{"version":3,"names":["moment","useRouter","ReactHtmlParser","transformMentions","S","Notification","notification","onClick","closePopup","query","company","push","handleLink","variables","id","channel","url","message","shallow","author","image","username","createdAt","format","body","actions","map","action","name"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Navbar/Notifications/Notification/Notification.js"],"sourcesContent":["import moment from 'moment';\nimport { useRouter } from 'next/router';\n\nimport ReactHtmlParser from 'react-html-parser';\n\nimport { transformMentions } from 'utils/helper';\nimport * as S from './Notification.styled';\n\nconst Notification = ({ notification, onClick, closePopup }) => {\n  const {\n    query: { company },\n    push,\n  } = useRouter();\n\n  const handleLink = async () => {\n    await onClick({\n      variables: {\n        id: notification.id,\n      },\n    });\n\n    push(\n      `/[company]/[community]/[channel]`,\n      `/${company}/${notification.channel.url}?linkMessageId=${notification.message.id}`,\n      { shallow: true }\n    );\n    closePopup();\n  };\n\n  if (!notification.message) return <div />;\n\n  return (\n    <S.Container onClick={handleLink}>\n      <S.AvatarWrapper>\n        <S.Avatar\n          src={notification.message.author.image}\n          name={notification.message.author.username}\n        />\n      </S.AvatarWrapper>\n      <S.Body>\n        <S.Info>\n          <S.Author>{notification.message.author.username}</S.Author>\n          <S.Date>{moment(notification.createdAt).format('h:mm A')}</S.Date>\n        </S.Info>\n        <S.Message>{ReactHtmlParser(transformMentions(notification.message.body))}</S.Message>\n        {notification.actions && (\n          <S.Actions>\n            {notification.actions.map(action => (\n              <S.Button onClick={() => {}}>{action.name}</S.Button>\n            ))}\n            <S.Button cancel>Cancel</S.Button>\n          </S.Actions>\n        )}\n      </S.Body>\n    </S.Container>\n  );\n};\n\nexport default Notification;\n"],"mappings":";;;AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,SAAS,QAAQ,aAAa;AAEvC,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,SAASC,iBAAiB,QAAQ,cAAc;AAChD,OAAO,KAAKC,CAAC,MAAM,uBAAuB;AAE1C,MAAMC,YAAY,GAAG,CAAC;EAAEC,YAAY;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAC9D,MAAM;IACJC,KAAK,EAAE;MAAEC;IAAQ,CAAC;IAClBC;EACF,CAAC,GAAGV,SAAS,EAAE;EAEf,MAAMW,UAAU,GAAG,YAAY;IAC7B,MAAML,OAAO,CAAC;MACZM,SAAS,EAAE;QACTC,EAAE,EAAER,YAAY,CAACQ;MACnB;IACF,CAAC,CAAC;IAEFH,IAAI,CACD,kCAAiC,EACjC,IAAGD,OAAQ,IAAGJ,YAAY,CAACS,OAAO,CAACC,GAAI,kBAAiBV,YAAY,CAACW,OAAO,CAACH,EAAG,EAAC,EAClF;MAAEI,OAAO,EAAE;IAAK,CAAC,CAClB;IACDV,UAAU,EAAE;EACd,CAAC;EAED,IAAI,CAACF,YAAY,CAACW,OAAO,EAAE,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAO;EAEzC,OACE,MAAC,CAAC,CAAC,SAAS;IAAC,OAAO,EAAEL,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC/B,MAAC,CAAC,CAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACd,MAAC,CAAC,CAAC,MAAM;IACP,GAAG,EAAEN,YAAY,CAACW,OAAO,CAACE,MAAM,CAACC,KAAM;IACvC,IAAI,EAAEd,YAAY,CAACW,OAAO,CAACE,MAAM,CAACE,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC3C,CACc,EAClB,MAAC,CAAC,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACL,MAAC,CAAC,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACL,MAAC,CAAC,CAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEf,YAAY,CAACW,OAAO,CAACE,MAAM,CAACE,QAAQ,CAAY,EAC3D,MAAC,CAAC,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAErB,MAAM,CAACM,YAAY,CAACgB,SAAS,CAAC,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAU,CAC3D,EACT,MAAC,CAAC,CAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAErB,eAAe,CAACC,iBAAiB,CAACG,YAAY,CAACW,OAAO,CAACO,IAAI,CAAC,CAAC,CAAa,EACrFlB,YAAY,CAACmB,OAAO,IACnB,MAAC,CAAC,CAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACPnB,YAAY,CAACmB,OAAO,CAACC,GAAG,CAACC,MAAM,IAC9B,MAAC,CAAC,CAAC,MAAM;IAAC,OAAO,EAAE,MAAM,CAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEA,MAAM,CAACC,IAAI,CAC1C,CAAC,EACF,MAAC,CAAC,CAAC,MAAM;IAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAAkB,CAErC,CACM,CACG;AAElB,CAAC;AAED,eAAevB,YAAY"},"metadata":{},"sourceType":"module"}