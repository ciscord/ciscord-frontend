{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n// import { useContext } from 'react';\n// import { UserContext } from 'context/UserContext';\nimport { useRouter } from 'next/router';\nimport { COMPANY_NAME } from 'utils/config';\nimport { useKeyboardShortcut } from 'hooks';\nimport * as S from './Channel.styled';\nconst channelsShortcutMap = {\n  0: 'Q',\n  1: 'W',\n  2: 'E',\n  3: 'R'\n};\nexport default (({\n  channel,\n  index,\n  children\n}) => {\n  // const { user } = useContext(UserContext);\n\n  const {\n    query: {\n      community: communityUrl,\n      channel: channelUrl\n    },\n    push\n  } = useRouter();\n  const onChangeChannel = () => {\n    if (channel.url !== `${communityUrl}/${channelUrl}`) {\n      push('/[company]/[community]/[channel]', `/${COMPANY_NAME()}/${channel.url}`, {\n        shallow: true\n      });\n    }\n  };\n  useKeyboardShortcut({\n    [channelsShortcutMap[index]]: onChangeChannel\n  });\n  return __jsx(S.Channel, {\n    onClick: () => onChangeChannel(),\n    active: channel.url === `${communityUrl}/${channelUrl}`\n  }, children);\n});","map":{"version":3,"names":["useRouter","COMPANY_NAME","useKeyboardShortcut","S","channelsShortcutMap","channel","index","children","query","community","communityUrl","channelUrl","push","onChangeChannel","url","shallow"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Header/Channels/Channel/Channel.js"],"sourcesContent":["// import { useContext } from 'react';\n// import { UserContext } from 'context/UserContext';\nimport { useRouter } from 'next/router';\nimport { COMPANY_NAME } from 'utils/config';\nimport { useKeyboardShortcut } from 'hooks';\n\nimport * as S from './Channel.styled';\n\nconst channelsShortcutMap = {\n  0: 'Q',\n  1: 'W',\n  2: 'E',\n  3: 'R',\n};\n\nexport default ({ channel, index, children }) => {\n  // const { user } = useContext(UserContext);\n\n  const {\n    query: { community: communityUrl, channel: channelUrl },\n    push,\n  } = useRouter();\n\n  const onChangeChannel = () => {\n    if (channel.url !== `${communityUrl}/${channelUrl}`) {\n      push('/[company]/[community]/[channel]', `/${COMPANY_NAME()}/${channel.url}`, {\n        shallow: true,\n      });\n    }\n  };\n\n  useKeyboardShortcut({\n    [channelsShortcutMap[index]]: onChangeChannel,\n  });\n\n  return (\n    <S.Channel\n      onClick={() => onChangeChannel()}\n      active={channel.url === `${communityUrl}/${channelUrl}`}\n    >\n      {children}\n    </S.Channel>\n  );\n};\n"],"mappings":";;AAAA;AACA;AACA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,mBAAmB,QAAQ,OAAO;AAE3C,OAAO,KAAKC,CAAC,MAAM,kBAAkB;AAErC,MAAMC,mBAAmB,GAAG;EAC1B,CAAC,EAAE,GAAG;EACN,CAAC,EAAE,GAAG;EACN,CAAC,EAAE,GAAG;EACN,CAAC,EAAE;AACL,CAAC;AAED,gBAAe,CAAC;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAC/C;;EAEA,MAAM;IACJC,KAAK,EAAE;MAAEC,SAAS,EAAEC,YAAY;MAAEL,OAAO,EAAEM;IAAW,CAAC;IACvDC;EACF,CAAC,GAAGZ,SAAS,EAAE;EAEf,MAAMa,eAAe,GAAG,MAAM;IAC5B,IAAIR,OAAO,CAACS,GAAG,KAAM,GAAEJ,YAAa,IAAGC,UAAW,EAAC,EAAE;MACnDC,IAAI,CAAC,kCAAkC,EAAG,IAAGX,YAAY,EAAG,IAAGI,OAAO,CAACS,GAAI,EAAC,EAAE;QAC5EC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC;EAEDb,mBAAmB,CAAC;IAClB,CAACE,mBAAmB,CAACE,KAAK,CAAC,GAAGO;EAChC,CAAC,CAAC;EAEF,OACE,MAAC,CAAC,CAAC,OAAO;IACR,OAAO,EAAE,MAAMA,eAAe,EAAG;IACjC,MAAM,EAAER,OAAO,CAACS,GAAG,KAAM,GAAEJ,YAAa,IAAGC,UAAW;EAAE,GAEvDJ,QAAQ,CACC;AAEhB,CAAC"},"metadata":{},"sourceType":"module"}