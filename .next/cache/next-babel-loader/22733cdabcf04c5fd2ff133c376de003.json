{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/client';\nimport { useContext } from 'react';\nimport { AppContext } from 'context';\nimport { UserContext } from 'context/UserContext';\nimport { GET_COMMUNITIES } from 'apis/Community';\nimport Tab from './Tab/Tab';\nimport * as S from './Tabs.styled';\nconst Tabs = () => {\n  const {\n    communitiesLoaded,\n    setCommunitiesLoaded\n  } = useContext(AppContext);\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    data: {\n      communities: allCommunities = []\n    } = {},\n    loading: communitiesLoading,\n    error\n  } = useQuery(GET_COMMUNITIES, {\n    onCompleted: () => {\n      if (!communitiesLoaded) {\n        setCommunitiesLoaded(true);\n      }\n    }\n  });\n  if (error) {\n    error;\n  }\n  const {\n    query: {\n      community: selectedCommunity\n    }\n  } = useRouter();\n  const communities = user ? user.communitiesFollowed : allCommunities;\n  return __jsx(S.Tabs, null, communities.filter(community => community.url !== 'direct').map((community, index) => {\n    const active = community.url === selectedCommunity;\n    const nextActive = index < communities.length - 1 ? communities[index + 1].url === selectedCommunity : false;\n    return __jsx(Tab, {\n      community: community,\n      active: active,\n      nextActive: nextActive,\n      index: index,\n      key: community.id\n    });\n  }));\n};\nexport default Tabs;","map":{"version":3,"names":["useRouter","useQuery","useContext","AppContext","UserContext","GET_COMMUNITIES","Tab","S","Tabs","communitiesLoaded","setCommunitiesLoaded","user","data","communities","allCommunities","loading","communitiesLoading","error","onCompleted","query","community","selectedCommunity","communitiesFollowed","filter","url","map","index","active","nextActive","length","id"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Navbar/Tabs/Tabs.js"],"sourcesContent":["import { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/client';\nimport { useContext } from 'react';\n\nimport { AppContext } from 'context';\nimport { UserContext } from 'context/UserContext';\nimport { GET_COMMUNITIES } from 'apis/Community';\n\nimport Tab from './Tab/Tab';\nimport * as S from './Tabs.styled';\n\nconst Tabs = () => {\n  const { communitiesLoaded, setCommunitiesLoaded } = useContext(AppContext);\n  const { user } = useContext(UserContext);\n\n  const { data: { communities: allCommunities = [] } = {}, loading: communitiesLoading, error } = useQuery(\n    GET_COMMUNITIES,\n    {\n      onCompleted: () => {\n        if (!communitiesLoaded) {\n          setCommunitiesLoaded(true);\n        }\n      },\n    }\n  );\n\n  if (error) {error}\n\n  const {\n    query: { community: selectedCommunity },\n  } = useRouter();\n\n  const communities = user ? user.communitiesFollowed : allCommunities;\n\n  return (\n    <S.Tabs>\n      {communities\n        .filter(community => community.url !== 'direct')\n        .map((community, index) => {\n          const active = community.url === selectedCommunity;\n          const nextActive =\n            index < communities.length - 1\n              ? communities[index + 1].url === selectedCommunity\n              : false;\n\n          return (\n            <Tab\n              community={community}\n              active={active}\n              nextActive={nextActive}\n              index={index}\n              key={community.id}\n            />\n          );\n        })}\n    </S.Tabs>\n  );\n};\n\nexport default Tabs;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,UAAU,QAAQ,OAAO;AAElC,SAASC,UAAU,QAAQ,SAAS;AACpC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,eAAe,QAAQ,gBAAgB;AAEhD,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAO,KAAKC,CAAC,MAAM,eAAe;AAElC,MAAMC,IAAI,GAAG,MAAM;EACjB,MAAM;IAAEC,iBAAiB;IAAEC;EAAqB,CAAC,GAAGR,UAAU,CAACC,UAAU,CAAC;EAC1E,MAAM;IAAEQ;EAAK,CAAC,GAAGT,UAAU,CAACE,WAAW,CAAC;EAExC,MAAM;IAAEQ,IAAI,EAAE;MAAEC,WAAW,EAAEC,cAAc,GAAG;IAAG,CAAC,GAAG,CAAC,CAAC;IAAEC,OAAO,EAAEC,kBAAkB;IAAEC;EAAM,CAAC,GAAGhB,QAAQ,CACtGI,eAAe,EACf;IACEa,WAAW,EAAE,MAAM;MACjB,IAAI,CAACT,iBAAiB,EAAE;QACtBC,oBAAoB,CAAC,IAAI,CAAC;MAC5B;IACF;EACF,CAAC,CACF;EAED,IAAIO,KAAK,EAAE;IAACA,KAAK;EAAA;EAEjB,MAAM;IACJE,KAAK,EAAE;MAAEC,SAAS,EAAEC;IAAkB;EACxC,CAAC,GAAGrB,SAAS,EAAE;EAEf,MAAMa,WAAW,GAAGF,IAAI,GAAGA,IAAI,CAACW,mBAAmB,GAAGR,cAAc;EAEpE,OACE,MAAC,CAAC,CAAC,IAAI,QACJD,WAAW,CACTU,MAAM,CAACH,SAAS,IAAIA,SAAS,CAACI,GAAG,KAAK,QAAQ,CAAC,CAC/CC,GAAG,CAAC,CAACL,SAAS,EAAEM,KAAK,KAAK;IACzB,MAAMC,MAAM,GAAGP,SAAS,CAACI,GAAG,KAAKH,iBAAiB;IAClD,MAAMO,UAAU,GACdF,KAAK,GAAGb,WAAW,CAACgB,MAAM,GAAG,CAAC,GAC1BhB,WAAW,CAACa,KAAK,GAAG,CAAC,CAAC,CAACF,GAAG,KAAKH,iBAAiB,GAChD,KAAK;IAEX,OACE,MAAC,GAAG;MACF,SAAS,EAAED,SAAU;MACrB,MAAM,EAAEO,MAAO;MACf,UAAU,EAAEC,UAAW;MACvB,KAAK,EAAEF,KAAM;MACb,GAAG,EAAEN,SAAS,CAACU;IAAG,EAClB;EAEN,CAAC,CAAC,CACG;AAEb,CAAC;AAED,eAAetB,IAAI"},"metadata":{},"sourceType":"module"}