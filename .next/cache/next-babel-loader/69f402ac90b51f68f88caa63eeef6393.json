{"ast":null,"code":"import _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport rightIcon from 'public/icons/right2.svg';\nimport * as S from './styled';\nvar ReplyBar = function ReplyBar(_ref) {\n  var reply = _ref.reply,\n    onClick = _ref.onClick;\n  var authorList = reply.map(function (_ref2) {\n    var author = _ref2.author;\n    return author;\n  });\n  var authorIdList = authorList.map(function (_ref3) {\n    var id = _ref3.id;\n    return id;\n  });\n  var getUniqueAuthorList = useCallback(function () {\n    return _toConsumableArray(new _Set(authorIdList)).map(function (uniqueId) {\n      return authorList.find(function (_ref4) {\n        var id = _ref4.id;\n        return uniqueId === id;\n      });\n    });\n  }, [authorIdList]);\n  return __jsx(S.ReplyBlock, {\n    onClick: onClick\n  }, __jsx(S.ReplyAvatars, null, getUniqueAuthorList().map(function (_ref5) {\n    var image = _ref5.image,\n      username = _ref5.username,\n      id = _ref5.id;\n    return __jsx(S.ReplyAvatarItem, {\n      src: image,\n      name: username,\n      key: id\n    });\n  })), __jsx(S.ReplyNumber, null, \"\".concat(reply.length, \" messages\")), __jsx(S.ViewRepliesIcon, null, __jsx(\"use\", {\n    xlinkHref: \"\".concat(rightIcon, \"#icon-right-2\")\n  })));\n};\nexport default ReplyBar;","map":{"version":3,"names":["React","useCallback","rightIcon","S","ReplyBar","reply","onClick","authorList","map","author","authorIdList","id","getUniqueAuthorList","uniqueId","find","image","username","length"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Message/Replies/ReplyBar.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport rightIcon from 'public/icons/right2.svg';\nimport * as S from './styled';\n\nconst ReplyBar = ({ reply, onClick }) => {\n  const authorList = reply.map(({ author }) => author);\n  const authorIdList = authorList.map(({ id }) => id);\n\n  const getUniqueAuthorList = useCallback(\n    () => [...new Set(authorIdList)].map(uniqueId => authorList.find(({ id }) => uniqueId === id)),\n    [authorIdList]\n  );\n  return (\n    <S.ReplyBlock onClick={onClick}>\n      <S.ReplyAvatars>\n        {getUniqueAuthorList().map(({ image, username, id }) => (\n          <S.ReplyAvatarItem src={image} name={username} key={id} />\n        ))}\n      </S.ReplyAvatars>\n      <S.ReplyNumber>{`${reply.length} messages`}</S.ReplyNumber>\n      <S.ViewRepliesIcon>\n        <use xlinkHref={`${rightIcon}#icon-right-2`} />\n      </S.ViewRepliesIcon>\n    </S.ReplyBlock>\n  );\n};\n\nexport default ReplyBar;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAO,KAAKC,CAAC,MAAM,UAAU;AAE7B,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,OAA2B;EAAA,IAArBC,KAAK,QAALA,KAAK;IAAEC,OAAO,QAAPA,OAAO;EAChC,IAAMC,UAAU,GAAGF,KAAK,CAACG,GAAG,CAAC;IAAA,IAAGC,MAAM,SAANA,MAAM;IAAA,OAAOA,MAAM;EAAA,EAAC;EACpD,IAAMC,YAAY,GAAGH,UAAU,CAACC,GAAG,CAAC;IAAA,IAAGG,EAAE,SAAFA,EAAE;IAAA,OAAOA,EAAE;EAAA,EAAC;EAEnD,IAAMC,mBAAmB,GAAGX,WAAW,CACrC;IAAA,OAAM,mBAAI,SAAQS,YAAY,CAAC,EAAEF,GAAG,CAAC,UAAAK,QAAQ;MAAA,OAAIN,UAAU,CAACO,IAAI,CAAC;QAAA,IAAGH,EAAE,SAAFA,EAAE;QAAA,OAAOE,QAAQ,KAAKF,EAAE;MAAA,EAAC;IAAA,EAAC;EAAA,GAC9F,CAACD,YAAY,CAAC,CACf;EACD,OACE,MAAC,CAAC,CAAC,UAAU;IAAC,OAAO,EAAEJ;EAAQ,GAC7B,MAAC,CAAC,CAAC,YAAY,QACZM,mBAAmB,EAAE,CAACJ,GAAG,CAAC;IAAA,IAAGO,KAAK,SAALA,KAAK;MAAEC,QAAQ,SAARA,QAAQ;MAAEL,EAAE,SAAFA,EAAE;IAAA,OAC/C,MAAC,CAAC,CAAC,eAAe;MAAC,GAAG,EAAEI,KAAM;MAAC,IAAI,EAAEC,QAAS;MAAC,GAAG,EAAEL;IAAG,EAAG;EAAA,CAC3D,CAAC,CACa,EACjB,MAAC,CAAC,CAAC,WAAW,kBAAKN,KAAK,CAACY,MAAM,eAA4B,EAC3D,MAAC,CAAC,CAAC,eAAe,QAChB;IAAK,SAAS,YAAKf,SAAS;EAAgB,EAAG,CAC7B,CACP;AAEnB,CAAC;AAED,eAAeE,QAAQ"},"metadata":{},"sourceType":"module"}