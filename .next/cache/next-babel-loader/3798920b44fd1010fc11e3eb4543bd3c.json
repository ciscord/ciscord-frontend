{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { useContext } from 'react';\n// import { UserContext } from 'context/UserContext';\nimport { useRouter } from 'next/router';\nimport { COMPANY_NAME } from 'utils/config';\nimport { useKeyboardShortcut } from 'hooks';\nimport * as S from './Channel.styled';\nvar channelsShortcutMap = {\n  0: 'Q',\n  1: 'W',\n  2: 'E',\n  3: 'R'\n};\nexport default (function (_ref) {\n  var channel = _ref.channel,\n    index = _ref.index,\n    children = _ref.children;\n  // const { user } = useContext(UserContext);\n\n  var _useRouter = useRouter(),\n    _useRouter$query = _useRouter.query,\n    communityUrl = _useRouter$query.community,\n    channelUrl = _useRouter$query.channel,\n    push = _useRouter.push;\n  var onChangeChannel = function onChangeChannel() {\n    if (channel.url !== \"\".concat(communityUrl, \"/\").concat(channelUrl)) {\n      push('/[company]/[community]/[channel]', \"/\".concat(COMPANY_NAME(), \"/\").concat(channel.url), {\n        shallow: true\n      });\n    }\n  };\n  useKeyboardShortcut(_defineProperty({}, channelsShortcutMap[index], onChangeChannel));\n  return __jsx(S.Channel, {\n    onClick: function onClick() {\n      return onChangeChannel();\n    },\n    active: channel.url === \"\".concat(communityUrl, \"/\").concat(channelUrl)\n  }, children);\n});","map":{"version":3,"names":["useRouter","COMPANY_NAME","useKeyboardShortcut","S","channelsShortcutMap","channel","index","children","query","communityUrl","community","channelUrl","push","onChangeChannel","url","shallow"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Header/Channels/Channel/Channel.js"],"sourcesContent":["// import { useContext } from 'react';\n// import { UserContext } from 'context/UserContext';\nimport { useRouter } from 'next/router';\nimport { COMPANY_NAME } from 'utils/config';\nimport { useKeyboardShortcut } from 'hooks';\n\nimport * as S from './Channel.styled';\n\nconst channelsShortcutMap = {\n  0: 'Q',\n  1: 'W',\n  2: 'E',\n  3: 'R',\n};\n\nexport default ({ channel, index, children }) => {\n  // const { user } = useContext(UserContext);\n\n  const {\n    query: { community: communityUrl, channel: channelUrl },\n    push,\n  } = useRouter();\n\n  const onChangeChannel = () => {\n    if (channel.url !== `${communityUrl}/${channelUrl}`) {\n      push('/[company]/[community]/[channel]', `/${COMPANY_NAME()}/${channel.url}`, {\n        shallow: true,\n      });\n    }\n  };\n\n  useKeyboardShortcut({\n    [channelsShortcutMap[index]]: onChangeChannel,\n  });\n\n  return (\n    <S.Channel\n      onClick={() => onChangeChannel()}\n      active={channel.url === `${communityUrl}/${channelUrl}`}\n    >\n      {children}\n    </S.Channel>\n  );\n};\n"],"mappings":";;;AAAA;AACA;AACA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,mBAAmB,QAAQ,OAAO;AAE3C,OAAO,KAAKC,CAAC,MAAM,kBAAkB;AAErC,IAAMC,mBAAmB,GAAG;EAC1B,CAAC,EAAE,GAAG;EACN,CAAC,EAAE,GAAG;EACN,CAAC,EAAE,GAAG;EACN,CAAC,EAAE;AACL,CAAC;AAED,gBAAe,gBAAkC;EAAA,IAA/BC,OAAO,QAAPA,OAAO;IAAEC,KAAK,QAALA,KAAK;IAAEC,QAAQ,QAARA,QAAQ;EACxC;;EAEA,iBAGIP,SAAS,EAAE;IAAA,8BAFbQ,KAAK;IAAeC,YAAY,oBAAvBC,SAAS;IAAyBC,UAAU,oBAAnBN,OAAO;IACzCO,IAAI,cAAJA,IAAI;EAGN,IAAMC,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAC5B,IAAIR,OAAO,CAACS,GAAG,eAAQL,YAAY,cAAIE,UAAU,CAAE,EAAE;MACnDC,IAAI,CAAC,kCAAkC,aAAMX,YAAY,EAAE,cAAII,OAAO,CAACS,GAAG,GAAI;QAC5EC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC;EAEDb,mBAAmB,qBAChBE,mBAAmB,CAACE,KAAK,CAAC,EAAGO,eAAe,EAC7C;EAEF,OACE,MAAC,CAAC,CAAC,OAAO;IACR,OAAO,EAAE;MAAA,OAAMA,eAAe,EAAE;IAAA,CAAC;IACjC,MAAM,EAAER,OAAO,CAACS,GAAG,eAAQL,YAAY,cAAIE,UAAU;EAAG,GAEvDJ,QAAQ,CACC;AAEhB,CAAC"},"metadata":{},"sourceType":"module"}