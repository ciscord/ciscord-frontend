{"ast":null,"code":"import _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Object$setPrototypeOf from \"@babel/runtime-corejs2/core-js/object/set-prototype-of\";\nimport _Object$getPrototypeOf from \"@babel/runtime-corejs2/core-js/object/get-prototype-of\";\nimport _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Symbol from \"@babel/runtime-corejs2/core-js/symbol\";\nimport _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = _Object$defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof _Symbol ? _Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return _Object$defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = _Object$create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = _Object$getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = _Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { useEffect, useCallback, useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { useDropzone } from 'react-dropzone';\nimport { throttle } from 'lodash';\nimport { UserContext } from 'context/UserContext';\nimport { AppContext } from 'context';\nimport { GET_LAST_MESSAGES, GET_PREV_MESSAGES, GET_NEXT_MESSAGES, EDIT_MESSAGE } from 'apis/Message';\nimport { UPDATE_CHANNEL_INFO } from 'apis/ChannelInfo';\nimport { SET_CURRENT_CHANNEL } from 'apis/User';\nimport { COMPANY_NAME } from 'utils/config';\nimport ChatHeader from 'components/Chat/Header';\nimport ChatBody from 'components/Chat/Body';\nimport ChatInput from 'components/Chat/Input';\nimport DropzoneOverlay from 'components/UI/Dropzone';\nimport Thread from 'components/Chat/Thread';\nimport Subscriptions from 'components/Chat/Chat.subscriptions';\nimport * as S from './Chat.styled';\nvar Chat = function Chat() {\n  var _useState = useState({}),\n    subscriptChannels = _useState[0],\n    setSubscriptChannels = _useState[1];\n  var _useState2 = useState(null),\n    threadMessage = _useState2[0],\n    setThreadMessage = _useState2[1];\n  var _useState3 = useState(null),\n    channelInfo = _useState3[0],\n    setChannelInfo = _useState3[1];\n  var _useState4 = useState([]),\n    attachments = _useState4[0],\n    setAttachments = _useState4[1];\n  var _useState5 = useState(false),\n    isFirstMessageReached = _useState5[0],\n    setFirstMessageReached = _useState5[1];\n  var _useState6 = useState(false),\n    isLastMessageReached = _useState6[0],\n    setLastMessageReached = _useState6[1];\n  var _useContext = useContext(UserContext),\n    user = _useContext.user,\n    setUser = _useContext.setUser;\n  var router = useRouter();\n  var _router$query = router.query,\n    communityUrl = _router$query.community,\n    channelUrl = _router$query.channel,\n    linkMessageId = _router$query.linkMessageId,\n    threadId = _router$query.threadId;\n  var _useContext2 = useContext(AppContext),\n    chatLoaded = _useContext2.chatLoaded,\n    setChatLoaded = _useContext2.setChatLoaded;\n  var _useQuery = useQuery(GET_LAST_MESSAGES, {\n      variables: {\n        channelUrl: \"\".concat(communityUrl, \"/\").concat(channelUrl),\n        cursorId: threadId || linkMessageId\n      },\n      onCompleted: function onCompleted() {\n        if (!chatLoaded) {\n          setChatLoaded(true);\n        }\n      }\n    }),\n    _useQuery$data = _useQuery.data,\n    _useQuery$data2 = _useQuery$data === void 0 ? {} : _useQuery$data,\n    _useQuery$data2$messa = _useQuery$data2.messages,\n    messages = _useQuery$data2$messa === void 0 ? [] : _useQuery$data2$messa,\n    loading = _useQuery.loading,\n    subscribeToMore = _useQuery.subscribeToMore,\n    fetchMore = _useQuery.fetchMore;\n  var unreadCount = 0;\n  var _useMutation = useMutation(EDIT_MESSAGE),\n    _useMutation2 = _slicedToArray(_useMutation, 1),\n    editMessageMutation = _useMutation2[0];\n  var _useMutation3 = useMutation(UPDATE_CHANNEL_INFO),\n    _useMutation4 = _slicedToArray(_useMutation3, 1),\n    updateChannelInfoMutation = _useMutation4[0];\n  var _useMutation5 = useMutation(SET_CURRENT_CHANNEL),\n    _useMutation6 = _slicedToArray(_useMutation5, 1),\n    setCurrentChannel = _useMutation6[0];\n  useEffect(function () {\n    if (threadId) {\n      setThreadMessage(threadId);\n    }\n  }, [linkMessageId]);\n  var unreadMessagesCount = function unreadMessagesCount() {\n    if (user && channelInfo) {\n      return messages.filter(function (_ref) {\n        var createdAt = _ref.createdAt,\n          author = _ref.author;\n        return (author === null || author === void 0 ? void 0 : author.id) !== user.id && new Date(createdAt).getTime() > new Date(channelInfo.lastUpdateAt).getTime();\n      }).length;\n    }\n    return 0;\n  };\n  var throttledUpdate = useCallback(throttle(function _callee(message) {\n    var updatedUser;\n    return _regeneratorRuntime().async(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime().awrap(updateChannelInfoMutation({\n            variables: {\n              date: \"\".concat(message.createdAt),\n              channelUrl: \"\".concat(communityUrl, \"/\").concat(channelUrl)\n            }\n          }));\n        case 3:\n          updatedUser = _context.sent;\n          setUser(updatedUser.data.updateChannelInfo);\n          _context.next = 9;\n          break;\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, [[0, 7]], _Promise);\n  }, 3000), [communityUrl, channelUrl]);\n  var updateChannelInfo = function updateChannelInfo(message) {\n    return _regeneratorRuntime().async(function updateChannelInfo$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(channelInfo && new Date(message.createdAt).getTime() < new Date(channelInfo.lastUpdateAt).getTime())) {\n            _context2.next = 2;\n            break;\n          }\n          return _context2.abrupt(\"return\");\n        case 2:\n          throttledUpdate(message);\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, null, null, null, _Promise);\n  };\n  useEffect(function () {\n    return function () {\n      setCurrentChannel({\n        variables: {\n          channelUrl: \"\".concat(communityUrl, \"/general\")\n        }\n      });\n    };\n  }, []);\n  useEffect(function () {\n    if (user) {\n      var currentChannelInfo = user.channelsInfo.find(function (_ref2) {\n        var channel = _ref2.channel;\n        return channel.url === \"\".concat(communityUrl, \"/\").concat(channelUrl);\n      });\n      if (currentChannelInfo) {\n        setChannelInfo(currentChannelInfo);\n      }\n    }\n  }, [user, communityUrl, channelUrl]);\n  useEffect(function () {\n    if (channelUrl && !subscriptChannels[\"\".concat(communityUrl, \"/\").concat(channelUrl)]) {\n      subscriptChannels[\"\".concat(communityUrl, \"/\").concat(channelUrl)] = true;\n      setSubscriptChannels(subscriptChannels);\n      console.log('===Subscriptions==', subscriptChannels);\n      Subscriptions({\n        subscribeToMore: subscribeToMore,\n        channelUrl: channelUrl,\n        communityUrl: communityUrl\n      });\n    }\n    setCurrentChannel({\n      variables: {\n        channelUrl: \"\".concat(communityUrl, \"/\").concat(channelUrl)\n      }\n    });\n  }, [communityUrl, channelUrl]);\n  var handleEditMessage = function handleEditMessage(body, messageId) {\n    return _regeneratorRuntime().async(function handleEditMessage$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime().awrap(editMessageMutation({\n            variables: {\n              body: body,\n              messageId: messageId\n            }\n          }));\n        case 3:\n          _context3.next = 7;\n          break;\n        case 5:\n          _context3.prev = 5;\n          _context3.t0 = _context3[\"catch\"](0);\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, null, null, [[0, 5]], _Promise);\n  };\n  var closeThread = function closeThread() {\n    setThreadMessage(null);\n  };\n  var handleScrollTopReachEnd = function handleScrollTopReachEnd() {\n    var result;\n    return _regeneratorRuntime().async(function handleScrollTopReachEnd$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime().awrap(fetchMore({\n            query: GET_PREV_MESSAGES,\n            variables: {\n              channelUrl: \"\".concat(communityUrl, \"/\").concat(channelUrl),\n              cursorId: messages[0].id\n            },\n            updateQuery: function updateQuery(prev, _ref3) {\n              var fetchMoreResult = _ref3.fetchMoreResult;\n              if (!fetchMoreResult.messages.length) {\n                setFirstMessageReached(true);\n                return prev;\n              }\n              var mergedMessages = [].concat(fetchMoreResult.messages, prev.messages);\n              return _objectSpread({}, prev, {\n                messages: mergedMessages\n              });\n            }\n          }));\n        case 3:\n          result = _context4.sent;\n          return _context4.abrupt(\"return\", result.data.messages);\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          return _context4.abrupt(\"return\", []);\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, null, null, [[0, 7]], _Promise);\n  };\n  var handleScrollBottomReachEnd = function handleScrollBottomReachEnd() {\n    var result;\n    return _regeneratorRuntime().async(function handleScrollBottomReachEnd$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          console.log('why this one?');\n          _context5.prev = 1;\n          if (loading) {\n            _context5.next = 7;\n            break;\n          }\n          _context5.next = 5;\n          return _regeneratorRuntime().awrap(fetchMore({\n            query: GET_NEXT_MESSAGES,\n            variables: {\n              channelUrl: \"\".concat(communityUrl, \"/\").concat(channelUrl),\n              cursorId: messages[messages.length - 1].id\n            },\n            updateQuery: function updateQuery(prev, _ref4) {\n              var fetchMoreResult = _ref4.fetchMoreResult;\n              if (!fetchMoreResult.messages.length) {\n                setLastMessageReached(true);\n                return prev;\n              }\n              var mergedMessages = [].concat(prev.messages, fetchMoreResult.messages);\n              return _objectSpread({}, prev, {\n                messages: mergedMessages\n              });\n            }\n          }));\n        case 5:\n          result = _context5.sent;\n          return _context5.abrupt(\"return\", result.data.messages);\n        case 7:\n          _context5.next = 12;\n          break;\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](1);\n          console.log(_context5.t0);\n        case 12:\n          _context5.prev = 12;\n          return _context5.abrupt(\"return\", []);\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, null, null, [[1, 9, 12, 15]], _Promise);\n  };\n  var fetchMessagesById = function fetchMessagesById(id) {\n    return _regeneratorRuntime().async(function fetchMessagesById$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return _regeneratorRuntime().awrap(fetchMore({\n            variables: {\n              cursorId: id\n            },\n            updateQuery: function updateQuery(prev, _ref5) {\n              var fetchMoreResult = _ref5.fetchMoreResult;\n              return _objectSpread({}, prev, {\n                messages: fetchMoreResult.messages\n              });\n            }\n          }));\n        case 3:\n          _context6.next = 8;\n          break;\n        case 5:\n          _context6.prev = 5;\n          _context6.t0 = _context6[\"catch\"](0);\n          return _context6.abrupt(\"return\", []);\n        case 8:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, null, null, [[0, 5]], _Promise);\n  };\n  var onDrop = useCallback(function (acceptedFiles) {\n    setAttachments(acceptedFiles);\n  }, []);\n  var _useDropzone = useDropzone({\n      onDrop: onDrop\n    }),\n    getRootProps = _useDropzone.getRootProps,\n    getInputProps = _useDropzone.getInputProps,\n    isDragActive = _useDropzone.isDragActive;\n  if (communityUrl === 'direct' && user) {\n    if (channelUrl.indexOf(\"\".concat(user.username, \"-\")) === -1) {\n      return router.push(\"/\".concat(COMPANY_NAME(), \"/general/general\"));\n    }\n  }\n  return __jsx(React.Fragment, null, __jsx(S.Container, getRootProps({\n    onClick: function onClick(e) {\n      return e.stopPropagation();\n    },\n    disabled: true\n  }), __jsx(S.ZoomImage, null), __jsx(ChatHeader, {\n    fetchMessagesById: fetchMessagesById\n  }), __jsx(ChatBody, {\n    onThreadOpen: setThreadMessage,\n    messages: messages,\n    onEdit: handleEditMessage,\n    loading: loading,\n    unreadCount: unreadCount,\n    scrollMessageId: threadId || linkMessageId,\n    isFirstMessageReached: isFirstMessageReached,\n    isLastMessageReached: isLastMessageReached,\n    onReachTopEnd: handleScrollTopReachEnd,\n    onReachBottomEnd: handleScrollBottomReachEnd,\n    lastReadTime: channelInfo && channelInfo.lastUpdateAt,\n    updateChannelInfo: updateChannelInfo,\n    unreadMessagesNumber: unreadMessagesCount(),\n    userId: user && user.id\n  }), __jsx(ChatInput, {\n    dropzoneItems: attachments\n  }), __jsx(\"input\", getInputProps({\n    disabled: true\n  })), isDragActive && __jsx(DropzoneOverlay, null)), __jsx(Thread, {\n    message: messages.find(function (_ref6) {\n      var id = _ref6.id;\n      return id === threadMessage;\n    }),\n    onClose: closeThread,\n    scrollMessageId: linkMessageId\n  }));\n};\nexport default Chat;","map":{"version":3,"names":["useEffect","useCallback","useState","useContext","useRouter","useQuery","useMutation","useDropzone","throttle","UserContext","AppContext","GET_LAST_MESSAGES","GET_PREV_MESSAGES","GET_NEXT_MESSAGES","EDIT_MESSAGE","UPDATE_CHANNEL_INFO","SET_CURRENT_CHANNEL","COMPANY_NAME","ChatHeader","ChatBody","ChatInput","DropzoneOverlay","Thread","Subscriptions","S","Chat","subscriptChannels","setSubscriptChannels","threadMessage","setThreadMessage","channelInfo","setChannelInfo","attachments","setAttachments","isFirstMessageReached","setFirstMessageReached","isLastMessageReached","setLastMessageReached","user","setUser","router","query","communityUrl","community","channelUrl","channel","linkMessageId","threadId","chatLoaded","setChatLoaded","variables","cursorId","onCompleted","data","messages","loading","subscribeToMore","fetchMore","unreadCount","editMessageMutation","updateChannelInfoMutation","setCurrentChannel","unreadMessagesCount","filter","createdAt","author","id","Date","getTime","lastUpdateAt","length","throttledUpdate","message","date","updatedUser","updateChannelInfo","currentChannelInfo","channelsInfo","find","url","console","log","handleEditMessage","body","messageId","closeThread","handleScrollTopReachEnd","updateQuery","prev","fetchMoreResult","mergedMessages","concat","result","handleScrollBottomReachEnd","fetchMessagesById","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","indexOf","username","push","onClick","e","stopPropagation","disabled"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Chat.js"],"sourcesContent":["import { useEffect, useCallback, useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { useDropzone } from 'react-dropzone';\nimport { throttle } from 'lodash';\n\nimport { UserContext } from 'context/UserContext';\nimport { AppContext } from 'context';\nimport {\n  GET_LAST_MESSAGES,\n  GET_PREV_MESSAGES,\n  GET_NEXT_MESSAGES,\n  EDIT_MESSAGE,\n} from 'apis/Message';\nimport { UPDATE_CHANNEL_INFO } from 'apis/ChannelInfo';\nimport { SET_CURRENT_CHANNEL } from 'apis/User';\nimport { COMPANY_NAME } from 'utils/config';\n\nimport ChatHeader from 'components/Chat/Header';\nimport ChatBody from 'components/Chat/Body';\nimport ChatInput from 'components/Chat/Input';\n\nimport DropzoneOverlay from 'components/UI/Dropzone';\nimport Thread from 'components/Chat/Thread';\nimport Subscriptions from 'components/Chat/Chat.subscriptions';\n\nimport * as S from './Chat.styled';\n\nconst Chat = () => {\n  const [subscriptChannels, setSubscriptChannels] = useState({});\n  const [threadMessage, setThreadMessage] = useState(null);\n  const [channelInfo, setChannelInfo] = useState(null);\n  const [attachments, setAttachments] = useState([]);\n  const [isFirstMessageReached, setFirstMessageReached] = useState(false);\n  const [isLastMessageReached, setLastMessageReached] = useState(false);\n  const { user, setUser } = useContext(UserContext);\n  const router = useRouter();\n  const { community: communityUrl, channel: channelUrl, linkMessageId, threadId } = router.query;\n\n  const { chatLoaded, setChatLoaded } = useContext(AppContext);\n\n  const { data: { messages = [] } = {}, loading, subscribeToMore, fetchMore } = useQuery(\n    GET_LAST_MESSAGES,\n    {\n      variables: {\n        channelUrl: `${communityUrl}/${channelUrl}`,\n        cursorId: threadId || linkMessageId,\n      },\n      onCompleted: () => {\n        if (!chatLoaded) {\n          setChatLoaded(true);\n        }\n      },\n    }\n  );\n  const unreadCount = 0;\n\n  const [editMessageMutation] = useMutation(EDIT_MESSAGE);\n  const [updateChannelInfoMutation] = useMutation(UPDATE_CHANNEL_INFO);\n  const [setCurrentChannel] = useMutation(SET_CURRENT_CHANNEL);\n\n  useEffect(() => {\n    if (threadId) {\n      setThreadMessage(threadId);\n    }\n  }, [linkMessageId]);\n\n  const unreadMessagesCount = () => {\n    if (user && channelInfo) {\n      return messages.filter(\n        ({ createdAt, author }) =>\n          author?.id !== user.id &&\n          new Date(createdAt).getTime() > new Date(channelInfo.lastUpdateAt).getTime()\n      ).length;\n    }\n    return 0;\n  };\n\n  const throttledUpdate = useCallback(\n    throttle(async message => {\n      try {\n        const updatedUser = await updateChannelInfoMutation({\n          variables: {\n            date: `${message.createdAt}`,\n            channelUrl: `${communityUrl}/${channelUrl}`,\n          },\n        });\n\n        setUser(updatedUser.data.updateChannelInfo);\n      } catch (error) {\n        // alert(error);\n      }\n    }, 3000),\n    [communityUrl, channelUrl]\n  );\n\n  const updateChannelInfo = async message => {\n    if (\n      channelInfo &&\n      new Date(message.createdAt).getTime() < new Date(channelInfo.lastUpdateAt).getTime()\n    ) {\n      return;\n    }\n\n    throttledUpdate(message);\n  };\n\n  useEffect(() => {\n    return () => {\n      setCurrentChannel({ variables: { channelUrl: `${communityUrl}/general` } });\n    };\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      const currentChannelInfo = user.channelsInfo.find(\n        ({ channel }) => channel.url === `${communityUrl}/${channelUrl}`\n      );\n\n      if (currentChannelInfo) {\n        setChannelInfo(currentChannelInfo);\n      }\n    }\n  }, [user, communityUrl, channelUrl]);\n\n  useEffect(() => {\n    if (channelUrl && !subscriptChannels[`${communityUrl}/${channelUrl}`]) {\n      subscriptChannels[`${communityUrl}/${channelUrl}`] = true;\n      setSubscriptChannels(subscriptChannels);\n      console.log('===Subscriptions==', subscriptChannels)\n      Subscriptions({ subscribeToMore, channelUrl, communityUrl });\n    }\n\n    setCurrentChannel({ variables: { channelUrl: `${communityUrl}/${channelUrl}` } });\n  }, [communityUrl, channelUrl]);\n\n  const handleEditMessage = async (body, messageId) => {\n    try {\n      await editMessageMutation({ variables: { body, messageId } });\n    } catch (error) {\n      // alert(error);\n    }\n  };\n\n  const closeThread = () => {\n    setThreadMessage(null);\n  };\n\n  const handleScrollTopReachEnd = async () => {\n    try {\n      const result = await fetchMore({\n        query: GET_PREV_MESSAGES,\n        variables: {\n          channelUrl: `${communityUrl}/${channelUrl}`,\n          cursorId: messages[0].id,\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult.messages.length) {\n            setFirstMessageReached(true);\n            return prev;\n          }\n          const mergedMessages = [].concat(fetchMoreResult.messages, prev.messages);\n          return { ...prev, messages: mergedMessages };\n        },\n      });\n\n      return result.data.messages;\n    } catch (error) {\n      return [];\n    }\n  };\n\n  const handleScrollBottomReachEnd = async () => {\n    console.log('why this one?')\n    try {\n      if (!loading) {\n        const result = await fetchMore({\n          query: GET_NEXT_MESSAGES,\n          variables: {\n            channelUrl: `${communityUrl}/${channelUrl}`,\n            cursorId: messages[messages.length - 1].id,\n          },\n          updateQuery: (prev, { fetchMoreResult }) => {\n            if (!fetchMoreResult.messages.length) {\n              setLastMessageReached(true);\n              return prev;\n            }\n\n            const mergedMessages = [].concat(prev.messages, fetchMoreResult.messages);\n            return { ...prev, messages: mergedMessages };\n          },\n        });\n\n        return result.data.messages;\n      }\n\n    } catch (error) {\n      console.log(error)\n    } finally {\n      return [];\n    }\n\n  };\n\n  const fetchMessagesById = async id => {\n    try {\n      await fetchMore({\n        variables: { cursorId: id },\n        updateQuery: (prev, { fetchMoreResult }) => ({\n          ...prev,\n          messages: fetchMoreResult.messages,\n        }),\n      });\n    } catch (error) {\n      return [];\n    }\n  };\n\n  const onDrop = useCallback(acceptedFiles => {\n    setAttachments(acceptedFiles);\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n  });\n\n  if (communityUrl === 'direct' && user) {\n    if (channelUrl.indexOf(`${user.username}-`) === -1) {\n      return router.push(`/${COMPANY_NAME()}/general/general`);\n    }\n  }\n  return (\n    <>\n      <S.Container {...getRootProps({ onClick: e => e.stopPropagation(), disabled: true })}>\n        <S.ZoomImage />\n        <ChatHeader fetchMessagesById={fetchMessagesById} />\n\n        <ChatBody\n          onThreadOpen={setThreadMessage}\n          messages={messages}\n          onEdit={handleEditMessage}\n          loading={loading}\n          unreadCount={unreadCount}\n          scrollMessageId={threadId || linkMessageId}\n          isFirstMessageReached={isFirstMessageReached}\n          isLastMessageReached={isLastMessageReached}\n          onReachTopEnd={handleScrollTopReachEnd}\n          onReachBottomEnd={handleScrollBottomReachEnd}\n          lastReadTime={channelInfo && channelInfo.lastUpdateAt}\n          updateChannelInfo={updateChannelInfo}\n          unreadMessagesNumber={unreadMessagesCount()}\n          userId={user && user.id}\n        />\n        <ChatInput dropzoneItems={attachments} />\n        <input {...getInputProps({ disabled: true })} />\n        {isDragActive && <DropzoneOverlay />}\n      </S.Container>\n      <Thread\n        message={messages.find(({ id }) => id === threadMessage)}\n        onClose={closeThread}\n        scrollMessageId={linkMessageId}\n      />\n    </>\n  );\n};\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}