{"ast":null,"code":"import _Object$setPrototypeOf from \"@babel/runtime-corejs2/core-js/object/set-prototype-of\";\nimport _Object$getPrototypeOf from \"@babel/runtime-corejs2/core-js/object/get-prototype-of\";\nimport _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Symbol from \"@babel/runtime-corejs2/core-js/symbol\";\nimport _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Header/Topic/Topic.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = _Object$defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof _Symbol ? _Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return _Object$defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = _Object$create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = _Object$getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = _Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { useContext, useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport InlineEdit from 'components/UI/InlineEdit/Parent';\nimport { EDIT_CHANNEL } from 'apis/Channel';\nimport { UserContext } from 'context/UserContext';\nimport { canManageChannel } from 'utils/permission';\nimport * as S from './Topic.styled';\nvar Topic = function Topic(_ref) {\n  var onChangeTopic = _ref.onChangeTopic,\n    channel = _ref.channel;\n  var _useContext = useContext(UserContext),\n    user = _useContext.user;\n  var _useState = useState(channel.description || ''),\n    topic = _useState[0],\n    setTopic = _useState[1];\n  var _useMutation = useMutation(EDIT_CHANNEL),\n    _useMutation2 = _slicedToArray(_useMutation, 1),\n    editChannel = _useMutation2[0];\n  var canSetTopic = user && canManageChannel(user);\n  useEffect(function () {\n    setTopic(channel.description);\n  }, [channel]);\n  var changeDescription = function changeDescription() {\n    return _regeneratorRuntime().async(function changeDescription$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime().awrap(editChannel({\n            variables: {\n              channelId: channel.id,\n              communityUrl: channel.communityUrl,\n              url: channel.url,\n              name: channel.name,\n              description: topic\n            },\n            errorPolicy: 'all'\n          }));\n        case 3:\n          onChangeTopic();\n          _context.next = 8;\n          break;\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, [[0, 6]], _Promise);\n  };\n  return __jsx(S.ChatTopic, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(InlineEdit, {\n    value: topic,\n    onChange: function onChange(e) {\n      return setTopic(e.target.value);\n    },\n    placeholder: \"Set a topic\",\n    onSave: changeDescription,\n    canEdit: canSetTopic,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Topic;","map":{"version":3,"names":["useContext","useState","useEffect","useMutation","InlineEdit","EDIT_CHANNEL","UserContext","canManageChannel","S","Topic","onChangeTopic","channel","user","description","topic","setTopic","editChannel","canSetTopic","changeDescription","variables","channelId","id","communityUrl","url","name","errorPolicy","e","target","value"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Header/Topic/Topic.js"],"sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport InlineEdit from 'components/UI/InlineEdit/Parent';\n\nimport { EDIT_CHANNEL } from 'apis/Channel';\n\nimport { UserContext } from 'context/UserContext';\nimport { canManageChannel } from 'utils/permission';\n\nimport * as S from './Topic.styled';\n\nconst Topic = ({ onChangeTopic, channel }) => {\n  const { user } = useContext(UserContext);\n  const [topic, setTopic] = useState(channel.description || '');\n  const [editChannel] = useMutation(EDIT_CHANNEL);\n  const canSetTopic = user && canManageChannel(user);\n\n  useEffect(() => {\n    setTopic(channel.description);\n  }, [channel]);\n\n  const changeDescription = async () => {\n    try {\n      await editChannel({\n        variables: {\n          channelId: channel.id,\n          communityUrl: channel.communityUrl,\n          url: channel.url,\n          name: channel.name,\n          description: topic,\n        },\n        errorPolicy: 'all',\n      });\n      onChangeTopic();\n    } catch (error) {\n      // alert(error);\n    }\n  };\n\n  return (\n    <S.ChatTopic>\n      <InlineEdit\n        value={topic}\n        onChange={e => setTopic(e.target.value)}\n        placeholder=\"Set a topic\"\n        onSave={changeDescription}\n        canEdit={canSetTopic}\n      />\n    </S.ChatTopic>\n  );\n};\n\nexport default Topic;\n"],"mappings":";;;;;;;;;;;+CACA;AADA,SAASA,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACvD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,UAAU,MAAM,iCAAiC;AAExD,SAASC,YAAY,QAAQ,cAAc;AAE3C,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,gBAAgB,QAAQ,kBAAkB;AAEnD,OAAO,KAAKC,CAAC,MAAM,gBAAgB;AAEnC,IAAMC,KAAK,GAAG,SAARA,KAAK,OAAmC;EAAA,IAA7BC,aAAa,QAAbA,aAAa;IAAEC,OAAO,QAAPA,OAAO;EACrC,kBAAiBX,UAAU,CAACM,WAAW,CAAC;IAAhCM,IAAI,eAAJA,IAAI;EACZ,gBAA0BX,QAAQ,CAACU,OAAO,CAACE,WAAW,IAAI,EAAE,CAAC;IAAtDC,KAAK;IAAEC,QAAQ;EACtB,mBAAsBZ,WAAW,CAACE,YAAY,CAAC;IAAA;IAAxCW,WAAW;EAClB,IAAMC,WAAW,GAAGL,IAAI,IAAIL,gBAAgB,CAACK,IAAI,CAAC;EAElDV,SAAS,CAAC,YAAM;IACda,QAAQ,CAACJ,OAAO,CAACE,WAAW,CAAC;EAC/B,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,IAAMO,iBAAiB,GAAG,SAApBA,iBAAiB;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,mCAEbF,WAAW,CAAC;YAChBG,SAAS,EAAE;cACTC,SAAS,EAAET,OAAO,CAACU,EAAE;cACrBC,YAAY,EAAEX,OAAO,CAACW,YAAY;cAClCC,GAAG,EAAEZ,OAAO,CAACY,GAAG;cAChBC,IAAI,EAAEb,OAAO,CAACa,IAAI;cAClBX,WAAW,EAAEC;YACf,CAAC;YACDW,WAAW,EAAE;UACf,CAAC,CAAC;QAAA;UACFf,aAAa,EAAE;UAAC;UAAA;QAAA;UAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAInB;EAED,OACE,MAAC,CAAC,CAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACV,MAAC,UAAU;IACT,KAAK,EAAEI,KAAM;IACb,QAAQ,EAAE,kBAAAY,CAAC;MAAA,OAAIX,QAAQ,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAAA,CAAC;IACxC,WAAW,EAAC,aAAa;IACzB,MAAM,EAAEV,iBAAkB;IAC1B,OAAO,EAAED,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACrB,CACU;AAElB,CAAC;AAED,eAAeR,KAAK"},"metadata":{},"sourceType":"module"}