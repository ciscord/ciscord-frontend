{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22;\nimport gql from 'graphql-tag';\nimport { MessagesFragment } from './Fragments';\nexport var GET_ALL_MESSAGES = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query allMessages($channelUrl: String) {\\n    messages: allMessages(channelUrl: $channelUrl) {\\n      ...message\\n    }\\n  }\\n  \", \"\\n\"])), MessagesFragment);\nexport var GET_LAST_MESSAGES = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  query getLastMessages($channelUrl: String!, $cursorId: ID, $lastVisitDate: String) {\\n    messages: getLastMessages(\\n      channelUrl: $channelUrl\\n      cursorId: $cursorId\\n      lastVisitDate: $lastVisitDate\\n    ) {\\n      ...message\\n    }\\n  }\\n  \", \"\\n\"])), MessagesFragment);\nexport var GET_PREV_MESSAGES = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  query getPrevMessages($channelUrl: String, $cursorId: ID) {\\n    messages: getPrevMessages(channelUrl: $channelUrl, cursorId: $cursorId) {\\n      ...message\\n    }\\n  }\\n  \", \"\\n\"])), MessagesFragment);\nexport var SEARCH_MESSAGES_QUERY = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  query searchMessages($channelUrl: String, $searchQuery: String) {\\n    messages: searchMessages(channelUrl: $channelUrl, searchQuery: $searchQuery) {\\n      ...message\\n    }\\n  }\\n  \", \"\\n\"])), MessagesFragment);\nexport var GET_NEXT_MESSAGES = gql(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  query getNextMessages($channelUrl: String, $cursorId: ID) {\\n    messages: getNextMessages(channelUrl: $channelUrl, cursorId: $cursorId) {\\n      ...message\\n    }\\n  }\\n  \", \"\\n\"])), MessagesFragment);\nexport var EDIT_MESSAGE = gql(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  mutation editMessage($messageId: String!, $body: String!) {\\n    editMessage(body: $body, messageId: $messageId) {\\n      body\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\"])));\nexport var DELETE_MESSAGE = gql(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  mutation deleteMessage($messageId: String!) {\\n    deleteMessage(messageId: $messageId) {\\n      id\\n    }\\n  }\\n\"])));\nexport var MESSAGES_SUBSCRIPTION = gql(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n  subscription newMessage($channelUrl: String, $tenant: String) {\\n    newMessage(channelUrl: $channelUrl, tenant: $tenant) {\\n      ...message\\n    }\\n  }\\n  \", \"\\n\"])), MessagesFragment);\nexport var MESSAGE_EDIT_SUBSCRIPTION = gql(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n  subscription editMessage($channelUrl: String, $tenant: String) {\\n    editMessage(channelUrl: $channelUrl, tenant: $tenant) {\\n      ...message\\n    }\\n  }\\n  \", \"\\n\"])), MessagesFragment);\nexport var MESSAGE_DELETE_SUBSCRIPTION = gql(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n  subscription deleteMessage($channelUrl: String, $tenant: String) {\\n    deleteMessage(channelUrl: $channelUrl, tenant: $tenant) {\\n      id\\n    }\\n  }\\n\"])));\nexport var NEW_REACTION_SUBSCRIPTION = gql(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n  subscription newReaction($channelUrl: String, $tenant: String) {\\n    newReaction(channelUrl: $channelUrl, tenant: $tenant) {\\n      id\\n      name\\n      createdAt\\n      updatedAt\\n      users {\\n        id\\n        username\\n        image\\n      }\\n      message {\\n        id\\n      }\\n    }\\n  }\\n\"])));\nexport var UPDATE_REACTION_SUBSCRIPTION = gql(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"\\n  subscription updatedReaction($channelUrl: String, $tenant: String) {\\n    updatedReaction(channelUrl: $channelUrl, tenant: $tenant) {\\n      id\\n      name\\n      createdAt\\n      updatedAt\\n      users {\\n        id\\n        username\\n        image\\n      }\\n      message {\\n        id\\n      }\\n    }\\n  }\\n\"])));\nexport var REMOVE_REACTION_SUBSCRIPTION = gql(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\\n  subscription removedReaction($channelUrl: String, $tenant: String) {\\n    removedReaction(channelUrl: $channelUrl, tenant: $tenant) {\\n      id\\n    }\\n  }\\n\"])));\nexport var TOGGLE_REACTION = gql(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"\\n  mutation toggleReaction($messageId: String!, $name: String!) {\\n    toggleReaction(messageId: $messageId, name: $name) {\\n      id\\n      name\\n    }\\n  }\\n\"])));\nexport var SEND_MESSAGE = gql(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"\\n  mutation sendMessage(\\n    $body: String!\\n    $channelUrl: String!\\n    $urlList: [String!]\\n    $mentions: [String!]\\n    $communityUrl: String!\\n  ) {\\n    sendMessage(\\n      body: $body\\n      channelUrl: $channelUrl\\n      urlList: $urlList\\n      mentions: $mentions\\n      communityUrl: $communityUrl\\n    ) {\\n      id\\n      body\\n      createdAt\\n      urlList\\n      author {\\n        id\\n        username\\n        image\\n      }\\n    }\\n  }\\n\"])));\nexport var SEND_NOTIFICATION = gql(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\\n  mutation sendNotification(\\n    $receiverName: String\\n    $messageId: ID!\\n    $channelUrl: String\\n    $communityUrl: String\\n  ) {\\n    sendNotification(\\n      receiverName: $receiverName\\n      messageId: $messageId\\n      channelUrl: $channelUrl\\n      communityUrl: $communityUrl\\n      type: \\\"mention\\\"\\n    ) {\\n      id\\n    }\\n  }\\n\"])));\nexport var SET_USER_TYPING_STATUS = gql(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\"\\n  mutation setUserTypingStatus($channelUrl: String, $isTyping: Boolean) {\\n    setUserTypingStatus(channelUrl: $channelUrl, isTyping: $isTyping) {\\n      username\\n      isTyping\\n    }\\n  }\\n\"])));\nexport var SEARCH_MESSAGES = gql(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\"\\n  mutation searchMessages($channelUrl: String, $searchQuery: String) {\\n    messages: searchMessages(channelUrl: $channelUrl, searchQuery: $searchQuery) {\\n      ...message\\n    }\\n  }\\n  \", \"\\n\"])), MessagesFragment);\nexport var REPLY_MESSAGE = gql(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral([\"\\n  mutation replyMessage(\\n    $parentId: String!\\n    $body: String!\\n    $urlList: [String!]\\n  ) {\\n    replyMessage(parentId: $parentId, body: $body, urlList: $urlList) {\\n      id\\n      body\\n      urlList\\n      author {\\n        id\\n        username\\n        image\\n        role {\\n          color\\n        }\\n      }\\n      parent {\\n        id\\n      }\\n    }\\n  }\\n\"])));\nexport var EDIT_REPLY_MESSAGE = gql(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral([\"\\n  mutation editReplyMessage($messageId: String!, $body: String!) {\\n    editReplyMessage(body: $body, messageId: $messageId) {\\n      body\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\"])));\nexport var DELETE_REPLY_MESSAGE = gql(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral([\"\\n  mutation deleteReplyMessage($messageId: String!) {\\n    deleteReplyMessage(messageId: $messageId) {\\n      id\\n    }\\n  }\\n\"])));\nexport var GET_UNREAD_MESSAGES = gql(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral([\"\\n  query getUnreadMessagesCount($channelUrl: String, $username: String) {\\n    getUnreadMessagesCount(channelUrl: $channelUrl, username: $username) {\\n      messages {\\n        body\\n        createdAt\\n        author {\\n          username\\n          image\\n          isOnline\\n          fullname\\n        }\\n      }\\n      fromNewUser\\n      user {\\n        id\\n        fullname\\n        username\\n        bio\\n        email\\n        social\\n        image\\n        isOnline\\n        owner\\n        channelsInfo {\\n          id\\n          channel {\\n            id\\n            name\\n            url\\n          }\\n          lastUpdateAt\\n        }\\n      }\\n    }\\n  }\\n\"])));","map":{"version":3,"names":["gql","MessagesFragment","GET_ALL_MESSAGES","GET_LAST_MESSAGES","GET_PREV_MESSAGES","SEARCH_MESSAGES_QUERY","GET_NEXT_MESSAGES","EDIT_MESSAGE","DELETE_MESSAGE","MESSAGES_SUBSCRIPTION","MESSAGE_EDIT_SUBSCRIPTION","MESSAGE_DELETE_SUBSCRIPTION","NEW_REACTION_SUBSCRIPTION","UPDATE_REACTION_SUBSCRIPTION","REMOVE_REACTION_SUBSCRIPTION","TOGGLE_REACTION","SEND_MESSAGE","SEND_NOTIFICATION","SET_USER_TYPING_STATUS","SEARCH_MESSAGES","REPLY_MESSAGE","EDIT_REPLY_MESSAGE","DELETE_REPLY_MESSAGE","GET_UNREAD_MESSAGES"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/apis/Message.js"],"sourcesContent":["import gql from 'graphql-tag';\nimport { MessagesFragment } from './Fragments';\n\nexport const GET_ALL_MESSAGES = gql`\n  query allMessages($channelUrl: String) {\n    messages: allMessages(channelUrl: $channelUrl) {\n      ...message\n    }\n  }\n  ${MessagesFragment}\n`;\n\nexport const GET_LAST_MESSAGES = gql`\n  query getLastMessages($channelUrl: String!, $cursorId: ID, $lastVisitDate: String) {\n    messages: getLastMessages(\n      channelUrl: $channelUrl\n      cursorId: $cursorId\n      lastVisitDate: $lastVisitDate\n    ) {\n      ...message\n    }\n  }\n  ${MessagesFragment}\n`;\n\nexport const GET_PREV_MESSAGES = gql`\n  query getPrevMessages($channelUrl: String, $cursorId: ID) {\n    messages: getPrevMessages(channelUrl: $channelUrl, cursorId: $cursorId) {\n      ...message\n    }\n  }\n  ${MessagesFragment}\n`;\n\nexport const SEARCH_MESSAGES_QUERY = gql`\n  query searchMessages($channelUrl: String, $searchQuery: String) {\n    messages: searchMessages(channelUrl: $channelUrl, searchQuery: $searchQuery) {\n      ...message\n    }\n  }\n  ${MessagesFragment}\n`;\n\nexport const GET_NEXT_MESSAGES = gql`\n  query getNextMessages($channelUrl: String, $cursorId: ID) {\n    messages: getNextMessages(channelUrl: $channelUrl, cursorId: $cursorId) {\n      ...message\n    }\n  }\n  ${MessagesFragment}\n`;\n\nexport const EDIT_MESSAGE = gql`\n  mutation editMessage($messageId: String!, $body: String!) {\n    editMessage(body: $body, messageId: $messageId) {\n      body\n      createdAt\n      updatedAt\n    }\n  }\n`;\n\nexport const DELETE_MESSAGE = gql`\n  mutation deleteMessage($messageId: String!) {\n    deleteMessage(messageId: $messageId) {\n      id\n    }\n  }\n`;\n\nexport const MESSAGES_SUBSCRIPTION = gql`\n  subscription newMessage($channelUrl: String, $tenant: String) {\n    newMessage(channelUrl: $channelUrl, tenant: $tenant) {\n      ...message\n    }\n  }\n  ${MessagesFragment}\n`;\n\nexport const MESSAGE_EDIT_SUBSCRIPTION = gql`\n  subscription editMessage($channelUrl: String, $tenant: String) {\n    editMessage(channelUrl: $channelUrl, tenant: $tenant) {\n      ...message\n    }\n  }\n  ${MessagesFragment}\n`;\n\nexport const MESSAGE_DELETE_SUBSCRIPTION = gql`\n  subscription deleteMessage($channelUrl: String, $tenant: String) {\n    deleteMessage(channelUrl: $channelUrl, tenant: $tenant) {\n      id\n    }\n  }\n`;\n\nexport const NEW_REACTION_SUBSCRIPTION = gql`\n  subscription newReaction($channelUrl: String, $tenant: String) {\n    newReaction(channelUrl: $channelUrl, tenant: $tenant) {\n      id\n      name\n      createdAt\n      updatedAt\n      users {\n        id\n        username\n        image\n      }\n      message {\n        id\n      }\n    }\n  }\n`;\n\nexport const UPDATE_REACTION_SUBSCRIPTION = gql`\n  subscription updatedReaction($channelUrl: String, $tenant: String) {\n    updatedReaction(channelUrl: $channelUrl, tenant: $tenant) {\n      id\n      name\n      createdAt\n      updatedAt\n      users {\n        id\n        username\n        image\n      }\n      message {\n        id\n      }\n    }\n  }\n`;\n\nexport const REMOVE_REACTION_SUBSCRIPTION = gql`\n  subscription removedReaction($channelUrl: String, $tenant: String) {\n    removedReaction(channelUrl: $channelUrl, tenant: $tenant) {\n      id\n    }\n  }\n`;\n\nexport const TOGGLE_REACTION = gql`\n  mutation toggleReaction($messageId: String!, $name: String!) {\n    toggleReaction(messageId: $messageId, name: $name) {\n      id\n      name\n    }\n  }\n`;\n\nexport const SEND_MESSAGE = gql`\n  mutation sendMessage(\n    $body: String!\n    $channelUrl: String!\n    $urlList: [String!]\n    $mentions: [String!]\n    $communityUrl: String!\n  ) {\n    sendMessage(\n      body: $body\n      channelUrl: $channelUrl\n      urlList: $urlList\n      mentions: $mentions\n      communityUrl: $communityUrl\n    ) {\n      id\n      body\n      createdAt\n      urlList\n      author {\n        id\n        username\n        image\n      }\n    }\n  }\n`;\n\nexport const SEND_NOTIFICATION = gql`\n  mutation sendNotification(\n    $receiverName: String\n    $messageId: ID!\n    $channelUrl: String\n    $communityUrl: String\n  ) {\n    sendNotification(\n      receiverName: $receiverName\n      messageId: $messageId\n      channelUrl: $channelUrl\n      communityUrl: $communityUrl\n      type: \"mention\"\n    ) {\n      id\n    }\n  }\n`;\n\nexport const SET_USER_TYPING_STATUS = gql`\n  mutation setUserTypingStatus($channelUrl: String, $isTyping: Boolean) {\n    setUserTypingStatus(channelUrl: $channelUrl, isTyping: $isTyping) {\n      username\n      isTyping\n    }\n  }\n`;\n\nexport const SEARCH_MESSAGES = gql`\n  mutation searchMessages($channelUrl: String, $searchQuery: String) {\n    messages: searchMessages(channelUrl: $channelUrl, searchQuery: $searchQuery) {\n      ...message\n    }\n  }\n  ${MessagesFragment}\n`;\n\nexport const REPLY_MESSAGE = gql`\n  mutation replyMessage(\n    $parentId: String!\n    $body: String!\n    $urlList: [String!]\n  ) {\n    replyMessage(parentId: $parentId, body: $body, urlList: $urlList) {\n      id\n      body\n      urlList\n      author {\n        id\n        username\n        image\n        role {\n          color\n        }\n      }\n      parent {\n        id\n      }\n    }\n  }\n`;\n\nexport const EDIT_REPLY_MESSAGE = gql`\n  mutation editReplyMessage($messageId: String!, $body: String!) {\n    editReplyMessage(body: $body, messageId: $messageId) {\n      body\n      createdAt\n      updatedAt\n    }\n  }\n`;\n\nexport const DELETE_REPLY_MESSAGE = gql`\n  mutation deleteReplyMessage($messageId: String!) {\n    deleteReplyMessage(messageId: $messageId) {\n      id\n    }\n  }\n`;\n\nexport const GET_UNREAD_MESSAGES = gql`\n  query getUnreadMessagesCount($channelUrl: String, $username: String) {\n    getUnreadMessagesCount(channelUrl: $channelUrl, username: $username) {\n      messages {\n        body\n        createdAt\n        author {\n          username\n          image\n          isOnline\n          fullname\n        }\n      }\n      fromNewUser\n      user {\n        id\n        fullname\n        username\n        bio\n        email\n        social\n        image\n        isOnline\n        owner\n        channelsInfo {\n          id\n          channel {\n            id\n            name\n            url\n          }\n          lastUpdateAt\n        }\n      }\n    }\n  }\n`;\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,aAAa;AAC7B,SAASC,gBAAgB,QAAQ,aAAa;AAE9C,OAAO,IAAMC,gBAAgB,GAAGF,GAAG,gNAM/BC,gBAAgB,CACnB;AAED,OAAO,IAAME,iBAAiB,GAAGH,GAAG,gVAUhCC,gBAAgB,CACnB;AAED,OAAO,IAAMG,iBAAiB,GAAGJ,GAAG,8PAMhCC,gBAAgB,CACnB;AAED,OAAO,IAAMI,qBAAqB,GAAGL,GAAG,yQAMpCC,gBAAgB,CACnB;AAED,OAAO,IAAMK,iBAAiB,GAAGN,GAAG,8PAMhCC,gBAAgB,CACnB;AAED,OAAO,IAAMM,YAAY,GAAGP,GAAG,yPAQ9B;AAED,OAAO,IAAMQ,cAAc,GAAGR,GAAG,4LAMhC;AAED,OAAO,IAAMS,qBAAqB,GAAGT,GAAG,+OAMpCC,gBAAgB,CACnB;AAED,OAAO,IAAMS,yBAAyB,GAAGV,GAAG,iPAMxCC,gBAAgB,CACnB;AAED,OAAO,IAAMU,2BAA2B,GAAGX,GAAG,sOAM7C;AAED,OAAO,IAAMY,yBAAyB,GAAGZ,GAAG,2XAiB3C;AAED,OAAO,IAAMa,4BAA4B,GAAGb,GAAG,mYAiB9C;AAED,OAAO,IAAMc,4BAA4B,GAAGd,GAAG,0OAM9C;AAED,OAAO,IAAMe,eAAe,GAAGf,GAAG,yOAOjC;AAED,OAAO,IAAMgB,YAAY,GAAGhB,GAAG,ohBA0B9B;AAED,OAAO,IAAMiB,iBAAiB,GAAGjB,GAAG,qaAiBnC;AAED,OAAO,IAAMkB,sBAAsB,GAAGlB,GAAG,2QAOxC;AAED,OAAO,IAAMmB,eAAe,GAAGnB,GAAG,8QAM9BC,gBAAgB,CACnB;AAED,OAAO,IAAMmB,aAAa,GAAGpB,GAAG,kcAuB/B;AAED,OAAO,IAAMqB,kBAAkB,GAAGrB,GAAG,qQAQpC;AAED,OAAO,IAAMsB,oBAAoB,GAAGtB,GAAG,wMAMtC;AAED,OAAO,IAAMuB,mBAAmB,GAAGvB,GAAG,uuBAoCrC"},"metadata":{},"sourceType":"module"}