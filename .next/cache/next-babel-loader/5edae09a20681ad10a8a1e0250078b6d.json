{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useContext, useEffect } from 'react';\nimport { UserContext } from 'context/UserContext';\nimport { useQuery } from '@apollo/client';\nimport { USER_WENT_ONLINE, USER_WENT_OFFLINE } from 'apis/User';\nimport { GET_UNREAD_MESSAGES } from 'apis/Message';\nimport { NOTIFICATIONS_SUBSCRIPTION } from 'apis/Notification';\nimport { useRouter } from 'next/router';\nimport { COMPANY_NAME } from 'utils/config';\nimport { chatTime, transformMessage } from 'utils/helper';\nimport * as S from './PrivateChat.styled';\nvar PrivateChat = function PrivateChat(_ref) {\n  var username = _ref.username,\n    channel = _ref.channel;\n  var _useState = useState(false),\n    subscribed = _useState[0],\n    setSubscribed = _useState[1];\n  var router = useRouter();\n  var _useContext = useContext(UserContext),\n    user = _useContext.user;\n  var _useQuery = useQuery(GET_UNREAD_MESSAGES, {\n      variables: {\n        username: username,\n        channelUrl: channel.url\n      },\n      fetchPolicy: 'cache-and-network'\n    }),\n    _useQuery$data = _useQuery.data,\n    _useQuery$data2 = _useQuery$data === void 0 ? {} : _useQuery$data,\n    unreadMessage = _useQuery$data2.getUnreadMessagesCount,\n    loading = _useQuery.loading,\n    subscribeToMore = _useQuery.subscribeToMore;\n  useEffect(function () {\n    if (user && unreadMessage && !subscribed) {\n      subscribeToMore({\n        document: USER_WENT_ONLINE,\n        variables: {\n          tenant: COMPANY_NAME()\n        },\n        updateQuery: function updateQuery(prev, _ref2) {\n          var subscriptionData = _ref2.subscriptionData;\n          if (!subscriptionData.data) return prev;\n          var userData = subscriptionData.data.user;\n          return _objectSpread({}, prev, {\n            user: userData\n          });\n        }\n      });\n      subscribeToMore({\n        document: USER_WENT_OFFLINE,\n        variables: {\n          tenant: COMPANY_NAME()\n        },\n        updateQuery: function updateQuery(prev, _ref3) {\n          var subscriptionData = _ref3.subscriptionData;\n          if (!subscriptionData.data) return prev;\n          var userData = subscriptionData.data.user;\n          return _objectSpread({}, prev, {\n            user: userData\n          });\n        }\n      });\n      subscribeToMore({\n        document: NOTIFICATIONS_SUBSCRIPTION,\n        variables: {\n          receiverId: user.id,\n          tenant: COMPANY_NAME()\n        },\n        updateQuery: function updateQuery(prev, _ref4) {\n          var subscriptionData = _ref4.subscriptionData;\n          if (!subscriptionData.data) return prev;\n          var newNotification = subscriptionData.data.newNotification;\n          if (newNotification.type === 'direct' && prev.getUnreadMessagesCount.user.id === newNotification.message.author.id) {\n            return _objectSpread({}, prev, {\n              getUnreadMessagesCount: _objectSpread({}, prev.getUnreadMessagesCount, {\n                messages: [].concat(_toConsumableArray(prev.getUnreadMessagesCount.messages), [newNotification.message])\n              })\n            });\n          }\n          return prev;\n        }\n      });\n      setSubscribed(true);\n    }\n  }, [unreadMessage, user]);\n  if (loading || !unreadMessage) {\n    return __jsx(\"div\", null);\n  }\n  var onClick = function onClick() {\n    router.push(\"/[company]/[community]/[channel]\", \"/\".concat(COMPANY_NAME(), \"/\").concat(channel.url));\n  };\n  return __jsx(S.Wrapper, {\n    key: channel.id,\n    onClick: onClick\n  }, __jsx(S.Avatar, {\n    name: unreadMessage.user.username,\n    width: 36\n  }), __jsx(\"div\", {\n    className: \"user-message-box__message\"\n  }, __jsx(\"div\", {\n    className: \"user-message-box__info\"\n  }, __jsx(\"span\", {\n    className: \"user-message-box__name\"\n  }, unreadMessage.user.username, __jsx(S.Status, {\n    online: unreadMessage.user.isOnline\n  })), __jsx(\"span\", {\n    className: \"user-message-box__date\"\n  }, unreadMessage.messages.length > 0 && chatTime(unreadMessage.messages[unreadMessage.messages.length - 1].createdAt))), __jsx(\"div\", {\n    className: \"user-message-box__text\"\n  }, __jsx(\"div\", {\n    className: \"text\"\n  }, __jsx(\"p\", {\n    className: \"fill\"\n  }, unreadMessage.messages.length > 0 && transformMessage(unreadMessage.messages[unreadMessage.messages.length - 1].body, false))), (unreadMessage.messages.length > 1 || unreadMessage.fromNewUser) && __jsx(\"div\", {\n    className: \"message-count message-count_blue\"\n  }, unreadMessage.fromNewUser ? unreadMessage.messages.length : unreadMessage.messages.length - 1))));\n};\nexport default PrivateChat;","map":{"version":3,"names":["React","useState","useContext","useEffect","UserContext","useQuery","USER_WENT_ONLINE","USER_WENT_OFFLINE","GET_UNREAD_MESSAGES","NOTIFICATIONS_SUBSCRIPTION","useRouter","COMPANY_NAME","chatTime","transformMessage","S","PrivateChat","username","channel","subscribed","setSubscribed","router","user","variables","channelUrl","url","fetchPolicy","data","unreadMessage","getUnreadMessagesCount","loading","subscribeToMore","document","tenant","updateQuery","prev","subscriptionData","userData","receiverId","id","newNotification","type","message","author","messages","onClick","push","isOnline","length","createdAt","body","fromNewUser"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Channel/PrivateChats/PrivateChat.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { UserContext } from 'context/UserContext';\nimport { useQuery } from '@apollo/client';\nimport { USER_WENT_ONLINE, USER_WENT_OFFLINE } from 'apis/User';\nimport { GET_UNREAD_MESSAGES } from 'apis/Message';\nimport { NOTIFICATIONS_SUBSCRIPTION } from 'apis/Notification';\nimport { useRouter } from 'next/router';\nimport { COMPANY_NAME } from 'utils/config';\nimport { chatTime, transformMessage } from 'utils/helper';\nimport * as S from './PrivateChat.styled';\n\nconst PrivateChat = ({ username, channel }) => {\n  const [subscribed, setSubscribed] = useState(false);\n  const router = useRouter();\n  const { user } = useContext(UserContext);\n  const {\n    data: { getUnreadMessagesCount: unreadMessage } = {},\n    loading,\n    subscribeToMore,\n  } = useQuery(GET_UNREAD_MESSAGES, {\n    variables: { username, channelUrl: channel.url },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  useEffect(() => {\n    if (user && unreadMessage && !subscribed) {\n      subscribeToMore({\n        document: USER_WENT_ONLINE,\n        variables: { tenant: COMPANY_NAME() },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const { user: userData } = subscriptionData.data;\n\n          return {\n            ...prev,\n            user: userData,\n          };\n        },\n      });\n\n      subscribeToMore({\n        document: USER_WENT_OFFLINE,\n        variables: { tenant: COMPANY_NAME() },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const { user: userData } = subscriptionData.data;\n\n          return {\n            ...prev,\n            user: userData,\n          };\n        },\n      });\n\n      subscribeToMore({\n        document: NOTIFICATIONS_SUBSCRIPTION,\n        variables: { receiverId: user.id, tenant: COMPANY_NAME() },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const { newNotification } = subscriptionData.data;\n\n          if (\n            newNotification.type === 'direct' &&\n            prev.getUnreadMessagesCount.user.id === newNotification.message.author.id\n          ) {\n            return {\n              ...prev,\n              getUnreadMessagesCount: {\n                ...prev.getUnreadMessagesCount,\n                messages: [...prev.getUnreadMessagesCount.messages, newNotification.message],\n              },\n            };\n          }\n          return prev;\n        },\n      });\n      setSubscribed(true);\n    }\n  }, [unreadMessage, user]);\n  if (loading || !unreadMessage) {\n    return <div />;\n  }\n\n  const onClick = () => {\n    router.push(`/[company]/[community]/[channel]`, `/${COMPANY_NAME()}/${channel.url}`);\n  };\n\n  return (\n    <S.Wrapper key={channel.id} onClick={onClick}>\n      <S.Avatar name={unreadMessage.user.username} width={36} />\n      <div className=\"user-message-box__message\">\n        <div className=\"user-message-box__info\">\n          <span className=\"user-message-box__name\">\n            {unreadMessage.user.username}\n            <S.Status online={unreadMessage.user.isOnline} />\n          </span>\n          <span className=\"user-message-box__date\">\n            {unreadMessage.messages.length > 0 && chatTime(unreadMessage.messages[unreadMessage.messages.length - 1].createdAt)}\n          </span>\n        </div>\n        <div className=\"user-message-box__text\">\n          <div className=\"text\">\n            <p className=\"fill\">\n              {unreadMessage.messages.length > 0 && transformMessage(\n                unreadMessage.messages[unreadMessage.messages.length - 1].body,\n                false\n              )}\n            </p>\n          </div>\n          {(unreadMessage.messages.length > 1 || unreadMessage.fromNewUser) && (\n            <div className=\"message-count message-count_blue\">\n              {unreadMessage.fromNewUser\n                ? unreadMessage.messages.length\n                : unreadMessage.messages.length - 1}\n            </div>\n          )}\n        </div>\n      </div>\n    </S.Wrapper>\n  );\n};\n\nexport default PrivateChat;\n"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,WAAW;AAC/D,SAASC,mBAAmB,QAAQ,cAAc;AAClD,SAASC,0BAA0B,QAAQ,mBAAmB;AAC9D,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,QAAQ,EAAEC,gBAAgB,QAAQ,cAAc;AACzD,OAAO,KAAKC,CAAC,MAAM,sBAAsB;AAEzC,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAA8B;EAAA,IAAxBC,QAAQ,QAARA,QAAQ;IAAEC,OAAO,QAAPA,OAAO;EACtC,gBAAoChB,QAAQ,CAAC,KAAK,CAAC;IAA5CiB,UAAU;IAAEC,aAAa;EAChC,IAAMC,MAAM,GAAGV,SAAS,EAAE;EAC1B,kBAAiBR,UAAU,CAACE,WAAW,CAAC;IAAhCiB,IAAI,eAAJA,IAAI;EACZ,gBAIIhB,QAAQ,CAACG,mBAAmB,EAAE;MAChCc,SAAS,EAAE;QAAEN,QAAQ,EAARA,QAAQ;QAAEO,UAAU,EAAEN,OAAO,CAACO;MAAI,CAAC;MAChDC,WAAW,EAAE;IACf,CAAC,CAAC;IAAA,2BANAC,IAAI;IAAA,8CAA8C,CAAC,CAAC;IAApBC,aAAa,mBAArCC,sBAAsB;IAC9BC,OAAO,aAAPA,OAAO;IACPC,eAAe,aAAfA,eAAe;EAMjB3B,SAAS,CAAC,YAAM;IACd,IAAIkB,IAAI,IAAIM,aAAa,IAAI,CAACT,UAAU,EAAE;MACxCY,eAAe,CAAC;QACdC,QAAQ,EAAEzB,gBAAgB;QAC1BgB,SAAS,EAAE;UAAEU,MAAM,EAAErB,YAAY;QAAG,CAAC;QACrCsB,WAAW,EAAE,qBAACC,IAAI,SAA2B;UAAA,IAAvBC,gBAAgB,SAAhBA,gBAAgB;UACpC,IAAI,CAACA,gBAAgB,CAACT,IAAI,EAAE,OAAOQ,IAAI;UACvC,IAAcE,QAAQ,GAAKD,gBAAgB,CAACT,IAAI,CAAxCL,IAAI;UAEZ,yBACKa,IAAI;YACPb,IAAI,EAAEe;UAAQ;QAElB;MACF,CAAC,CAAC;MAEFN,eAAe,CAAC;QACdC,QAAQ,EAAExB,iBAAiB;QAC3Be,SAAS,EAAE;UAAEU,MAAM,EAAErB,YAAY;QAAG,CAAC;QACrCsB,WAAW,EAAE,qBAACC,IAAI,SAA2B;UAAA,IAAvBC,gBAAgB,SAAhBA,gBAAgB;UACpC,IAAI,CAACA,gBAAgB,CAACT,IAAI,EAAE,OAAOQ,IAAI;UACvC,IAAcE,QAAQ,GAAKD,gBAAgB,CAACT,IAAI,CAAxCL,IAAI;UAEZ,yBACKa,IAAI;YACPb,IAAI,EAAEe;UAAQ;QAElB;MACF,CAAC,CAAC;MAEFN,eAAe,CAAC;QACdC,QAAQ,EAAEtB,0BAA0B;QACpCa,SAAS,EAAE;UAAEe,UAAU,EAAEhB,IAAI,CAACiB,EAAE;UAAEN,MAAM,EAAErB,YAAY;QAAG,CAAC;QAC1DsB,WAAW,EAAE,qBAACC,IAAI,SAA2B;UAAA,IAAvBC,gBAAgB,SAAhBA,gBAAgB;UACpC,IAAI,CAACA,gBAAgB,CAACT,IAAI,EAAE,OAAOQ,IAAI;UACvC,IAAQK,eAAe,GAAKJ,gBAAgB,CAACT,IAAI,CAAzCa,eAAe;UAEvB,IACEA,eAAe,CAACC,IAAI,KAAK,QAAQ,IACjCN,IAAI,CAACN,sBAAsB,CAACP,IAAI,CAACiB,EAAE,KAAKC,eAAe,CAACE,OAAO,CAACC,MAAM,CAACJ,EAAE,EACzE;YACA,yBACKJ,IAAI;cACPN,sBAAsB,oBACjBM,IAAI,CAACN,sBAAsB;gBAC9Be,QAAQ,+BAAMT,IAAI,CAACN,sBAAsB,CAACe,QAAQ,IAAEJ,eAAe,CAACE,OAAO;cAAC;YAC7E;UAEL;UACA,OAAOP,IAAI;QACb;MACF,CAAC,CAAC;MACFf,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,CAACQ,aAAa,EAAEN,IAAI,CAAC,CAAC;EACzB,IAAIQ,OAAO,IAAI,CAACF,aAAa,EAAE;IAC7B,OAAO,kBAAO;EAChB;EAEA,IAAMiB,OAAO,GAAG,SAAVA,OAAO,GAAS;IACpBxB,MAAM,CAACyB,IAAI,gDAAyClC,YAAY,EAAE,cAAIM,OAAO,CAACO,GAAG,EAAG;EACtF,CAAC;EAED,OACE,MAAC,CAAC,CAAC,OAAO;IAAC,GAAG,EAAEP,OAAO,CAACqB,EAAG;IAAC,OAAO,EAAEM;EAAQ,GAC3C,MAAC,CAAC,CAAC,MAAM;IAAC,IAAI,EAAEjB,aAAa,CAACN,IAAI,CAACL,QAAS;IAAC,KAAK,EAAE;EAAG,EAAG,EAC1D;IAAK,SAAS,EAAC;EAA2B,GACxC;IAAK,SAAS,EAAC;EAAwB,GACrC;IAAM,SAAS,EAAC;EAAwB,GACrCW,aAAa,CAACN,IAAI,CAACL,QAAQ,EAC5B,MAAC,CAAC,CAAC,MAAM;IAAC,MAAM,EAAEW,aAAa,CAACN,IAAI,CAACyB;EAAS,EAAG,CAC5C,EACP;IAAM,SAAS,EAAC;EAAwB,GACrCnB,aAAa,CAACgB,QAAQ,CAACI,MAAM,GAAG,CAAC,IAAInC,QAAQ,CAACe,aAAa,CAACgB,QAAQ,CAAChB,aAAa,CAACgB,QAAQ,CAACI,MAAM,GAAG,CAAC,CAAC,CAACC,SAAS,CAAC,CAC9G,CACH,EACN;IAAK,SAAS,EAAC;EAAwB,GACrC;IAAK,SAAS,EAAC;EAAM,GACnB;IAAG,SAAS,EAAC;EAAM,GAChBrB,aAAa,CAACgB,QAAQ,CAACI,MAAM,GAAG,CAAC,IAAIlC,gBAAgB,CACpDc,aAAa,CAACgB,QAAQ,CAAChB,aAAa,CAACgB,QAAQ,CAACI,MAAM,GAAG,CAAC,CAAC,CAACE,IAAI,EAC9D,KAAK,CACN,CACC,CACA,EACL,CAACtB,aAAa,CAACgB,QAAQ,CAACI,MAAM,GAAG,CAAC,IAAIpB,aAAa,CAACuB,WAAW,KAC9D;IAAK,SAAS,EAAC;EAAkC,GAC9CvB,aAAa,CAACuB,WAAW,GACtBvB,aAAa,CAACgB,QAAQ,CAACI,MAAM,GAC7BpB,aAAa,CAACgB,QAAQ,CAACI,MAAM,GAAG,CAAC,CAExC,CACG,CACF,CACI;AAEhB,CAAC;AAED,eAAehC,WAAW"},"metadata":{},"sourceType":"module"}