{"ast":null,"code":"\"use strict\";\n\n/**\nMIT License\nCopyright (c) 2015-present, Facebook, Inc.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/ // This file is based on https://github.com/facebook/create-react-app/blob/7b1a32be6ec9f99a6c9a3c66813f3ac09c4736b9/packages/react-dev-utils/formatWebpackMessages.js\n// It's been edited to remove chalk and CRA-specific logic\nvar _slicedToArray = require(\"@babel/runtime-corejs2/helpers/slicedToArray\");\nvar friendlySyntaxErrorLabel = 'Syntax error:';\nfunction isLikelyASyntaxError(message) {\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1;\n} // Cleans up webpack error messages.\n// eslint-disable-next-line no-unused-vars\nfunction formatMessage(message, isError) {\n  var lines = message.split('\\n'); // Strip Webpack-added headers off errors/warnings\n  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\n  lines = lines.filter(function (line) {\n    return !/Module [A-z ]+\\(from/.test(line);\n  }); // Transform parsing error into syntax error\n  // TODO: move this to our ESLint formatter?\n  lines = lines.map(function (line) {\n    var parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(line);\n    if (!parsingError) {\n      return line;\n    }\n    var _parsingError = _slicedToArray(parsingError, 4),\n      errorLine = _parsingError[1],\n      errorColumn = _parsingError[2],\n      errorMessage = _parsingError[3];\n    return friendlySyntaxErrorLabel + \" \" + errorMessage + \" (\" + errorLine + \":\" + errorColumn + \")\";\n  });\n  message = lines.join('\\n'); // Smoosh syntax errors (commonly found in CSS)\n  message = message.replace(/SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g, friendlySyntaxErrorLabel + \" $3 ($1:$2)\\n\"); // Remove columns from ESLint formatter output (we added these for more\n  // accurate syntax errors)\n  message = message.replace(/Line (\\d+):\\d+:/g, 'Line $1:'); // Clean up export errors\n  message = message.replace(/^.*export '(.+?)' was not found in '(.+?)'.*$/gm, \"Attempted import error: '$1' is not exported from '$2'.\");\n  message = message.replace(/^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm, \"Attempted import error: '$2' does not contain a default export (imported as '$1').\");\n  message = message.replace(/^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm, \"Attempted import error: '$1' is not exported from '$3' (imported as '$2').\");\n  lines = message.split('\\n'); // Remove leading newline\n  if (lines.length > 2 && lines[1].trim() === '') {\n    lines.splice(1, 1);\n  } // Clean up file name\n  lines[0] = lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/, '$1'); // Cleans up verbose \"module not found\" messages for files and packages.\n  if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {\n    lines = [lines[0], lines[1].replace('Error: ', '').replace('Module not found: Cannot find file:', 'Cannot find file:')];\n  }\n  message = lines.join('\\n'); // Internal stacks are generally useless so we strip them... with the\n  // exception of stacks containing `webpack:` because they're normally\n  // from user code generated by Webpack. For more information see\n  // https://github.com/facebook/create-react-app/pull/1050\n  message = message.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm, ''); // at ... ...:x:y\n  message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, ''); // at <anonymous>\n  lines = message.split('\\n'); // Remove duplicated newlines\n  lines = lines.filter(function (line, index, arr) {\n    return index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim();\n  }); // Reassemble the message\n  message = lines.join('\\n');\n  return message.trim();\n}\nfunction formatWebpackMessages(json) {\n  var formattedErrors = json.errors.map(function (message) {\n    return formatMessage(message, true);\n  });\n  var formattedWarnings = json.warnings.map(function (message) {\n    return formatMessage(message, false);\n  });\n  var result = {\n    errors: formattedErrors,\n    warnings: formattedWarnings\n  };\n  if (result.errors.some(isLikelyASyntaxError)) {\n    // If there are any syntax errors, show just them.\n    result.errors = result.errors.filter(isLikelyASyntaxError);\n  }\n  return result;\n}\nmodule.exports = formatWebpackMessages;","map":{"version":3,"names":["friendlySyntaxErrorLabel","isLikelyASyntaxError","message","indexOf","formatMessage","isError","lines","split","filter","line","test","map","parsingError","exec","errorLine","errorColumn","errorMessage","join","replace","length","trim","splice","index","arr","formatWebpackMessages","json","formattedErrors","errors","formattedWarnings","warnings","result","some","module","exports"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/node_modules/next/dist/client/dev/error-overlay/format-webpack-messages.js"],"sourcesContent":["\"use strict\";/**\nMIT License\n\nCopyright (c) 2015-present, Facebook, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/ // This file is based on https://github.com/facebook/create-react-app/blob/7b1a32be6ec9f99a6c9a3c66813f3ac09c4736b9/packages/react-dev-utils/formatWebpackMessages.js\n// It's been edited to remove chalk and CRA-specific logic\nvar friendlySyntaxErrorLabel='Syntax error:';function isLikelyASyntaxError(message){return message.indexOf(friendlySyntaxErrorLabel)!==-1;}// Cleans up webpack error messages.\n// eslint-disable-next-line no-unused-vars\nfunction formatMessage(message,isError){var lines=message.split('\\n');// Strip Webpack-added headers off errors/warnings\n// https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\nlines=lines.filter(line=>!/Module [A-z ]+\\(from/.test(line));// Transform parsing error into syntax error\n// TODO: move this to our ESLint formatter?\nlines=lines.map(line=>{var parsingError=/Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(line);if(!parsingError){return line;}var[,errorLine,errorColumn,errorMessage]=parsingError;return friendlySyntaxErrorLabel+\" \"+errorMessage+\" (\"+errorLine+\":\"+errorColumn+\")\";});message=lines.join('\\n');// Smoosh syntax errors (commonly found in CSS)\nmessage=message.replace(/SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g,friendlySyntaxErrorLabel+\" $3 ($1:$2)\\n\");// Remove columns from ESLint formatter output (we added these for more\n// accurate syntax errors)\nmessage=message.replace(/Line (\\d+):\\d+:/g,'Line $1:');// Clean up export errors\nmessage=message.replace(/^.*export '(.+?)' was not found in '(.+?)'.*$/gm,\"Attempted import error: '$1' is not exported from '$2'.\");message=message.replace(/^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\"Attempted import error: '$2' does not contain a default export (imported as '$1').\");message=message.replace(/^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\"Attempted import error: '$1' is not exported from '$3' (imported as '$2').\");lines=message.split('\\n');// Remove leading newline\nif(lines.length>2&&lines[1].trim()===''){lines.splice(1,1);}// Clean up file name\nlines[0]=lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/,'$1');// Cleans up verbose \"module not found\" messages for files and packages.\nif(lines[1]&&lines[1].indexOf('Module not found: ')===0){lines=[lines[0],lines[1].replace('Error: ','').replace('Module not found: Cannot find file:','Cannot find file:')];}message=lines.join('\\n');// Internal stacks are generally useless so we strip them... with the\n// exception of stacks containing `webpack:` because they're normally\n// from user code generated by Webpack. For more information see\n// https://github.com/facebook/create-react-app/pull/1050\nmessage=message.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm,'');// at ... ...:x:y\nmessage=message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm,'');// at <anonymous>\nlines=message.split('\\n');// Remove duplicated newlines\nlines=lines.filter((line,index,arr)=>index===0||line.trim()!==''||line.trim()!==arr[index-1].trim());// Reassemble the message\nmessage=lines.join('\\n');return message.trim();}function formatWebpackMessages(json){var formattedErrors=json.errors.map(function(message){return formatMessage(message,true);});var formattedWarnings=json.warnings.map(function(message){return formatMessage(message,false);});var result={errors:formattedErrors,warnings:formattedWarnings};if(result.errors.some(isLikelyASyntaxError)){// If there are any syntax errors, show just them.\nresult.errors=result.errors.filter(isLikelyASyntaxError);}return result;}module.exports=formatWebpackMessages;"],"mappings":"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"},"metadata":{},"sourceType":"script"}