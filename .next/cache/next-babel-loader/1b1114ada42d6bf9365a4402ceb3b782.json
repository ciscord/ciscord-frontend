{"ast":null,"code":"import gql from 'graphql-tag';\nexport const LOGOUT_USER = gql`\n  mutation logout {\n    logout {\n      isOnline\n    }\n  }\n`;\nexport const GET_USERS = gql`\n  mutation users($searchString: String) {\n    users(searchString: $searchString) {\n      id\n      username\n      fullname\n      image\n      isOnline\n    }\n  }\n`;\nexport const GET_ME = gql`\n  query me {\n    me {\n      id\n      fullname\n      username\n      bio\n      email\n      social\n      image\n      isOnline\n      owner\n      communitiesOwned {\n        id\n        url\n      }\n      communitiesFollowed {\n        id\n        url\n        author {\n          id\n        }\n        image\n        name\n        members {\n          id\n        }\n        notifications {\n          id\n        }\n      }\n      role {\n        id\n        roleSettings\n        title\n      }\n      channelsInfo {\n        id\n        channel {\n          id\n          name\n          url\n        }\n        lastUpdateAt\n      }\n    }\n  }\n`;\nexport const GET_USER = gql`\n  query getUser($username: String!) {\n    getUser(username: $username) {\n      followers\n      followings\n      bio\n      user {\n        id\n        fullname\n        username\n        email\n        social\n        image\n        isOnline\n        owner\n        communitiesOwned {\n          id\n          url\n        }\n        communitiesFollowed {\n          id\n          url\n          author {\n            id\n          }\n          image\n          name\n          members {\n            id\n          }\n          notifications {\n            id\n          }\n        }\n        role {\n          id\n          roleSettings\n          title\n          color\n        }\n        channelsInfo {\n          id\n          channel {\n            id\n            name\n            url\n          }\n          lastUpdateAt\n        }\n      }\n    }\n  }\n`;\nexport const SEARCH_USERS = gql`\n  query users($searchString: String) {\n    users(searchString: $searchString) {\n      id\n      fullname\n      username\n      bio\n      social\n      image\n      owner\n      isOnline\n      communitiesOwned {\n        id\n        url\n      }\n      communitiesFollowed {\n        id\n        url\n      }\n      role {\n        id\n        roleSettings\n        title\n        color\n      }\n    }\n  }\n`;\nexport const USER_WENT_ONLINE = gql`\n  subscription userWentOnline($tenant: String!) {\n    userWentOnline(tenant: $tenant) {\n      id\n      username\n      isOnline\n    }\n  }\n`;\nexport const USER_WENT_OFFLINE = gql`\n  subscription userWentOffline($tenant: String!) {\n    userWentOffline(tenant: $tenant) {\n      id\n      username\n      isOnline\n    }\n  }\n`;\nexport const SIGNUP = gql`\n  mutation signup(\n    $fullname: String!\n    $username: String!\n    $email: String!\n    $password: String!\n    $bio: String\n  ) {\n    signup(\n      fullname: $fullname\n      username: $username\n      email: $email\n      password: $password\n      bio: $bio\n    ) {\n      token\n      user {\n        id\n        username\n        channelsInfo {\n          id\n          channel {\n            id\n            name\n            url\n          }\n          lastUpdateAt\n        }\n      }\n    }\n  }\n`;\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n        channelsInfo {\n          id\n          channel {\n            id\n            name\n            url\n          }\n          lastUpdateAt\n        }\n      }\n    }\n  }\n`;\nexport const SET_CURRENT_CHANNEL = gql`\n  mutation setCurrentChannel($channelUrl: String) {\n    setCurrentChannel(channelUrl: $channelUrl) {\n      id\n    }\n  }\n`;","map":{"version":3,"names":["gql","LOGOUT_USER","GET_USERS","GET_ME","GET_USER","SEARCH_USERS","USER_WENT_ONLINE","USER_WENT_OFFLINE","SIGNUP","LOGIN","SET_CURRENT_CHANNEL"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/apis/User.js"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const LOGOUT_USER = gql`\n  mutation logout {\n    logout {\n      isOnline\n    }\n  }\n`;\n\nexport const GET_USERS = gql`\n  mutation users($searchString: String) {\n    users(searchString: $searchString) {\n      id\n      username\n      fullname\n      image\n      isOnline\n    }\n  }\n`;\n\nexport const GET_ME = gql`\n  query me {\n    me {\n      id\n      fullname\n      username\n      bio\n      email\n      social\n      image\n      isOnline\n      owner\n      communitiesOwned {\n        id\n        url\n      }\n      communitiesFollowed {\n        id\n        url\n        author {\n          id\n        }\n        image\n        name\n        members {\n          id\n        }\n        notifications {\n          id\n        }\n      }\n      role {\n        id\n        roleSettings\n        title\n      }\n      channelsInfo {\n        id\n        channel {\n          id\n          name\n          url\n        }\n        lastUpdateAt\n      }\n    }\n  }\n`;\n\nexport const GET_USER = gql`\n  query getUser($username: String!) {\n    getUser(username: $username) {\n      followers\n      followings\n      bio\n      user {\n        id\n        fullname\n        username\n        email\n        social\n        image\n        isOnline\n        owner\n        communitiesOwned {\n          id\n          url\n        }\n        communitiesFollowed {\n          id\n          url\n          author {\n            id\n          }\n          image\n          name\n          members {\n            id\n          }\n          notifications {\n            id\n          }\n        }\n        role {\n          id\n          roleSettings\n          title\n          color\n        }\n        channelsInfo {\n          id\n          channel {\n            id\n            name\n            url\n          }\n          lastUpdateAt\n        }\n      }\n    }\n  }\n`;\n\nexport const SEARCH_USERS = gql`\n  query users($searchString: String) {\n    users(searchString: $searchString) {\n      id\n      fullname\n      username\n      bio\n      social\n      image\n      owner\n      isOnline\n      communitiesOwned {\n        id\n        url\n      }\n      communitiesFollowed {\n        id\n        url\n      }\n      role {\n        id\n        roleSettings\n        title\n        color\n      }\n    }\n  }\n`;\n\nexport const USER_WENT_ONLINE = gql`\n  subscription userWentOnline($tenant: String!) {\n    userWentOnline(tenant: $tenant) {\n      id\n      username\n      isOnline\n    }\n  }\n`;\n\nexport const USER_WENT_OFFLINE = gql`\n  subscription userWentOffline($tenant: String!) {\n    userWentOffline(tenant: $tenant) {\n      id\n      username\n      isOnline\n    }\n  }\n`;\n\nexport const SIGNUP = gql`\n  mutation signup(\n    $fullname: String!\n    $username: String!\n    $email: String!\n    $password: String!\n    $bio: String\n  ) {\n    signup(\n      fullname: $fullname\n      username: $username\n      email: $email\n      password: $password\n      bio: $bio\n    ) {\n      token\n      user {\n        id\n        username\n        channelsInfo {\n          id\n          channel {\n            id\n            name\n            url\n          }\n          lastUpdateAt\n        }\n      }\n    }\n  }\n`;\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n        channelsInfo {\n          id\n          channel {\n            id\n            name\n            url\n          }\n          lastUpdateAt\n        }\n      }\n    }\n  }\n`;\n\nexport const SET_CURRENT_CHANNEL = gql`\n  mutation setCurrentChannel($channelUrl: String) {\n    setCurrentChannel(channelUrl: $channelUrl) {\n      id\n    }\n  }\n`;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,aAAa;AAE7B,OAAO,MAAMC,WAAW,GAAGD,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAME,SAAS,GAAGF,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMG,MAAM,GAAGH,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMI,QAAQ,GAAGJ,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMK,YAAY,GAAGL,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMM,gBAAgB,GAAGN,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMO,iBAAiB,GAAGP,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMQ,MAAM,GAAGR,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMS,KAAK,GAAGT,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMU,mBAAmB,GAAGV,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module"}