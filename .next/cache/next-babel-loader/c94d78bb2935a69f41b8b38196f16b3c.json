{"ast":null,"code":"import _Object$setPrototypeOf from \"@babel/runtime-corejs2/core-js/object/set-prototype-of\";\nimport _Object$getPrototypeOf from \"@babel/runtime-corejs2/core-js/object/get-prototype-of\";\nimport _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Symbol from \"@babel/runtime-corejs2/core-js/symbol\";\nimport _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = _Object$defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof _Symbol ? _Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return _Object$defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = _Object$create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = _Object$getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = _Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState, useEffect, useContext } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { UserContext } from 'context/UserContext';\nimport { COMPANY_NAME } from 'utils/config';\nimport { GET_NOTIFICATIONS, NOTIFICATIONS_SUBSCRIPTION, MARK_NOTIFICATIONS_AS_READ, MARK_NOTIFICATION_AS_READ } from 'apis/Notification';\nimport closeIcon from 'public/icons/close.svg';\nimport Notification from './Notification/Notification';\nimport Placeholder from './NotificationsPopup.placeholder';\nimport * as S from './NotificationsPopup.styled';\n\n// import notificationSound from 'public/sounds/notification.wav';\n// const NotificationSound = new Audio(notificationSound);\n\nvar Notifications = function Notifications(_ref) {\n  var opened = _ref.opened,\n    close = _ref.close,\n    onMarkAsRead = _ref.onMarkAsRead;\n  var _useState = useState(false),\n    subscribed = _useState[0],\n    setSubscribed = _useState[1];\n  // const [active, setActiveTab] = useState('all');\n  var _useContext = useContext(UserContext),\n    user = _useContext.user;\n  var _useQuery = useQuery(GET_NOTIFICATIONS, {\n      fetchPolicy: 'cache-and-network'\n    }),\n    _useQuery$data = _useQuery.data,\n    _useQuery$data2 = _useQuery$data === void 0 ? {} : _useQuery$data,\n    notifications = _useQuery$data2.notifications,\n    refetch = _useQuery.refetch,\n    notificationsLoading = _useQuery.loading,\n    subscribeToMore = _useQuery.subscribeToMore;\n  var _useMutation = useMutation(MARK_NOTIFICATIONS_AS_READ),\n    _useMutation2 = _slicedToArray(_useMutation, 1),\n    markNotificationsAsRead = _useMutation2[0];\n  var _useMutation3 = useMutation(MARK_NOTIFICATION_AS_READ),\n    _useMutation4 = _slicedToArray(_useMutation3, 1),\n    markNotificationAsRead = _useMutation4[0];\n  useEffect(function () {\n    if (user && !subscribed) {\n      setSubscribed(true);\n      subscribeToMore({\n        document: NOTIFICATIONS_SUBSCRIPTION,\n        variables: {\n          receiverId: user.id,\n          tenant: COMPANY_NAME()\n        },\n        updateQuery: function updateQuery(prev, _ref2) {\n          var subscriptionData = _ref2.subscriptionData;\n          if (!subscriptionData.data) return prev;\n          var newNotification = subscriptionData.data.newNotification;\n          if (newNotification.type === 'direct') return prev;\n          if (prev.notifications.filter(function (e) {\n            return e.id === newNotification.id;\n          }).length === 0) {\n            return _objectSpread({}, prev, {\n              notifications: [newNotification].concat(_toConsumableArray(prev.notifications))\n            });\n          }\n          return prev;\n        }\n      });\n    }\n  }, [user]);\n  useEffect(function () {\n    var listener = document.body.addEventListener('click', function (event) {\n      var modalContainer = event.target.closest('#modal-notifications');\n      var notificationContainer = event.target.closest('#vs-icon-notifications');\n      if (!modalContainer && !notificationContainer) {\n        close();\n      }\n    });\n    return function () {\n      return document.body.removeEventListener('click', listener);\n    };\n  }, []);\n  var markAllAsRead = function markAllAsRead() {\n    return _regeneratorRuntime().async(function markAllAsRead$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime().awrap(markNotificationsAsRead({\n            variables: {\n              type: 'mention'\n            }\n          }));\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime().awrap(onMarkAsRead());\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, _Promise);\n  };\n  var markOneAsRead = function markOneAsRead(data) {\n    return _regeneratorRuntime().async(function markOneAsRead$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime().awrap(markNotificationAsRead(data));\n        case 2:\n          _context2.next = 4;\n          return _regeneratorRuntime().awrap(onMarkAsRead());\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, null, null, null, _Promise);\n  };\n  if (!notifications) {\n    return __jsx(Placeholder, null);\n  }\n  return __jsx(S.Container, {\n    opened: opened,\n    id: \"modal-notifications\"\n  }, __jsx(S.Header, null, __jsx(S.Heading, null, __jsx(S.Title, null, \"Recent mentions\")), __jsx(\"div\", null, __jsx(S.MarkAsRead, {\n    onClick: markAllAsRead\n  }, \"Mark all read\"), __jsx(S.CloseIcon, {\n    onClick: close\n  }, __jsx(\"use\", {\n    xlinkHref: \"\".concat(closeIcon, \"#icon-close\")\n  })))), __jsx(S.NotificationsWrapper, null, notifications.length > 0 ? notifications.map(function (notification) {\n    return __jsx(Notification, {\n      key: notification.id,\n      notification: notification,\n      closePopup: close,\n      onClick: markOneAsRead\n    });\n  }) : __jsx(\"div\", {\n    style: {\n      opacity: 0.2,\n      paddingLeft: 9\n    }\n  }, \"No notifications\")));\n};\nexport default Notifications;","map":{"version":3,"names":["useState","useEffect","useContext","useQuery","useMutation","UserContext","COMPANY_NAME","GET_NOTIFICATIONS","NOTIFICATIONS_SUBSCRIPTION","MARK_NOTIFICATIONS_AS_READ","MARK_NOTIFICATION_AS_READ","closeIcon","Notification","Placeholder","S","Notifications","opened","close","onMarkAsRead","subscribed","setSubscribed","user","fetchPolicy","data","notifications","refetch","notificationsLoading","loading","subscribeToMore","markNotificationsAsRead","markNotificationAsRead","document","variables","receiverId","id","tenant","updateQuery","prev","subscriptionData","newNotification","type","filter","e","length","listener","body","addEventListener","event","modalContainer","target","closest","notificationContainer","removeEventListener","markAllAsRead","markOneAsRead","map","notification","opacity","paddingLeft"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Navbar/Notifications/NotificationsPopup.js"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { UserContext } from 'context/UserContext';\nimport { COMPANY_NAME } from 'utils/config';\nimport {\n  GET_NOTIFICATIONS,\n  NOTIFICATIONS_SUBSCRIPTION,\n  MARK_NOTIFICATIONS_AS_READ,\n  MARK_NOTIFICATION_AS_READ,\n} from 'apis/Notification';\n\nimport closeIcon from 'public/icons/close.svg';\n\nimport Notification from './Notification/Notification';\nimport Placeholder from './NotificationsPopup.placeholder';\nimport * as S from './NotificationsPopup.styled';\n\n// import notificationSound from 'public/sounds/notification.wav';\n// const NotificationSound = new Audio(notificationSound);\n\nconst Notifications = ({ opened, close, onMarkAsRead }) => {\n  const [subscribed, setSubscribed] = useState(false);\n  // const [active, setActiveTab] = useState('all');\n  const { user } = useContext(UserContext);\n  const {\n    data: { notifications } = {},\n    refetch,\n    loading: notificationsLoading,\n    subscribeToMore,\n  } = useQuery(GET_NOTIFICATIONS, { fetchPolicy: 'cache-and-network' });\n\n  const [markNotificationsAsRead] = useMutation(MARK_NOTIFICATIONS_AS_READ);\n  const [markNotificationAsRead] = useMutation(MARK_NOTIFICATION_AS_READ);\n\n  useEffect(() => {\n    if (user && !subscribed) {\n      setSubscribed(true);\n      subscribeToMore({\n        document: NOTIFICATIONS_SUBSCRIPTION,\n        variables: { receiverId: user.id, tenant: COMPANY_NAME() },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const { newNotification } = subscriptionData.data;\n          if (newNotification.type === 'direct') return prev;\n          if (prev.notifications.filter(e => e.id === newNotification.id).length === 0) {\n            return {\n              ...prev,\n              notifications: [newNotification, ...prev.notifications],\n            };\n          }\n          return prev;\n        },\n      });\n    }\n  }, [user]);\n\n  useEffect(() => {\n    const listener = document.body.addEventListener('click', event => {\n      const modalContainer = event.target.closest('#modal-notifications');\n      const notificationContainer = event.target.closest('#vs-icon-notifications');\n      if (!modalContainer && !notificationContainer) {\n        close();\n      }\n    });\n    return () => document.body.removeEventListener('click', listener);\n  }, []);\n\n  const markAllAsRead = async () => {\n    await markNotificationsAsRead({ variables: { type: 'mention' } });\n\n    await onMarkAsRead();\n  };\n\n  const markOneAsRead = async data => {\n    await markNotificationAsRead(data);\n    await onMarkAsRead();\n  };\n\n  if (!notifications) {\n    return <Placeholder />;\n  }\n\n  return (\n    <S.Container opened={opened} id=\"modal-notifications\">\n      <S.Header>\n        <S.Heading>\n          <S.Title>Recent mentions</S.Title>\n          {/* notifications.length > 0 && (\n            <S.Count>{notifications.length}</S.Count>\n          ) */}\n        </S.Heading>\n        <div>\n          <S.MarkAsRead onClick={markAllAsRead}>Mark all read</S.MarkAsRead>\n          <S.CloseIcon onClick={close}>\n            <use xlinkHref={`${closeIcon}#icon-close`} />\n          </S.CloseIcon>\n        </div>\n      </S.Header>\n\n      {/*\n        <S.Nav>\n          <div>\n            <p\n              onClick={() => setActiveTab('all')}\n              className={`tab ${active === 'all' ? 'active' : ''}`}\n            >\n              All servers\n            </p>\n            <p\n              onClick={() => setActiveTab('this')}\n              className={`tab ${active === 'this' ? 'active' : ''}`}\n            >\n              This server\n            </p>\n          </div>\n          <div className=\"display\">\n            Display:<span>{` `}everithing</span>\n          </div>\n        </S.Nav>\n        */}\n\n      <S.NotificationsWrapper>\n        {notifications.length > 0 ? (\n          notifications.map(notification => (\n            <Notification\n              key={notification.id}\n              notification={notification}\n              closePopup={close}\n              onClick={markOneAsRead}\n            />\n          ))\n        ) : (\n          <div style={{ opacity: 0.2, paddingLeft: 9 }}>No notifications</div>\n        )}\n      </S.NotificationsWrapper>\n    </S.Container>\n  );\n};\n\nexport default Notifications;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}