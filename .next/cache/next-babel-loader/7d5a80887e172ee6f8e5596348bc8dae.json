{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _this = this,\n  _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Input/TypingStatus/TypingStatus.js\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSubscription } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { COMPANY_NAME } from 'utils/config';\nimport { UserContext } from 'context/UserContext';\nimport * as S from './TypingStatus.styled';\nvar USER_TYPING_STATUS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  subscription userTypingStatus($channelUrl: String, $tenant: String, $username: String) {\\n    userTypingStatus(channelUrl: $channelUrl, tenant: $tenant, username: $username) {\\n      username\\n      isTyping\\n    }\\n  }\\n\"])));\nexport default (function () {\n  var _useState = useState([]),\n    typingUsers = _useState[0],\n    setTypingUsers = _useState[1];\n  var _useState2 = useState({}),\n    typingTimeouts = _useState2[0],\n    setTypingTimeouts = _useState2[1];\n  var _useContext = useContext(UserContext),\n    user = _useContext.user;\n  var _useRouter = useRouter(),\n    _useRouter$query = _useRouter.query,\n    channelUrl = _useRouter$query.channel,\n    communityUrl = _useRouter$query.community;\n  var url = \"\".concat(communityUrl, \"/\").concat(channelUrl);\n  var startTimeout = function startTimeout(username) {\n    var timeout = {};\n    timeout[username] = setTimeout(function () {\n      setTypingUsers(function (currentTypingUsers) {\n        return currentTypingUsers.filter(function (typingUsername) {\n          return typingUsername !== username;\n        });\n      });\n    }, 3000);\n    setTypingTimeouts(_objectSpread({\n      typingTimeouts: typingTimeouts\n    }, timeout));\n  };\n  useSubscription(USER_TYPING_STATUS, {\n    variables: {\n      channelUrl: url,\n      tenant: COMPANY_NAME(),\n      username: user && user.username || ''\n    },\n    onSubscriptionData: function onSubscriptionData(_ref) {\n      var userTypingStatus = _ref.subscriptionData.data.userTypingStatus;\n      var userIndex = typingUsers.findIndex(function (username) {\n        return userTypingStatus.username === username;\n      });\n      clearTimeout(typingTimeouts[userTypingStatus.username]);\n      if (userTypingStatus.isTyping) {\n        if (userIndex === -1) {\n          setTypingUsers([].concat(_toConsumableArray(typingUsers), [userTypingStatus.username]));\n        }\n        startTimeout(userTypingStatus.username);\n      } else if (userIndex !== -1) {\n        setTypingUsers(typingUsers.filter(function (username) {\n          return username !== userTypingStatus.username;\n        }));\n      }\n    }\n  });\n  var getStatusString = function getStatusString() {\n    var visibleUsers = typingUsers.slice(0, 2).join(', ');\n    var moreUsers = typingUsers.length > 2 ? \"and \".concat(typingUsers.length - 2, \" others\") : '';\n    return \"\".concat(visibleUsers, \" \").concat(moreUsers, \" is responding\");\n  };\n  return typingUsers.length > 0 && __jsx(S.Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    style: {\n      marginRight: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, getStatusString()), __jsx(S.Circle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), __jsx(S.Circle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), __jsx(S.Circle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }));\n});","map":{"version":3,"names":["React","useState","useContext","useRouter","useSubscription","gql","COMPANY_NAME","UserContext","S","USER_TYPING_STATUS","typingUsers","setTypingUsers","typingTimeouts","setTypingTimeouts","user","query","channelUrl","channel","communityUrl","community","url","startTimeout","username","timeout","setTimeout","currentTypingUsers","filter","typingUsername","variables","tenant","onSubscriptionData","userTypingStatus","subscriptionData","data","userIndex","findIndex","clearTimeout","isTyping","getStatusString","visibleUsers","slice","join","moreUsers","length","marginRight"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Input/TypingStatus/TypingStatus.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSubscription } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { COMPANY_NAME } from 'utils/config';\nimport { UserContext } from 'context/UserContext';\nimport * as S from './TypingStatus.styled';\n\nconst USER_TYPING_STATUS = gql`\n  subscription userTypingStatus($channelUrl: String, $tenant: String, $username: String) {\n    userTypingStatus(channelUrl: $channelUrl, tenant: $tenant, username: $username) {\n      username\n      isTyping\n    }\n  }\n`;\n\nexport default () => {\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [typingTimeouts, setTypingTimeouts] = useState({});\n  const { user } = useContext(UserContext);\n\n  const {\n    query: { channel: channelUrl, community: communityUrl },\n  } = useRouter();\n\n  const url = `${communityUrl}/${channelUrl}`;\n\n  const startTimeout = username => {\n    const timeout = {};\n\n    timeout[username] = setTimeout(() => {\n      setTypingUsers(currentTypingUsers =>\n        currentTypingUsers.filter(typingUsername => typingUsername !== username)\n      );\n    }, 3000);\n\n    setTypingTimeouts({\n      typingTimeouts,\n      ...timeout,\n    });\n  };\n\n  useSubscription(USER_TYPING_STATUS, {\n    variables: {\n      channelUrl: url,\n      tenant: COMPANY_NAME(),\n      username: (user && user.username) || '',\n    },\n    onSubscriptionData: ({\n      subscriptionData: {\n        data: { userTypingStatus },\n      },\n    }) => {\n      const userIndex = typingUsers.findIndex(username => userTypingStatus.username === username);\n\n      clearTimeout(typingTimeouts[userTypingStatus.username]);\n\n      if (userTypingStatus.isTyping) {\n        if (userIndex === -1) {\n          setTypingUsers([...typingUsers, userTypingStatus.username]);\n        }\n\n        startTimeout(userTypingStatus.username);\n      } else if (userIndex !== -1) {\n        setTypingUsers(typingUsers.filter(username => username !== userTypingStatus.username));\n      }\n    },\n  });\n\n  const getStatusString = () => {\n    const visibleUsers = typingUsers.slice(0, 2).join(', ');\n    const moreUsers = typingUsers.length > 2 ? `and ${typingUsers.length - 2} others` : '';\n\n    return `${visibleUsers} ${moreUsers} is responding`;\n  };\n\n  return (\n    typingUsers.length > 0 && (\n      <S.Container>\n        <span style={{ marginRight: 5 }}>{getStatusString()}</span>\n        <S.Circle />\n        <S.Circle />\n        <S.Circle />\n      </S.Container>\n    )\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,eAAe,QAAQ,gBAAgB;AAChD,OAAOC,GAAG,MAAM,aAAa;AAC7B,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAO,KAAKC,CAAC,MAAM,uBAAuB;AAE1C,IAAMC,kBAAkB,GAAGJ,GAAG,sSAO7B;AAED,gBAAe,YAAM;EACnB,gBAAsCJ,QAAQ,CAAC,EAAE,CAAC;IAA3CS,WAAW;IAAEC,cAAc;EAClC,iBAA4CV,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAjDW,cAAc;IAAEC,iBAAiB;EACxC,kBAAiBX,UAAU,CAACK,WAAW,CAAC;IAAhCO,IAAI,eAAJA,IAAI;EAEZ,iBAEIX,SAAS,EAAE;IAAA,8BADbY,KAAK;IAAaC,UAAU,oBAAnBC,OAAO;IAAyBC,YAAY,oBAAvBC,SAAS;EAGzC,IAAMC,GAAG,aAAMF,YAAY,cAAIF,UAAU,CAAE;EAE3C,IAAMK,YAAY,GAAG,SAAfA,YAAY,CAAGC,QAAQ,EAAI;IAC/B,IAAMC,OAAO,GAAG,CAAC,CAAC;IAElBA,OAAO,CAACD,QAAQ,CAAC,GAAGE,UAAU,CAAC,YAAM;MACnCb,cAAc,CAAC,UAAAc,kBAAkB;QAAA,OAC/BA,kBAAkB,CAACC,MAAM,CAAC,UAAAC,cAAc;UAAA,OAAIA,cAAc,KAAKL,QAAQ;QAAA,EAAC;MAAA,EACzE;IACH,CAAC,EAAE,IAAI,CAAC;IAERT,iBAAiB;MACfD,cAAc,EAAdA;IAAc,GACXW,OAAO,EACV;EACJ,CAAC;EAEDnB,eAAe,CAACK,kBAAkB,EAAE;IAClCmB,SAAS,EAAE;MACTZ,UAAU,EAAEI,GAAG;MACfS,MAAM,EAAEvB,YAAY,EAAE;MACtBgB,QAAQ,EAAGR,IAAI,IAAIA,IAAI,CAACQ,QAAQ,IAAK;IACvC,CAAC;IACDQ,kBAAkB,EAAE,kCAId;MAAA,IAFMC,gBAAgB,QAD1BC,gBAAgB,CACdC,IAAI,CAAIF,gBAAgB;MAG1B,IAAMG,SAAS,GAAGxB,WAAW,CAACyB,SAAS,CAAC,UAAAb,QAAQ;QAAA,OAAIS,gBAAgB,CAACT,QAAQ,KAAKA,QAAQ;MAAA,EAAC;MAE3Fc,YAAY,CAACxB,cAAc,CAACmB,gBAAgB,CAACT,QAAQ,CAAC,CAAC;MAEvD,IAAIS,gBAAgB,CAACM,QAAQ,EAAE;QAC7B,IAAIH,SAAS,KAAK,CAAC,CAAC,EAAE;UACpBvB,cAAc,8BAAKD,WAAW,IAAEqB,gBAAgB,CAACT,QAAQ,GAAE;QAC7D;QAEAD,YAAY,CAACU,gBAAgB,CAACT,QAAQ,CAAC;MACzC,CAAC,MAAM,IAAIY,SAAS,KAAK,CAAC,CAAC,EAAE;QAC3BvB,cAAc,CAACD,WAAW,CAACgB,MAAM,CAAC,UAAAJ,QAAQ;UAAA,OAAIA,QAAQ,KAAKS,gBAAgB,CAACT,QAAQ;QAAA,EAAC,CAAC;MACxF;IACF;EACF,CAAC,CAAC;EAEF,IAAMgB,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAC5B,IAAMC,YAAY,GAAG7B,WAAW,CAAC8B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACvD,IAAMC,SAAS,GAAGhC,WAAW,CAACiC,MAAM,GAAG,CAAC,iBAAUjC,WAAW,CAACiC,MAAM,GAAG,CAAC,eAAY,EAAE;IAEtF,iBAAUJ,YAAY,cAAIG,SAAS;EACrC,CAAC;EAED,OACEhC,WAAW,CAACiC,MAAM,GAAG,CAAC,IACpB,MAAC,CAAC,CAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACV;IAAM,KAAK,EAAE;MAAEC,WAAW,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEN,eAAe,EAAE,CAAQ,EAC3D,MAAC,CAAC,CAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACZ,MAAC,CAAC,CAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACZ,MAAC,CAAC,CAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAEf;AAEL,CAAC"},"metadata":{},"sourceType":"module"}