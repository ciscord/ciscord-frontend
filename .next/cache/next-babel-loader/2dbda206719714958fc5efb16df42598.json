{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/UI/Checkbox/CommunityCheckbox/CommunityCheckbox.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport checkIcon from 'public/icons/check.svg';\nimport plusIcon from 'public/icons/plus.svg';\nimport * as S from './CommunityCheckbox.styled';\nexport default (function (_ref) {\n  var id = _ref.id,\n    checked = _ref.checked,\n    onClick = _ref.onClick;\n  return __jsx(S.Checkbox, {\n    className: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  }, __jsx(S.CheckboxInput, {\n    type: \"checkbox\",\n    id: \"checkbox-\".concat(id),\n    checked: checked,\n    readOnly: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }), __jsx(S.CheckboxLabel, {\n    checked: checked,\n    htmlFor: \"checkbox-\".concat(id),\n    label: \"Follow\",\n    onClick: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(S.PlusIcon, {\n    show: !checked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"use\", {\n    xlinkHref: \"\".concat(plusIcon, \"#icon-plus\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  })), __jsx(S.CheckIcon, {\n    show: checked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(\"use\", {\n    xlinkHref: \"\".concat(checkIcon, \"#icon-check\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }))));\n});","map":{"version":3,"names":["checkIcon","plusIcon","S","id","checked","onClick"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/UI/Checkbox/CommunityCheckbox/CommunityCheckbox.js"],"sourcesContent":["import checkIcon from 'public/icons/check.svg';\nimport plusIcon from 'public/icons/plus.svg';\n\nimport * as S from './CommunityCheckbox.styled';\n\nexport default ({ id, checked, onClick }) => (\n  <S.Checkbox className=\"checkbox\">\n    <S.CheckboxInput type=\"checkbox\" id={`checkbox-${id}`} checked={checked} readOnly />\n    <S.CheckboxLabel checked={checked} htmlFor={`checkbox-${id}`} label=\"Follow\" onClick={onClick}>\n      <S.PlusIcon show={!checked}>\n        <use xlinkHref={`${plusIcon}#icon-plus`} />\n      </S.PlusIcon>\n      <S.CheckIcon show={checked}>\n        <use xlinkHref={`${checkIcon}#icon-check`} />\n      </S.CheckIcon>\n    </S.CheckboxLabel>\n  </S.Checkbox>\n);\n"],"mappings":";;;;AAAA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,OAAO,KAAKC,CAAC,MAAM,4BAA4B;AAE/C,gBAAe;EAAA,IAAGC,EAAE,QAAFA,EAAE;IAAEC,OAAO,QAAPA,OAAO;IAAEC,OAAO,QAAPA,OAAO;EAAA,OACpC,MAAC,CAAC,CAAC,QAAQ;IAAC,SAAS,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9B,MAAC,CAAC,CAAC,aAAa;IAAC,IAAI,EAAC,UAAU;IAAC,EAAE,qBAAcF,EAAE,CAAG;IAAC,OAAO,EAAEC,OAAQ;IAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACpF,MAAC,CAAC,CAAC,aAAa;IAAC,OAAO,EAAEA,OAAQ;IAAC,OAAO,qBAAcD,EAAE,CAAG;IAAC,KAAK,EAAC,QAAQ;IAAC,OAAO,EAAEE,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5F,MAAC,CAAC,CAAC,QAAQ;IAAC,IAAI,EAAE,CAACD,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzB;IAAK,SAAS,YAAKH,QAAQ,eAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAChC,EACb,MAAC,CAAC,CAAC,SAAS;IAAC,IAAI,EAAEG,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzB;IAAK,SAAS,YAAKJ,SAAS,gBAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACjC,CACE,CACP;AAAA,CACd"},"metadata":{},"sourceType":"module"}