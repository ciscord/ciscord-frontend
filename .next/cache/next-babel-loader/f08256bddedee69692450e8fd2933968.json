{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/client';\nimport { COMPANY_NAME } from 'utils/config';\nimport { GET_CHANNELS, NEW_CHANNEL_MESSAGE_SUBSCRIPTION } from 'apis/Channel';\nimport Channel from './Channel/Channel';\nimport Placeholder from './Channels.placeholder';\nimport * as S from './Channels.styled';\nvar Channels = function Channels() {\n  var _useRouter = useRouter(),\n    communityUrl = _useRouter.query.community;\n  var _useQuery = useQuery(GET_CHANNELS, {\n      variables: {\n        communityUrl: communityUrl\n      }\n    }),\n    _useQuery$data = _useQuery.data,\n    _useQuery$data2 = _useQuery$data === void 0 ? {} : _useQuery$data,\n    _useQuery$data2$chann = _useQuery$data2.channels,\n    channels = _useQuery$data2$chann === void 0 ? [] : _useQuery$data2$chann,\n    loading = _useQuery.loading,\n    subscribeToMore = _useQuery.subscribeToMore;\n  useEffect(function () {\n    subscribeToMore({\n      document: NEW_CHANNEL_MESSAGE_SUBSCRIPTION,\n      variables: {\n        communityUrl: communityUrl,\n        tenant: COMPANY_NAME()\n      },\n      updateQuery: function updateQuery(prev, _ref) {\n        var subscriptionData = _ref.subscriptionData;\n        if (!subscriptionData.data) return prev;\n        var channelNewMessage = subscriptionData.data.channelNewMessage;\n        var index = prev.channels.findIndex(function (_ref2) {\n          var id = _ref2.id;\n          return id === channelNewMessage.id;\n        });\n        var channelsList = _toConsumableArray(prev.channels);\n        if (index === -1) {\n          channelsList.push(channelNewMessage);\n        } else {\n          channelsList[index] = channelNewMessage;\n        }\n        return _objectSpread({}, prev, {\n          channels: channelsList\n        });\n      }\n    });\n  }, []);\n  if (loading) {\n    return __jsx(Placeholder, null);\n  }\n  return __jsx(S.Channels, null, channels.map(function (channel, index) {\n    return __jsx(Channel, {\n      channel: channel,\n      key: channel.id,\n      index: index\n    }, \"#\".concat(channel.name));\n  }));\n};\nexport default Channels;","map":{"version":3,"names":["useEffect","useRouter","useQuery","COMPANY_NAME","GET_CHANNELS","NEW_CHANNEL_MESSAGE_SUBSCRIPTION","Channel","Placeholder","S","Channels","communityUrl","query","community","variables","data","channels","loading","subscribeToMore","document","tenant","updateQuery","prev","subscriptionData","channelNewMessage","index","findIndex","id","channelsList","push","map","channel","name"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Header/Channels/Channels.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/client';\n\nimport { COMPANY_NAME } from 'utils/config';\nimport { GET_CHANNELS, NEW_CHANNEL_MESSAGE_SUBSCRIPTION } from 'apis/Channel';\n\nimport Channel from './Channel/Channel';\nimport Placeholder from './Channels.placeholder';\nimport * as S from './Channels.styled';\n\nconst Channels = () => {\n  const {\n    query: { community: communityUrl },\n  } = useRouter();\n  const { data: { channels = [] } = {}, loading, subscribeToMore } = useQuery(GET_CHANNELS, {\n    variables: { communityUrl },\n  });\n\n  useEffect(() => {\n    subscribeToMore({\n      document: NEW_CHANNEL_MESSAGE_SUBSCRIPTION,\n      variables: { communityUrl, tenant: COMPANY_NAME() },\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n        const { channelNewMessage } = subscriptionData.data;\n        const index = prev.channels.findIndex(({ id }) => id === channelNewMessage.id);\n        const channelsList = [...prev.channels];\n        if (index === -1) {\n          channelsList.push(channelNewMessage);\n        } else {\n          channelsList[index] = channelNewMessage;\n        }\n        return {\n          ...prev,\n          channels: channelsList,\n        };\n      },\n    });\n  }, []);\n\n  if (loading) {\n    return <Placeholder />;\n  }\n\n  return (\n    <S.Channels>\n      {channels.map((channel, index) => (\n        <Channel channel={channel} key={channel.id} index={index}>\n          {`#${channel.name}`}\n        </Channel>\n      ))}\n    </S.Channels>\n  );\n};\n\nexport default Channels;\n"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,YAAY,EAAEC,gCAAgC,QAAQ,cAAc;AAE7E,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAO,KAAKC,CAAC,MAAM,mBAAmB;AAEtC,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,GAAS;EACrB,iBAEIR,SAAS,EAAE;IADOS,YAAY,cAAhCC,KAAK,CAAIC,SAAS;EAEpB,gBAAmEV,QAAQ,CAACE,YAAY,EAAE;MACxFS,SAAS,EAAE;QAAEH,YAAY,EAAZA;MAAa;IAC5B,CAAC,CAAC;IAAA,2BAFMI,IAAI;IAAA,8CAAsB,CAAC,CAAC;IAAA,wCAApBC,QAAQ;IAARA,QAAQ,sCAAG,EAAE;IAASC,OAAO,aAAPA,OAAO;IAAEC,eAAe,aAAfA,eAAe;EAI9DjB,SAAS,CAAC,YAAM;IACdiB,eAAe,CAAC;MACdC,QAAQ,EAAEb,gCAAgC;MAC1CQ,SAAS,EAAE;QAAEH,YAAY,EAAZA,YAAY;QAAES,MAAM,EAAEhB,YAAY;MAAG,CAAC;MACnDiB,WAAW,EAAE,qBAACC,IAAI,QAA2B;QAAA,IAAvBC,gBAAgB,QAAhBA,gBAAgB;QACpC,IAAI,CAACA,gBAAgB,CAACR,IAAI,EAAE,OAAOO,IAAI;QACvC,IAAQE,iBAAiB,GAAKD,gBAAgB,CAACR,IAAI,CAA3CS,iBAAiB;QACzB,IAAMC,KAAK,GAAGH,IAAI,CAACN,QAAQ,CAACU,SAAS,CAAC;UAAA,IAAGC,EAAE,SAAFA,EAAE;UAAA,OAAOA,EAAE,KAAKH,iBAAiB,CAACG,EAAE;QAAA,EAAC;QAC9E,IAAMC,YAAY,sBAAON,IAAI,CAACN,QAAQ,CAAC;QACvC,IAAIS,KAAK,KAAK,CAAC,CAAC,EAAE;UAChBG,YAAY,CAACC,IAAI,CAACL,iBAAiB,CAAC;QACtC,CAAC,MAAM;UACLI,YAAY,CAACH,KAAK,CAAC,GAAGD,iBAAiB;QACzC;QACA,yBACKF,IAAI;UACPN,QAAQ,EAAEY;QAAY;MAE1B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIX,OAAO,EAAE;IACX,OAAO,MAAC,WAAW,OAAG;EACxB;EAEA,OACE,MAAC,CAAC,CAAC,QAAQ,QACRD,QAAQ,CAACc,GAAG,CAAC,UAACC,OAAO,EAAEN,KAAK;IAAA,OAC3B,MAAC,OAAO;MAAC,OAAO,EAAEM,OAAQ;MAAC,GAAG,EAAEA,OAAO,CAACJ,EAAG;MAAC,KAAK,EAAEF;IAAM,cAClDM,OAAO,CAACC,IAAI,EACT;EAAA,CACX,CAAC,CACS;AAEjB,CAAC;AAED,eAAetB,QAAQ"},"metadata":{},"sourceType":"module"}