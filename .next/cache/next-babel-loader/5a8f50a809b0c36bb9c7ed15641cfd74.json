{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/Navbar/Tabs/Tabs.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/client';\nimport { useContext } from 'react';\nimport { AppContext } from 'context';\nimport { UserContext } from 'context/UserContext';\nimport { GET_COMMUNITIES } from 'apis/Community';\nimport Tab from './Tab/Tab';\nimport * as S from './Tabs.styled';\nvar Tabs = function Tabs() {\n  var _useContext = useContext(AppContext),\n    communitiesLoaded = _useContext.communitiesLoaded,\n    setCommunitiesLoaded = _useContext.setCommunitiesLoaded;\n  var _useContext2 = useContext(UserContext),\n    user = _useContext2.user;\n  var _useQuery = useQuery(GET_COMMUNITIES, {\n      onCompleted: function onCompleted() {\n        if (!communitiesLoaded) {\n          setCommunitiesLoaded(true);\n        }\n      }\n    }),\n    _useQuery$data = _useQuery.data,\n    _useQuery$data2 = _useQuery$data === void 0 ? {} : _useQuery$data,\n    _useQuery$data2$commu = _useQuery$data2.communities,\n    allCommunities = _useQuery$data2$commu === void 0 ? [] : _useQuery$data2$commu,\n    communitiesLoading = _useQuery.loading,\n    error = _useQuery.error;\n  if (error) {\n    error;\n  }\n  var _useRouter = useRouter(),\n    selectedCommunity = _useRouter.query.community;\n  var communities = user ? user.communitiesFollowed : allCommunities;\n  return __jsx(S.Tabs, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, communities.filter(function (community) {\n    return community.url !== 'direct';\n  }).map(function (community, index) {\n    var active = community.url === selectedCommunity;\n    var nextActive = index < communities.length - 1 ? communities[index + 1].url === selectedCommunity : false;\n    return __jsx(Tab, {\n      community: community,\n      active: active,\n      nextActive: nextActive,\n      index: index,\n      key: community.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    });\n  }));\n};\nexport default Tabs;","map":{"version":3,"names":["useRouter","useQuery","useContext","AppContext","UserContext","GET_COMMUNITIES","Tab","S","Tabs","communitiesLoaded","setCommunitiesLoaded","user","onCompleted","data","communities","allCommunities","communitiesLoading","loading","error","selectedCommunity","query","community","communitiesFollowed","filter","url","map","index","active","nextActive","length","id"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Navbar/Tabs/Tabs.js"],"sourcesContent":["import { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/client';\nimport { useContext } from 'react';\n\nimport { AppContext } from 'context';\nimport { UserContext } from 'context/UserContext';\nimport { GET_COMMUNITIES } from 'apis/Community';\n\nimport Tab from './Tab/Tab';\nimport * as S from './Tabs.styled';\n\nconst Tabs = () => {\n  const { communitiesLoaded, setCommunitiesLoaded } = useContext(AppContext);\n  const { user } = useContext(UserContext);\n\n  const { data: { communities: allCommunities = [] } = {}, loading: communitiesLoading, error } = useQuery(\n    GET_COMMUNITIES,\n    {\n      onCompleted: () => {\n        if (!communitiesLoaded) {\n          setCommunitiesLoaded(true);\n        }\n      },\n    }\n  );\n\n  if (error) {error}\n\n  const {\n    query: { community: selectedCommunity },\n  } = useRouter();\n\n  const communities = user ? user.communitiesFollowed : allCommunities;\n\n  return (\n    <S.Tabs>\n      {communities\n        .filter(community => community.url !== 'direct')\n        .map((community, index) => {\n          const active = community.url === selectedCommunity;\n          const nextActive =\n            index < communities.length - 1\n              ? communities[index + 1].url === selectedCommunity\n              : false;\n\n          return (\n            <Tab\n              community={community}\n              active={active}\n              nextActive={nextActive}\n              index={index}\n              key={community.id}\n            />\n          );\n        })}\n    </S.Tabs>\n  );\n};\n\nexport default Tabs;\n"],"mappings":";;;;AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,UAAU,QAAQ,OAAO;AAElC,SAASC,UAAU,QAAQ,SAAS;AACpC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,eAAe,QAAQ,gBAAgB;AAEhD,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAO,KAAKC,CAAC,MAAM,eAAe;AAElC,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAS;EACjB,kBAAoDN,UAAU,CAACC,UAAU,CAAC;IAAlEM,iBAAiB,eAAjBA,iBAAiB;IAAEC,oBAAoB,eAApBA,oBAAoB;EAC/C,mBAAiBR,UAAU,CAACE,WAAW,CAAC;IAAhCO,IAAI,gBAAJA,IAAI;EAEZ,gBAAgGV,QAAQ,CACtGI,eAAe,EACf;MACEO,WAAW,EAAE,uBAAM;QACjB,IAAI,CAACH,iBAAiB,EAAE;UACtBC,oBAAoB,CAAC,IAAI,CAAC;QAC5B;MACF;IACF,CAAC,CACF;IAAA,2BATOG,IAAI;IAAA,8CAAyC,CAAC,CAAC;IAAA,wCAAvCC,WAAW;IAAEC,cAAc,sCAAG,EAAE;IAAkBC,kBAAkB,aAA3BC,OAAO;IAAsBC,KAAK,aAALA,KAAK;EAW3F,IAAIA,KAAK,EAAE;IAACA,KAAK;EAAA;EAEjB,iBAEIlB,SAAS,EAAE;IADOmB,iBAAiB,cAArCC,KAAK,CAAIC,SAAS;EAGpB,IAAMP,WAAW,GAAGH,IAAI,GAAGA,IAAI,CAACW,mBAAmB,GAAGP,cAAc;EAEpE,OACE,MAAC,CAAC,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACJD,WAAW,CACTS,MAAM,CAAC,UAAAF,SAAS;IAAA,OAAIA,SAAS,CAACG,GAAG,KAAK,QAAQ;EAAA,EAAC,CAC/CC,GAAG,CAAC,UAACJ,SAAS,EAAEK,KAAK,EAAK;IACzB,IAAMC,MAAM,GAAGN,SAAS,CAACG,GAAG,KAAKL,iBAAiB;IAClD,IAAMS,UAAU,GACdF,KAAK,GAAGZ,WAAW,CAACe,MAAM,GAAG,CAAC,GAC1Bf,WAAW,CAACY,KAAK,GAAG,CAAC,CAAC,CAACF,GAAG,KAAKL,iBAAiB,GAChD,KAAK;IAEX,OACE,MAAC,GAAG;MACF,SAAS,EAAEE,SAAU;MACrB,MAAM,EAAEM,MAAO;MACf,UAAU,EAAEC,UAAW;MACvB,KAAK,EAAEF,KAAM;MACb,GAAG,EAAEL,SAAS,CAACS,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAClB;EAEN,CAAC,CAAC,CACG;AAEb,CAAC;AAED,eAAetB,IAAI"},"metadata":{},"sourceType":"module"}