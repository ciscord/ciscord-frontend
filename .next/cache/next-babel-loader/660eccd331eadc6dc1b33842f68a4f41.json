{"ast":null,"code":"var _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/UI/Checkbox/CommunityCheckbox/CommunityCheckbox.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport checkIcon from 'public/icons/check.svg';\nimport plusIcon from 'public/icons/plus.svg';\nimport * as S from './CommunityCheckbox.styled';\nexport default (({\n  id,\n  checked,\n  onClick\n}) => __jsx(S.Checkbox, {\n  className: \"checkbox\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, __jsx(S.CheckboxInput, {\n  type: \"checkbox\",\n  id: `checkbox-${id}`,\n  checked: checked,\n  readOnly: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}), __jsx(S.CheckboxLabel, {\n  checked: checked,\n  htmlFor: `checkbox-${id}`,\n  label: \"Follow\",\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, __jsx(S.PlusIcon, {\n  show: !checked,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }\n}, __jsx(\"use\", {\n  xlinkHref: `${plusIcon}#icon-plus`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }\n})), __jsx(S.CheckIcon, {\n  show: checked,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}, __jsx(\"use\", {\n  xlinkHref: `${checkIcon}#icon-check`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n})))));","map":{"version":3,"names":["checkIcon","plusIcon","S","id","checked","onClick"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/UI/Checkbox/CommunityCheckbox/CommunityCheckbox.js"],"sourcesContent":["import checkIcon from 'public/icons/check.svg';\nimport plusIcon from 'public/icons/plus.svg';\n\nimport * as S from './CommunityCheckbox.styled';\n\nexport default ({ id, checked, onClick }) => (\n  <S.Checkbox className=\"checkbox\">\n    <S.CheckboxInput type=\"checkbox\" id={`checkbox-${id}`} checked={checked} readOnly />\n    <S.CheckboxLabel checked={checked} htmlFor={`checkbox-${id}`} label=\"Follow\" onClick={onClick}>\n      <S.PlusIcon show={!checked}>\n        <use xlinkHref={`${plusIcon}#icon-plus`} />\n      </S.PlusIcon>\n      <S.CheckIcon show={checked}>\n        <use xlinkHref={`${checkIcon}#icon-check`} />\n      </S.CheckIcon>\n    </S.CheckboxLabel>\n  </S.Checkbox>\n);\n"],"mappings":";;;AAAA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,OAAO,KAAKC,CAAC,MAAM,4BAA4B;AAE/C,gBAAe,CAAC;EAAEC,EAAE;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KACtC,MAAC,CAAC,CAAC,QAAQ;EAAC,SAAS,EAAC,UAAU;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GAC9B,MAAC,CAAC,CAAC,aAAa;EAAC,IAAI,EAAC,UAAU;EAAC,EAAE,EAAG,YAAWF,EAAG,EAAE;EAAC,OAAO,EAAEC,OAAQ;EAAC,QAAQ;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAAG,EACpF,MAAC,CAAC,CAAC,aAAa;EAAC,OAAO,EAAEA,OAAQ;EAAC,OAAO,EAAG,YAAWD,EAAG,EAAE;EAAC,KAAK,EAAC,QAAQ;EAAC,OAAO,EAAEE,OAAQ;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GAC5F,MAAC,CAAC,CAAC,QAAQ;EAAC,IAAI,EAAE,CAACD,OAAQ;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACzB;EAAK,SAAS,EAAG,GAAEH,QAAS,YAAY;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAAG,CAChC,EACb,MAAC,CAAC,CAAC,SAAS;EAAC,IAAI,EAAEG,OAAQ;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACzB;EAAK,SAAS,EAAG,GAAEJ,SAAU,aAAa;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAAG,CACjC,CACE,CAErB"},"metadata":{},"sourceType":"module"}