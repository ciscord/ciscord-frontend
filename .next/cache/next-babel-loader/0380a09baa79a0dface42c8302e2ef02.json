{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { useContext, useState } from 'react';\nimport { UserContext } from 'context/UserContext';\nimport { useRouter } from 'next/router';\nimport { useMutation } from '@apollo/client';\nimport { useEscapeToClose } from 'hooks';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\nimport withAuth from 'utils/apollo/withAuth';\nimport { awsUrl } from 'utils/helper';\nimport { GET_COMMUNITIES, CREATE_COMMUNITY } from 'apis/Community';\nimport { UPLOAD_FILE } from 'apis/File';\nimport { COMPANY_NAME } from 'utils/config';\nimport { ButtonPrimary } from 'components/UI/Button/Button';\nimport { Input, FileInput } from 'components/UI/Input';\nimport { BackIcon } from 'components/UI/Icons';\nimport * as S from './CommunityCreate.styled';\nconst CreateCommunity = () => {\n  const {\n    0: communityImage,\n    1: setCommunityImage\n  } = useState(null);\n  const {\n    getMe\n  } = useContext(UserContext);\n  const [uploadFile] = useMutation(UPLOAD_FILE);\n  const [createCommunity] = useMutation(CREATE_COMMUNITY, {\n    update(cache, {\n      data: {\n        createCommunity: community\n      }\n    }) {\n      const {\n        communities\n      } = cache.readQuery({\n        query: GET_COMMUNITIES\n      });\n      cache.writeQuery({\n        query: GET_COMMUNITIES,\n        data: {\n          communities: communities.concat([community])\n        }\n      });\n    }\n  });\n  const router = useRouter();\n  useEscapeToClose(router.back);\n  const initialValues = {\n    name: '',\n    description: '',\n    image: '',\n    url: '',\n    isPrivate: false\n  };\n  const validationSchema = yup.object().shape({\n    name: yup.string().max(22, 'Must be shorter than 22 characters').matches(/^\\S+$/, 'Must contain no spaces').matches(/^[^.]+$/, 'Must contain no dots').required('Name is required')\n    // url: yup\n    //   .string()\n    //   .matches(/^([a-zA-Z0-9.-]+)$/, 'Must not contain special characters')\n    //   .required('Url is required'),\n    // image: yup.string().required('Image is required'),\n  });\n\n  const handleImageInput = async e => {\n    if (e.target.validity.valid) {\n      const file = e.target.files[0];\n      setCommunityImage(file);\n    }\n  };\n  const onSubmit = async (values, {\n    setSubmitting,\n    setErrors\n  }) => {\n    const url = `https://biznessapps.org/graphql/presign`;\n    const filename = uuid().slice(0, 8) + communityImage.name;\n    const params = new URLSearchParams({\n      key: filename\n    });\n    let resp = await fetch(url, {\n      method: \"POST\",\n      body: params\n    });\n    let presignResp = await resp.json();\n    resp = await fetch(presignResp.url, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": communityImage.type\n      },\n      body: communityImage\n    });\n    const {\n      data\n    } = await createCommunity({\n      variables: _objectSpread({}, values, {\n        url,\n        image: `https://shantsai.s3.amazonaws.com/${filename}`\n      }),\n      errorPolicy: 'all'\n    });\n    setSubmitting(false);\n    if (!data) {\n      setErrors({\n        name: 'Community with this name or url already exists'\n      });\n    } else {\n      await getMe();\n      const {\n        createCommunity: {\n          url: communityUrl\n        }\n      } = data;\n      router.push(`/[company]/[community]/[channel]`, `/${COMPANY_NAME()}/${communityUrl}/general`, {\n        shallow: true\n      });\n    }\n  };\n  return __jsx(S.Container, null, __jsx(S.Header, null, __jsx(S.Title, null, __jsx(BackIcon, {\n    onClick: () => router.back()\n  }), __jsx(\"span\", {\n    style: {\n      marginTop: 3\n    }\n  }, \"Create community\"))), __jsx(S.Body, null, __jsx(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    validateOnChange: false\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, null, __jsx(Field, {\n    type: \"file\",\n    name: \"image\",\n    accept: \"image/*\",\n    label: \"Choose an avatar\",\n    tip: \"You can choose or create your own avatar 320x320 px\",\n    onChange: handleImageInput,\n    component: FileInput\n  }), __jsx(Field, {\n    type: \"text\",\n    name: \"name\",\n    label: \"Name\",\n    tip: \"Names must be without spaces or periods and shorter than 22 characters.\",\n    placeholder: \"Blogging\",\n    component: Input,\n    autoFocus: true\n  }), __jsx(Field, {\n    type: \"text\",\n    name: \"description\",\n    label: \"Description\",\n    tip: \"What\\u2019s this community about?\",\n    placeholder: \"Why UX and UI should remain separate\",\n    component: Input\n  }), __jsx(ButtonPrimary, {\n    type: \"submit\",\n    name: \"button\",\n    disabled: isSubmitting,\n    style: {\n      position: 'absolute',\n      right: 22,\n      marginTop: 12,\n      marginBottom: 16\n    }\n  }, \"Create\")))));\n};\nexport default withAuth(CreateCommunity);","map":{"version":3,"names":["useContext","useState","UserContext","useRouter","useMutation","useEscapeToClose","Formik","Form","Field","yup","withAuth","awsUrl","GET_COMMUNITIES","CREATE_COMMUNITY","UPLOAD_FILE","COMPANY_NAME","ButtonPrimary","Input","FileInput","BackIcon","S","CreateCommunity","communityImage","setCommunityImage","getMe","uploadFile","createCommunity","update","cache","data","community","communities","readQuery","query","writeQuery","concat","router","back","initialValues","name","description","image","url","isPrivate","validationSchema","object","shape","string","max","matches","required","handleImageInput","e","target","validity","valid","file","files","onSubmit","values","setSubmitting","setErrors","filename","uuid","slice","params","URLSearchParams","key","resp","fetch","method","body","presignResp","json","headers","type","variables","errorPolicy","communityUrl","push","shallow","marginTop","isSubmitting","position","right","marginBottom"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Communities/CommunityCreate/CommunityCreate.js"],"sourcesContent":["import { useContext, useState } from 'react';\nimport { UserContext } from 'context/UserContext';\nimport { useRouter } from 'next/router';\nimport { useMutation } from '@apollo/client';\nimport { useEscapeToClose } from 'hooks';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\n\nimport withAuth from 'utils/apollo/withAuth';\nimport { awsUrl } from 'utils/helper';\nimport { GET_COMMUNITIES, CREATE_COMMUNITY } from 'apis/Community';\nimport { UPLOAD_FILE } from 'apis/File';\nimport { COMPANY_NAME } from 'utils/config';\n\nimport { ButtonPrimary } from 'components/UI/Button/Button';\nimport { Input, FileInput } from 'components/UI/Input';\nimport { BackIcon } from 'components/UI/Icons';\n\nimport * as S from './CommunityCreate.styled';\n\nconst CreateCommunity = () => {\n  const [communityImage, setCommunityImage] = useState(null);\n  const { getMe } = useContext(UserContext);\n  const [uploadFile] = useMutation(UPLOAD_FILE);\n  const [createCommunity] = useMutation(CREATE_COMMUNITY, {\n    update(cache, { data: { createCommunity: community } }) {\n      const { communities } = cache.readQuery({ query: GET_COMMUNITIES });\n      cache.writeQuery({\n        query: GET_COMMUNITIES,\n        data: { communities: communities.concat([community]) },\n      });\n    },\n  });\n\n  const router = useRouter();\n  useEscapeToClose(router.back);\n\n  const initialValues = {\n    name: '',\n    description: '',\n    image: '',\n    url: '',\n    isPrivate: false,\n  };\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .max(22, 'Must be shorter than 22 characters')\n      .matches(/^\\S+$/, 'Must contain no spaces')\n      .matches(/^[^.]+$/, 'Must contain no dots')\n      .required('Name is required'),\n    // url: yup\n    //   .string()\n    //   .matches(/^([a-zA-Z0-9.-]+)$/, 'Must not contain special characters')\n    //   .required('Url is required'),\n    // image: yup.string().required('Image is required'),\n  });\n\n  const handleImageInput = async e => {\n    if (e.target.validity.valid) {\n      const file = e.target.files[0];\n\n      setCommunityImage(file);\n    }\n  };\n\n  const onSubmit = async (values, { setSubmitting, setErrors }) => {\n\n    const url = `https://biznessapps.org/graphql/presign`;\n    const filename = uuid().slice(0, 8) + communityImage.name;\n    const params = new URLSearchParams({\n      key: filename,\n    });\n    let resp = await fetch(url, {\n      method: \"POST\",\n      body: params,\n    });\n    let presignResp = await resp.json();\n\n    resp = await fetch(presignResp.url, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": communityImage.type,\n      },\n      body: communityImage,\n    });\n\n    const { data } = await createCommunity({\n      variables: {\n        ...values,\n        url,\n        image: `https://shantsai.s3.amazonaws.com/${filename}`,\n      },\n      errorPolicy: 'all',\n    });\n\n    setSubmitting(false);\n    if (!data) {\n      setErrors({ name: 'Community with this name or url already exists' });\n    } else {\n      await getMe();\n      const {\n        createCommunity: { url: communityUrl },\n      } = data;\n      router.push(\n        `/[company]/[community]/[channel]`,\n        `/${COMPANY_NAME()}/${communityUrl}/general`,\n        { shallow: true }\n      );\n    }\n  };\n\n  return (\n    <S.Container>\n      <S.Header>\n        <S.Title>\n          <BackIcon onClick={() => router.back()} />\n          <span style={{ marginTop: 3 }}>Create community</span>\n        </S.Title>\n      </S.Header>\n      <S.Body>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n          validateOnChange={false}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Field\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/*\"\n                label=\"Choose an avatar\"\n                tip=\"You can choose or create your own avatar 320x320 px\"\n                onChange={handleImageInput}\n                component={FileInput}\n              />\n              <Field\n                type=\"text\"\n                name=\"name\"\n                label=\"Name\"\n                tip=\"Names must be without spaces or periods and shorter than 22 characters.\"\n                placeholder=\"Blogging\"\n                component={Input}\n                autoFocus\n              />\n              <Field\n                type=\"text\"\n                name=\"description\"\n                label=\"Description\"\n                tip=\"What’s this community about?\"\n                placeholder=\"Why UX and UI should remain separate\"\n                component={Input}\n              />\n              {/*\n              <Field\n                type=\"text\"\n                name=\"url\"\n                label=\"Workspace URL\"\n                placeholder=\"community\"\n                component={Input}\n                validate={() => {}}\n              />\n              */}\n              <ButtonPrimary\n                type=\"submit\"\n                name=\"button\"\n                disabled={isSubmitting}\n                style={{\n                  position: 'absolute',\n                  right: 22,\n                  marginTop: 12,\n                  marginBottom: 16,\n                }}\n              >\n                Create\n              </ButtonPrimary>\n            </Form>\n          )}\n        </Formik>\n      </S.Body>\n    </S.Container>\n  );\n};\n\nexport default withAuth(CreateCommunity);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}