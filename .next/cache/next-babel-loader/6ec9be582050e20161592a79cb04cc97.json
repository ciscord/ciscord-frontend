{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useState, useCallback } from 'react';\nimport { useWindowDimensions } from 'hooks';\nimport { PortalWithState } from 'react-portal';\nimport { useMutation } from '@apollo/client';\nimport { TOGGLE_REACTION } from 'apis/Message';\nimport EmojiPicker from 'components/UI/EmojiPicker/EmojiPicker';\nimport Tooltip from 'components/UI/Tooltip';\nimport emojiIcon from 'public/icons/smile.svg';\nimport { Action, TooltipWrapper } from '../MessageActions.styled';\nimport * as S from './ReactionAction.styled';\nvar emojiPositionThreshold = 500;\nexport default (function (_ref) {\n  var checkPosition = _ref.checkPosition,\n    messageId = _ref.messageId,\n    setShow = _ref.setShow;\n  var ref = useRef(null);\n  var windowSize = useWindowDimensions();\n  var _useMutation = useMutation(TOGGLE_REACTION),\n    _useMutation2 = _slicedToArray(_useMutation, 1),\n    toggleReaction = _useMutation2[0];\n  var onEmojiClick = function onEmojiClick(emoji) {\n    toggleReaction({\n      variables: {\n        name: emoji.colons,\n        messageId: messageId\n      }\n    });\n  };\n  var getPosition = useCallback(function () {\n    var _ref$current$getBound = ref.current.getBoundingClientRect(),\n      y = _ref$current$getBound.y,\n      x = _ref$current$getBound.x;\n    if (windowSize.height < y + 350) {\n      return {\n        x: windowSize.width - x,\n        y: windowSize.height - y + 10,\n        position: 't'\n      };\n    }\n    return {\n      x: windowSize.width - x,\n      y: y + 35,\n      position: 'b'\n    };\n  }, []);\n  return __jsx(PortalWithState, {\n    closeOnOutsideClick: true,\n    closeOnEsc: true,\n    node: document && document.getElementById('ReactModalPortal')\n  }, function (_ref2) {\n    var openPortal = _ref2.openPortal,\n      closePortal = _ref2.closePortal,\n      portal = _ref2.portal;\n    return __jsx(React.Fragment, null, __jsx(Action, {\n      \"aria-label\": \"Emoji\",\n      type: \"button\",\n      name: \"button\",\n      onClick: openPortal,\n      style: {\n        padding: 0\n      }\n    }, __jsx(S.ReactionIcon, {\n      ref: ref\n    }, __jsx(\"use\", {\n      xlinkHref: \"\".concat(emojiIcon, \"#icon-smile\")\n    })), __jsx(TooltipWrapper, null, __jsx(Tooltip, null, \"React\"))), portal(__jsx(EmojiPicker, {\n      getPosition: getPosition,\n      close: function close() {\n        closePortal();\n        setShow(false);\n      },\n      onSelect: onEmojiClick\n    })));\n  });\n});","map":{"version":3,"names":["useRef","useState","useCallback","useWindowDimensions","PortalWithState","useMutation","TOGGLE_REACTION","EmojiPicker","Tooltip","emojiIcon","Action","TooltipWrapper","S","emojiPositionThreshold","checkPosition","messageId","setShow","ref","windowSize","toggleReaction","onEmojiClick","emoji","variables","name","colons","getPosition","current","getBoundingClientRect","y","x","height","width","position","document","getElementById","openPortal","closePortal","portal","padding"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Message/Actions/Reaction/ReactionAction.js"],"sourcesContent":["import { useRef, useState, useCallback } from 'react';\nimport { useWindowDimensions } from 'hooks';\nimport { PortalWithState } from 'react-portal';\nimport { useMutation } from '@apollo/client';\nimport { TOGGLE_REACTION } from 'apis/Message';\n\nimport EmojiPicker from 'components/UI/EmojiPicker/EmojiPicker';\nimport Tooltip from 'components/UI/Tooltip';\n\nimport emojiIcon from 'public/icons/smile.svg';\nimport { Action, TooltipWrapper } from '../MessageActions.styled';\nimport * as S from './ReactionAction.styled';\n\nconst emojiPositionThreshold = 500;\n\nexport default ({ checkPosition, messageId, setShow }) => {\n  const ref = useRef(null);\n  const windowSize = useWindowDimensions();\n\n  const [toggleReaction] = useMutation(TOGGLE_REACTION);\n\n  const onEmojiClick = emoji => {\n    toggleReaction({\n      variables: {\n        name: emoji.colons,\n        messageId,\n      },\n    });\n  };\n\n  const getPosition = useCallback(() => {\n    const { y, x } = ref.current.getBoundingClientRect();\n\n    if (windowSize.height < y + 350) {\n      return { x: windowSize.width - x, y: windowSize.height - y + 10, position: 't' };\n    }\n    return { x: windowSize.width - x, y: y + 35, position: 'b' };\n  }, []);\n\n  return (\n    <PortalWithState\n      closeOnOutsideClick\n      closeOnEsc\n      node={document && document.getElementById('ReactModalPortal')}\n    >\n      {({ openPortal, closePortal, portal }) => (\n        <>\n          <Action\n            aria-label=\"Emoji\"\n            type=\"button\"\n            name=\"button\"\n            onClick={openPortal}\n            style={{ padding: 0 }}\n          >\n            <S.ReactionIcon ref={ref}>\n              <use xlinkHref={`${emojiIcon}#icon-smile`} />\n            </S.ReactionIcon>\n            <TooltipWrapper>\n              <Tooltip>React</Tooltip>\n            </TooltipWrapper>\n          </Action>\n          {portal(\n            <EmojiPicker\n              getPosition={getPosition}\n              close={() => {\n                closePortal();\n                setShow(false);\n              }}\n              onSelect={onEmojiClick}\n            />\n          )}\n        </>\n      )}\n    </PortalWithState>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACrD,SAASC,mBAAmB,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,cAAc;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,eAAe,QAAQ,cAAc;AAE9C,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,OAAOC,OAAO,MAAM,uBAAuB;AAE3C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,MAAM,EAAEC,cAAc,QAAQ,0BAA0B;AACjE,OAAO,KAAKC,CAAC,MAAM,yBAAyB;AAE5C,IAAMC,sBAAsB,GAAG,GAAG;AAElC,gBAAe,gBAA2C;EAAA,IAAxCC,aAAa,QAAbA,aAAa;IAAEC,SAAS,QAATA,SAAS;IAAEC,OAAO,QAAPA,OAAO;EACjD,IAAMC,GAAG,GAAGjB,MAAM,CAAC,IAAI,CAAC;EACxB,IAAMkB,UAAU,GAAGf,mBAAmB,EAAE;EAExC,mBAAyBE,WAAW,CAACC,eAAe,CAAC;IAAA;IAA9Ca,cAAc;EAErB,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAGC,KAAK,EAAI;IAC5BF,cAAc,CAAC;MACbG,SAAS,EAAE;QACTC,IAAI,EAAEF,KAAK,CAACG,MAAM;QAClBT,SAAS,EAATA;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EAED,IAAMU,WAAW,GAAGvB,WAAW,CAAC,YAAM;IACpC,4BAAiBe,GAAG,CAACS,OAAO,CAACC,qBAAqB,EAAE;MAA5CC,CAAC,yBAADA,CAAC;MAAEC,CAAC,yBAADA,CAAC;IAEZ,IAAIX,UAAU,CAACY,MAAM,GAAGF,CAAC,GAAG,GAAG,EAAE;MAC/B,OAAO;QAAEC,CAAC,EAAEX,UAAU,CAACa,KAAK,GAAGF,CAAC;QAAED,CAAC,EAAEV,UAAU,CAACY,MAAM,GAAGF,CAAC,GAAG,EAAE;QAAEI,QAAQ,EAAE;MAAI,CAAC;IAClF;IACA,OAAO;MAAEH,CAAC,EAAEX,UAAU,CAACa,KAAK,GAAGF,CAAC;MAAED,CAAC,EAAEA,CAAC,GAAG,EAAE;MAAEI,QAAQ,EAAE;IAAI,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC;EAEN,OACE,MAAC,eAAe;IACd,mBAAmB;IACnB,UAAU;IACV,IAAI,EAAEC,QAAQ,IAAIA,QAAQ,CAACC,cAAc,CAAC,kBAAkB;EAAE,GAE7D;IAAA,IAAGC,UAAU,SAAVA,UAAU;MAAEC,WAAW,SAAXA,WAAW;MAAEC,MAAM,SAANA,MAAM;IAAA,OACjC,4BACE,MAAC,MAAM;MACL,cAAW,OAAO;MAClB,IAAI,EAAC,QAAQ;MACb,IAAI,EAAC,QAAQ;MACb,OAAO,EAAEF,UAAW;MACpB,KAAK,EAAE;QAAEG,OAAO,EAAE;MAAE;IAAE,GAEtB,MAAC,CAAC,CAAC,YAAY;MAAC,GAAG,EAAErB;IAAI,GACvB;MAAK,SAAS,YAAKR,SAAS;IAAc,EAAG,CAC9B,EACjB,MAAC,cAAc,QACb,MAAC,OAAO,gBAAgB,CACT,CACV,EACR4B,MAAM,CACL,MAAC,WAAW;MACV,WAAW,EAAEZ,WAAY;MACzB,KAAK,EAAE,iBAAM;QACXW,WAAW,EAAE;QACbpB,OAAO,CAAC,KAAK,CAAC;MAChB,CAAE;MACF,QAAQ,EAAEI;IAAa,EACvB,CACH,CACA;EAAA,CACJ,CACe;AAEtB,CAAC"},"metadata":{},"sourceType":"module"}