{"ast":null,"code":"import _Object$setPrototypeOf from \"@babel/runtime-corejs2/core-js/object/set-prototype-of\";\nimport _Object$getPrototypeOf from \"@babel/runtime-corejs2/core-js/object/get-prototype-of\";\nimport _Object$create from \"@babel/runtime-corejs2/core-js/object/create\";\nimport _Symbol from \"@babel/runtime-corejs2/core-js/symbol\";\nimport _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = _Object$defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof _Symbol ? _Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return _Object$defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = _Object$create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = _Object$getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = _Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState, useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useMutation, useLazyQuery } from '@apollo/client';\nimport { useKeyboardShortcut } from 'hooks';\nimport { UserContext } from 'context/UserContext';\nimport { COMPANY_NAME } from 'utils/config';\nimport { GET_UNREAD_NOTIFICATIONS, NOTIFICATIONS_SUBSCRIPTION, MARK_NOTIFICATIONS_AS_READ } from 'apis/Notification';\nimport { NotificationsIcon, ProfileIcon, CloseIcon, MessageIcon } from 'components/UI/Icons';\nimport Badge from 'components/UI/Badge';\nimport Tabs from './Tabs/Tabs';\nimport NotificationsPopup from './Notifications';\nimport MorePopup from './More';\nimport NavbarPlaceholder from './Navbar.placeholder';\nimport * as S from './Navbar.styled';\nvar Navbar = function Navbar() {\n  var _useState = useState(false),\n    subscribed = _useState[0],\n    setSubscribed = _useState[1];\n  var _useContext = useContext(UserContext),\n    user = _useContext.user,\n    userLoading = _useContext.loading;\n  var _useState2 = useState(false),\n    showNotifications = _useState2[0],\n    setShowNotifications = _useState2[1];\n  var _useState3 = useState(false),\n    showMore = _useState3[0],\n    setShowMore = _useState3[1];\n  var router = useRouter();\n  var _useMutation = useMutation(MARK_NOTIFICATIONS_AS_READ),\n    _useMutation2 = _slicedToArray(_useMutation, 1),\n    markNotificationsAsRead = _useMutation2[0];\n  var _useLazyQuery = useLazyQuery(GET_UNREAD_NOTIFICATIONS, {\n      fetchPolicy: 'cache-and-network'\n    }),\n    _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n    getUnreadNotification = _useLazyQuery2[0],\n    _useLazyQuery2$ = _useLazyQuery2[1],\n    _useLazyQuery2$$data = _useLazyQuery2$.data,\n    _useLazyQuery2$$data2 = _useLazyQuery2$$data === void 0 ? {} : _useLazyQuery2$$data,\n    _useLazyQuery2$$data3 = _useLazyQuery2$$data2.unreadNotifications,\n    unreadNotifications = _useLazyQuery2$$data3 === void 0 ? [] : _useLazyQuery2$$data3,\n    subscribeToMore = _useLazyQuery2$.subscribeToMore,\n    refetch = _useLazyQuery2$.refetch;\n  useKeyboardShortcut({\n    B: function B() {\n      return router.push(\"/[company]/communities\", \"/\".concat(COMPANY_NAME(), \"/communities\"), {\n        shallow: true\n      });\n    }\n  });\n  useEffect(function () {\n    getUnreadNotification();\n  }, []);\n  useEffect(function () {\n    if (user && subscribeToMore && !subscribed) {\n      setSubscribed(true);\n      subscribeToMore({\n        document: NOTIFICATIONS_SUBSCRIPTION,\n        variables: {\n          receiverId: user.id,\n          tenant: COMPANY_NAME()\n        },\n        updateQuery: function updateQuery(prev, _ref) {\n          var subscriptionData = _ref.subscriptionData;\n          if (!subscriptionData.data) return prev;\n          var newNotification = subscriptionData.data.newNotification;\n          // NotificationSound.play();\n          if (prev.unreadNotifications.filter(function (e) {\n            return e.id === newNotification.id;\n          }).length === 0) {\n            return _objectSpread({}, prev, {\n              unreadNotifications: [newNotification].concat(_toConsumableArray(prev.unreadNotifications))\n            });\n          }\n          return prev;\n        }\n      });\n    }\n  }, [user, subscribeToMore]);\n  if (userLoading) {\n    return __jsx(NavbarPlaceholder, null);\n  }\n  var checkUnread = function checkUnread() {\n    return _regeneratorRuntime().async(function checkUnread$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime().awrap(refetch());\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, _Promise);\n  };\n  var onDirectChat = function onDirectChat() {\n    return _regeneratorRuntime().async(function onDirectChat$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime().awrap(markNotificationsAsRead({\n            variables: {\n              type: 'direct'\n            }\n          }));\n        case 2:\n          _context2.next = 4;\n          return _regeneratorRuntime().awrap(refetch());\n        case 4:\n          router.push(\"/[company]/direct\", \"/\".concat(COMPANY_NAME(), \"/direct\"), {\n            shallow: true\n          });\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, null, null, null, _Promise);\n  };\n  var unreadNotificationsCount = unreadNotifications.filter(function (e) {\n    return e.type === 'mention';\n  }).length;\n  var unreadDirectCount = unreadNotifications.filter(function (e) {\n    return e.type === 'direct';\n  }).length;\n  return __jsx(React.Fragment, null, __jsx(S.NavbarContainer, null, __jsx(S.IconsWrapper, null, __jsx(S.Icons, null, __jsx(S.IconBox, null, __jsx(MessageIcon, {\n    onClick: function onClick() {\n      return onDirectChat();\n    },\n    active: unreadDirectCount > 0\n  })), __jsx(S.IconBox, {\n    second: true\n  }, unreadNotificationsCount > 0 ? __jsx(Badge, {\n    id: \"vs-icon-notifications\",\n    count: unreadNotificationsCount,\n    onClick: function onClick() {\n      return setShowNotifications(!showNotifications);\n    }\n  }) : __jsx(NotificationsIcon, {\n    id: \"vs-icon-notifications\",\n    active: showNotifications,\n    onClick: function onClick() {\n      return setShowNotifications(!showNotifications);\n    }\n  })), __jsx(S.IconBox, {\n    last: true\n  }, __jsx(ProfileIcon, {\n    onClick: function onClick() {\n      return setShowMore(!showMore);\n    },\n    active: showMore\n  })))), __jsx(Tabs, null), __jsx(S.AddCommunity, {\n    onClick: function onClick() {\n      return router.push(\"/[company]/communities\", \"/\".concat(COMPANY_NAME(), \"/communities\"), {\n        shallow: true\n      });\n    }\n  }), __jsx(CloseIcon, {\n    id: \"vs-close-widget\",\n    onClick: function onClick() {\n      return window.parent.postMessage({\n        message: 'close-widget'\n      }, '*');\n    }\n  })), showMore && __jsx(MorePopup, {\n    opened: showMore,\n    close: function close() {\n      return setShowMore(false);\n    }\n  }), __jsx(NotificationsPopup, {\n    opened: showNotifications,\n    close: function close() {\n      return setShowNotifications(false);\n    },\n    onMarkAsRead: checkUnread\n  }));\n};\nexport default Navbar;","map":{"version":3,"names":["useState","useContext","useEffect","useRouter","useMutation","useLazyQuery","useKeyboardShortcut","UserContext","COMPANY_NAME","GET_UNREAD_NOTIFICATIONS","NOTIFICATIONS_SUBSCRIPTION","MARK_NOTIFICATIONS_AS_READ","NotificationsIcon","ProfileIcon","CloseIcon","MessageIcon","Badge","Tabs","NotificationsPopup","MorePopup","NavbarPlaceholder","S","Navbar","subscribed","setSubscribed","user","userLoading","loading","showNotifications","setShowNotifications","showMore","setShowMore","router","markNotificationsAsRead","fetchPolicy","getUnreadNotification","data","unreadNotifications","subscribeToMore","refetch","B","push","shallow","document","variables","receiverId","id","tenant","updateQuery","prev","subscriptionData","newNotification","filter","e","length","checkUnread","onDirectChat","type","unreadNotificationsCount","unreadDirectCount","window","parent","postMessage","message"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Navbar/Navbar.js"],"sourcesContent":["import { useState, useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useMutation, useLazyQuery } from '@apollo/client';\nimport { useKeyboardShortcut } from 'hooks';\n\nimport { UserContext } from 'context/UserContext';\nimport { COMPANY_NAME } from 'utils/config';\nimport {\n  GET_UNREAD_NOTIFICATIONS,\n  NOTIFICATIONS_SUBSCRIPTION,\n  MARK_NOTIFICATIONS_AS_READ,\n} from 'apis/Notification';\n\nimport { NotificationsIcon, ProfileIcon, CloseIcon, MessageIcon } from 'components/UI/Icons';\nimport Badge from 'components/UI/Badge';\nimport Tabs from './Tabs/Tabs';\nimport NotificationsPopup from './Notifications';\nimport MorePopup from './More';\n\nimport NavbarPlaceholder from './Navbar.placeholder';\nimport * as S from './Navbar.styled';\n\nconst Navbar = () => {\n  const [subscribed, setSubscribed] = useState(false);\n\n  const { user, loading: userLoading } = useContext(UserContext);\n\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [showMore, setShowMore] = useState(false);\n\n  const router = useRouter();\n\n  const [markNotificationsAsRead] = useMutation(MARK_NOTIFICATIONS_AS_READ);\n\n  const [\n    getUnreadNotification,\n    {\n      data: { unreadNotifications = [] } = {},\n      // loading: unreadNotificationsLoading,\n      subscribeToMore,\n      refetch,\n    },\n  ] = useLazyQuery(GET_UNREAD_NOTIFICATIONS, { fetchPolicy: 'cache-and-network' });\n\n  useKeyboardShortcut({\n    B: () =>\n      router.push(`/[company]/communities`, `/${COMPANY_NAME()}/communities`, {\n        shallow: true,\n      }),\n  });\n\n  useEffect(() => {\n    getUnreadNotification();\n  }, []);\n  useEffect(() => {\n    if (user && subscribeToMore && !subscribed) {\n      setSubscribed(true);\n      subscribeToMore({\n        document: NOTIFICATIONS_SUBSCRIPTION,\n        variables: { receiverId: user.id, tenant: COMPANY_NAME() },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const { newNotification } = subscriptionData.data;\n          // NotificationSound.play();\n          if (prev.unreadNotifications.filter(e => e.id === newNotification.id).length === 0) {\n            return {\n              ...prev,\n              unreadNotifications: [newNotification, ...prev.unreadNotifications],\n            };\n          }\n          return prev;\n        },\n      });\n    }\n  }, [user, subscribeToMore]);\n\n  if (userLoading) {\n    return <NavbarPlaceholder />;\n  }\n\n  const checkUnread = async () => {\n    await refetch();\n  };\n\n  const onDirectChat = async () => {\n    await markNotificationsAsRead({ variables: { type: 'direct' } });\n    await refetch();\n    router.push(`/[company]/direct`, `/${COMPANY_NAME()}/direct`, {\n      shallow: true,\n    });\n  };\n\n  const unreadNotificationsCount = unreadNotifications.filter(e => e.type === 'mention').length;\n  const unreadDirectCount = unreadNotifications.filter(e => e.type === 'direct').length;\n\n  return (\n    <>\n      <S.NavbarContainer>\n        <S.IconsWrapper>\n          <S.Icons>\n            <S.IconBox>\n              <MessageIcon onClick={() => onDirectChat()} active={unreadDirectCount > 0} />\n            </S.IconBox>\n            <S.IconBox second>\n              {unreadNotificationsCount > 0 ? (\n                <Badge\n                  id=\"vs-icon-notifications\"\n                  count={unreadNotificationsCount}\n                  onClick={() => setShowNotifications(!showNotifications)}\n                />\n              ) : (\n                <NotificationsIcon\n                  id=\"vs-icon-notifications\"\n                  active={showNotifications}\n                  onClick={() => setShowNotifications(!showNotifications)}\n                />\n              )}\n            </S.IconBox>\n            <S.IconBox last>\n              <ProfileIcon onClick={() => setShowMore(!showMore)} active={showMore} />\n            </S.IconBox>\n          </S.Icons>\n        </S.IconsWrapper>\n\n        <Tabs />\n\n        <S.AddCommunity\n          onClick={() =>\n            router.push(`/[company]/communities`, `/${COMPANY_NAME()}/communities`, {\n              shallow: true,\n            })\n          }\n        />\n        <CloseIcon\n          id=\"vs-close-widget\"\n          onClick={() => window.parent.postMessage({ message: 'close-widget' }, '*')}\n        />\n      </S.NavbarContainer>\n      {showMore && <MorePopup opened={showMore} close={() => setShowMore(false)} />}\n      <NotificationsPopup\n        opened={showNotifications}\n        close={() => setShowNotifications(false)}\n        onMarkAsRead={checkUnread}\n      />\n    </>\n  );\n};\n\nexport default Navbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}