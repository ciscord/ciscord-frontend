{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Header/ChatHeader.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useLazyQuery } from '@apollo/client';\nimport { useKeyboardShortcut } from 'hooks';\nimport { UserContext } from 'context/UserContext';\nimport { AppContext } from 'context';\nimport { COMPANY_NAME } from 'utils/config';\nimport { GET_CHANNEL } from 'apis/Channel';\nimport Topic from './Topic/Topic';\nimport Search from './Search/Search';\nimport More from './More';\nimport Members from './Members';\nimport Channels from './Channels/Channels';\nimport ChatHeaderDirect from './ChatHeaderDirect';\nimport ChatHeaderPlaceholder from './ChatHeader.placeholder';\nimport * as S from './ChatHeader.styled';\nvar ChatHeader = function ChatHeader() {\n  var _useRouter = useRouter(),\n    _useRouter$query = _useRouter.query,\n    communityUrl = _useRouter$query.community,\n    channelUrl = _useRouter$query.channel,\n    push = _useRouter.push;\n  var _useContext = useContext(UserContext),\n    user = _useContext.user;\n  var _useContext2 = useContext(AppContext),\n    channelLoaded = _useContext2.channelLoaded,\n    setChannelLoaded = _useContext2.setChannelLoaded;\n  var _useLazyQuery = useLazyQuery(GET_CHANNEL, {\n      onCompleted: function onCompleted() {\n        if (!channelLoaded) {\n          setChannelLoaded(true);\n        }\n      }\n    }),\n    _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n    getChannel = _useLazyQuery2[0],\n    _useLazyQuery2$ = _useLazyQuery2[1],\n    _useLazyQuery2$$data = _useLazyQuery2$.data,\n    _useLazyQuery2$$data2 = _useLazyQuery2$$data === void 0 ? {} : _useLazyQuery2$$data,\n    _useLazyQuery2$$data3 = _useLazyQuery2$$data2.channel,\n    channel = _useLazyQuery2$$data3 === void 0 ? {\n      community: {\n        members: []\n      }\n    } : _useLazyQuery2$$data3,\n    loading = _useLazyQuery2$.loading;\n  useEffect(function () {\n    getChannel({\n      variables: {\n        url: \"\".concat(communityUrl, \"/\").concat(channelUrl)\n      }\n    });\n  }, [communityUrl, channelUrl]);\n  useKeyboardShortcut({\n    N: function N() {\n      return push(\"/[company]/[community]/new-channel\", \"/\".concat(COMPANY_NAME(), \"/\").concat(communityUrl, \"/new-channel\"), {\n        shallow: true\n      });\n    }\n  });\n  var onChangeTopic = function onChangeTopic() {\n    getChannel({\n      variables: {\n        url: \"\".concat(communityUrl, \"/\").concat(channelUrl)\n      }\n    });\n  };\n  if (loading) {\n    return __jsx(ChatHeaderPlaceholder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    });\n  }\n  if (communityUrl === 'direct') {\n    if (!user) {\n      return __jsx(ChatHeaderPlaceholder, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }\n      });\n    }\n    var channelUsernames = channelUrl.replace('direct/', '').split('-');\n    var otherUsername = channelUsernames.indexOf(user.username) === 0 ? channelUsernames[1] : channelUsernames[0];\n    return __jsx(ChatHeaderDirect, {\n      username: otherUsername,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    });\n  }\n  return __jsx(React.Fragment, null, __jsx(S.Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, channel && __jsx(React.Fragment, null, __jsx(S.Info, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, __jsx(Channels, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }), __jsx(S.ChannelInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, __jsx(Members, {\n    membersCount: channel.community.members.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), __jsx(Topic, {\n    onChangeTopic: onChangeTopic,\n    channel: channel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }))), __jsx(S.ChatActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, __jsx(Search, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }), __jsx(More, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })))));\n};\nexport default ChatHeader;","map":{"version":3,"names":["useEffect","useContext","useRouter","useLazyQuery","useKeyboardShortcut","UserContext","AppContext","COMPANY_NAME","GET_CHANNEL","Topic","Search","More","Members","Channels","ChatHeaderDirect","ChatHeaderPlaceholder","S","ChatHeader","query","communityUrl","community","channelUrl","channel","push","user","channelLoaded","setChannelLoaded","onCompleted","getChannel","data","members","loading","variables","url","N","shallow","onChangeTopic","channelUsernames","replace","split","otherUsername","indexOf","username","length"],"sources":["/Volumes/MacData/work/ciscord-frontend.git/components/Chat/Header/ChatHeader.js"],"sourcesContent":["import { useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useLazyQuery } from '@apollo/client';\nimport { useKeyboardShortcut } from 'hooks';\n\nimport { UserContext } from 'context/UserContext';\nimport { AppContext } from 'context';\nimport { COMPANY_NAME } from 'utils/config';\nimport { GET_CHANNEL } from 'apis/Channel';\n\nimport Topic from './Topic/Topic';\nimport Search from './Search/Search';\nimport More from './More';\nimport Members from './Members';\nimport Channels from './Channels/Channels';\n\nimport ChatHeaderDirect from './ChatHeaderDirect';\nimport ChatHeaderPlaceholder from './ChatHeader.placeholder';\nimport * as S from './ChatHeader.styled';\n\nconst ChatHeader = () => {\n  const {\n    query: { community: communityUrl, channel: channelUrl },\n    push,\n  } = useRouter();\n  const { user } = useContext(UserContext);\n  const { channelLoaded, setChannelLoaded } = useContext(AppContext);\n  const [\n    getChannel,\n    { data: { channel = { community: { members: [] } } } = {}, loading },\n  ] = useLazyQuery(GET_CHANNEL, {\n    onCompleted: () => {\n      if (!channelLoaded) {\n        setChannelLoaded(true);\n      }\n    },\n  });\n\n  useEffect(() => {\n    getChannel({ variables: { url: `${communityUrl}/${channelUrl}` } });\n  }, [communityUrl, channelUrl]);\n\n  useKeyboardShortcut({\n    N: () =>\n      push(`/[company]/[community]/new-channel`, `/${COMPANY_NAME()}/${communityUrl}/new-channel`, {\n        shallow: true,\n      }),\n  });\n\n  const onChangeTopic = () => {\n    getChannel({ variables: { url: `${communityUrl}/${channelUrl}` } });\n  };\n\n  if (loading) {\n    return <ChatHeaderPlaceholder />;\n  }\n\n  if (communityUrl === 'direct') {\n    if (!user) {\n      return <ChatHeaderPlaceholder />;\n    }\n    const channelUsernames = channelUrl.replace('direct/', '').split('-');\n    const otherUsername =\n      channelUsernames.indexOf(user.username) === 0 ? channelUsernames[1] : channelUsernames[0];\n    return <ChatHeaderDirect username={otherUsername} />;\n  }\n\n  return (\n    <>\n      <S.Container>\n        {channel && (\n          <>\n            <S.Info>\n              <Channels />\n              <S.ChannelInfo>\n                <Members membersCount={channel.community.members.length} />\n                <Topic onChangeTopic={onChangeTopic} channel={channel} />\n              </S.ChannelInfo>\n            </S.Info>\n            <S.ChatActions>\n              <Search />\n              <More />\n            </S.ChatActions>\n          </>\n        )}\n      </S.Container>\n    </>\n  );\n};\n\nexport default ChatHeader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}