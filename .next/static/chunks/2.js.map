{"version":3,"file":"static/chunks/2.js","sources":["webpack:///./components/Chat/Input/TypingStatus/TypingStatus.js","webpack:///./components/Chat/Input/TypingStatus/TypingStatus.styled.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSubscription } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { COMPANY_NAME } from 'utils/config';\nimport { UserContext } from 'context/UserContext';\nimport * as S from './TypingStatus.styled';\n\nconst USER_TYPING_STATUS = gql`\n  subscription userTypingStatus($channelUrl: String, $tenant: String, $username: String) {\n    userTypingStatus(channelUrl: $channelUrl, tenant: $tenant, username: $username) {\n      username\n      isTyping\n    }\n  }\n`;\n\nexport default () => {\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [typingTimeouts, setTypingTimeouts] = useState({});\n  const { user } = useContext(UserContext);\n\n  const {\n    query: { channel: channelUrl, community: communityUrl },\n  } = useRouter();\n\n  const url = `${communityUrl}/${channelUrl}`;\n\n  const startTimeout = username => {\n    const timeout = {};\n\n    timeout[username] = setTimeout(() => {\n      setTypingUsers(currentTypingUsers =>\n        currentTypingUsers.filter(typingUsername => typingUsername !== username)\n      );\n    }, 3000);\n\n    setTypingTimeouts({\n      typingTimeouts,\n      ...timeout,\n    });\n  };\n\n  useSubscription(USER_TYPING_STATUS, {\n    variables: {\n      channelUrl: url,\n      tenant: COMPANY_NAME(),\n      username: (user && user.username) || '',\n    },\n    onSubscriptionData: ({\n      subscriptionData: {\n        data: { userTypingStatus },\n      },\n    }) => {\n      const userIndex = typingUsers.findIndex(username => userTypingStatus.username === username);\n\n      clearTimeout(typingTimeouts[userTypingStatus.username]);\n\n      if (userTypingStatus.isTyping) {\n        if (userIndex === -1) {\n          setTypingUsers([...typingUsers, userTypingStatus.username]);\n        }\n\n        startTimeout(userTypingStatus.username);\n      } else if (userIndex !== -1) {\n        setTypingUsers(typingUsers.filter(username => username !== userTypingStatus.username));\n      }\n    },\n  });\n\n  const getStatusString = () => {\n    const visibleUsers = typingUsers.slice(0, 2).join(', ');\n    const moreUsers = typingUsers.length > 2 ? `and ${typingUsers.length - 2} others` : '';\n\n    return `${visibleUsers} ${moreUsers} is responding`;\n  };\n\n  return (\n    typingUsers.length > 0 && (\n      <S.Container>\n        <span style={{ marginRight: 5 }}>{getStatusString()}</span>\n        <S.Circle />\n        <S.Circle />\n        <S.Circle />\n      </S.Container>\n    )\n  );\n};\n","import styled, { keyframes } from 'styled-components';\n\nconst jump = keyframes`\n  0% {\n    transform: translateY(0);\n  }\n  33% {\n    transform: translateY(-5px);\n  }\n  66% {\n    transform: translateY(5px);\n  }\n  100% {\n    transform: translateY(0);\n  }\n`;\n\nexport const Container = styled.p`\n  font-weight: 400;\n  font-size: 13px;\n  color: #484848;\n  width: 300px;\n\n  position: absolute;\n  top: -20px;\n`;\n\nexport const Circle = styled.span`\n  display: inline-block;\n  width: 3px;\n  height: 3px;\n  min-width: 3px;\n  min-height: 3px;\n  background: #666566;\n  border-radius: 50%;\n  margin-bottom: 4px;\n  animation-name: ${jump};\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n  margin-left: 5px;\n  :nth-of-type(2) {\n    animation-delay: 0.1s;\n  }\n  :nth-of-type(3) {\n    animation-delay: 0.2s;\n  }\n  :nth-of-type(4) {\n    animation-delay: 0.3s;\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AADA;AAAA;AAGA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;AAAA;AAEA;AAeA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}